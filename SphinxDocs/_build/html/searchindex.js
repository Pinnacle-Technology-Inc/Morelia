Search.setIndex({"docnames": ["BasicPodProtocol", "GetUserInput", "PodCommands", "PodDevice_8206HR", "PodDevice_8229", "PodDevice_8401HR", "PodDevice_8480SC", "PodPacketHandling", "SerialCommunication", "Setup_8206HR", "Setup_8229", "Setup_8401HR", "Setup_8480SC", "Setup_PodDevices", "Setup_PodInterface", "Setup_PodParameters", "index", "modules"], "filenames": ["BasicPodProtocol.rst", "GetUserInput.rst", "PodCommands.rst", "PodDevice_8206HR.rst", "PodDevice_8229.rst", "PodDevice_8401HR.rst", "PodDevice_8480SC.rst", "PodPacketHandling.rst", "SerialCommunication.rst", "Setup_8206HR.rst", "Setup_8229.rst", "Setup_8401HR.rst", "Setup_8480SC.rst", "Setup_PodDevices.rst", "Setup_PodInterface.rst", "Setup_PodParameters.rst", "index.rst", "modules.rst"], "titles": ["BasicPodProtocol module", "GetUserInput module", "PodCommands module", "PodDevice_8206HR module", "PodDevice_8229 module", "PodDevice_8401HR module", "PodDevice_8480SC module", "PodPacketHandling module", "SerialCommunication module", "Setup_8206HR module", "Setup_8229 module", "Setup_8401HR module", "Setup_8480SC module", "Setup_PodDevices module", "Setup_PodInterface module", "Setup_PodParameters module", "Welcome to Python POD API\u2019s documentation!", "API_Modules"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "pod_bas": [0, 3, 4, 5, 6, 14, 17], "port": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "baudrat": [0, 3, 4, 5, 6, 8], "9600": [0, 3, 5, 6, 8], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "object": [0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15], "handl": [0, 3, 4, 5, 6, 8, 14], "basic": [0, 2, 14], "commun": [0, 3, 4, 5, 6, 8], "gener": [0, 14], "pod": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "devic": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "includ": [0, 13], "read": [0, 3, 5, 8, 9, 10, 11, 12, 14, 17], "write": [0, 4, 8, 9, 10, 11, 12, 14, 17], "packet": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12], "interpret": [0, 4, 7], "_port": [0, 17], "instanc": [0, 3, 5, 8, 14, 15], "level": [0, 2, 3, 5, 6, 8, 9, 11, 14], "com_io": [0, 8, 17], "which": [0, 4, 5, 6, 7, 10, 12, 13, 14], "com": [0, 8, 14, 15], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "_command": [0, 17], "pod_command": [0, 2, 17], "store": [0, 5, 13, 15], "inform": [0, 2, 7, 14], "about": 0, "command": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14], "avail": [0, 2, 8, 13, 14], "thi": [0, 2, 4, 6, 7, 12, 13, 14, 15], "flushport": [0, 17], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "reset": [0, 8], "input": [0, 1, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "output": [0, 3, 5, 6, 8], "serial": [0, 8], "buffer": [0, 8], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "true": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "ar": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15], "flush": [0, 8, 17], "fals": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "otherwis": [0, 1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15], "getdevicecommand": [0, 17], "dict": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "list": [0, 1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15], "tupl": [0, 2, 4, 5, 7, 10, 11, 12, 15], "get": [0, 1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15], "dictionari": [0, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "format": [0, 2, 4, 6, 8, 11, 12, 13], "kei": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "name": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "argument": [0, 1, 2, 4, 5, 7, 15], "ascii": [0, 2, 3, 4, 5, 7], "byte": [0, 2, 3, 4, 5, 6, 7, 8, 15], "binari": [0, 2, 3, 5, 7], "flag": [0, 1, 2, 4, 6, 7, 10, 12], "static": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "getnumberofpoddevic": [0, 17], "counter": 0, "__numpod": [0, 17], "getpodpacket": [0, 17], "cmd": [0, 2, 4], "payload": [0, 4, 5, 6, 7, 11, 12], "none": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "build": [0, 4, 5, 7, 9, 10, 11, 12, 14, 15], "via": 0, "If": [0, 1, 2, 4, 7, 8, 13, 15], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "give": [0, 4, 13], "method": [0, 1, 3, 4, 5, 6, 7, 10, 12, 13, 14], "convert": [0, 3, 4, 5, 6, 7, 8, 14], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "length": [0, 7], "expect": 0, "given": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14], "must": [0, 4, 7, 13, 14, 15], "correct": [0, 14], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "option": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14], "when": [0, 1, 2, 3, 4, 9, 10, 11, 12, 14, 15], "set": [0, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15], "default": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14], "rais": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15], "except": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15], "doe": [0, 2, 3, 5, 7, 8, 15], "exist": [0, 1, 2, 5, 8, 14, 15], "requir": [0, 7, 11, 12, 13, 14], "getu": [0, 17], "u": 0, "hexadecim": [0, 2, 4, 7], "charact": [0, 2, 4, 7, 8, 15], "unsign": [0, 2, 4, 5, 7], "bit": [0, 2, 3, 4, 5, 6, 7, 12], "8": [0, 2, 3, 4], "16": [0, 2, 3, 4, 5, 7], "32": [0, 2], "enter": [0, 13], "ani": [0, 13, 14], "other": [0, 4, 9, 10, 11, 12, 14], "novalu": [0, 2, 17], "readpodpacket": [0, 17], "validatechecksum": [0, 3, 5], "timeout_sec": [0, 8], "float": [0, 1, 3, 5, 8, 11, 13, 14, 15], "5": [0, 2, 5, 8, 11, 15], "complet": [0, 3, 5, 7, 8, 13], "either": [0, 3, 4, 15], "standard": [0, 2, 3, 5, 7], "begin": [0, 3, 5, 14, 15], "stx": [0, 3, 5, 7, 17], "end": [0, 1, 3, 5, 7, 8, 13, 14], "etx": [0, 3, 5, 7, 17], "first": [0, 4, 7, 8, 14], "start": [0, 7, 9, 10, 11, 12, 14], "recurs": 0, "valid": [0, 1, 3, 5, 10, 12, 13, 14], "checksum": [0, 3, 5, 7, 17], "skip": [0, 3, 5], "time": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15], "second": [0, 4, 5, 6, 8, 9, 11, 12, 13, 15], "wait": [0, 8], "data": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14], "mai": [0, 4, 13], "unformat": 0, "someth": 0, "setbaudrateofdevic": [0, 17], "open": [0, 8, 9, 10, 11, 12, 14], "chang": 0, "baud": [0, 8], "rate": [0, 8, 9, 11, 15], "success": [0, 9, 10, 11, 12, 14], "translatepodpacket": [0, 3, 4, 5, 6, 17], "msg": [0, 3, 4, 5, 6, 7], "determin": [0, 3, 4], "translat": [0, 3, 4, 6], "accordingli": [0, 3], "A": [0, 3, 4, 5, 6, 11, 14, 15], "unpack": [0, 3, 5], "messag": [0, 1, 3, 5, 7, 8, 11], "translatepodpacket_binari": [0, 3, 5, 17], "variabl": [0, 15], "encod": [0, 3, 4, 5, 7], "leav": 0, "translatepodpacket_standard": [0, 17], "applic": 0, "unpackpodpacket": [0, 17], "unpackpodpacket_binari": [0, 3, 5, 17], "The": [0, 4, 5, 6, 7, 10, 13, 14, 15], "have": [0, 3, 4, 5, 13, 14, 15], "minimum": [0, 1, 3, 5], "2": [0, 2, 3, 4, 5, 6, 7, 11, 13, 15], "3": [0, 2, 3, 4, 5, 6, 9, 13], "4": [0, 2, 3, 4, 5, 7], "after": [0, 3, 5], "unpackpodpacket_standard": [0, 17], "writepacket": [0, 4, 17], "wa": [0, 2, 4, 8, 9, 10, 11, 12, 14], "written": [0, 4, 14], "writeread": [0, 17], "onc": 0, "respons": 0, "_readpodpacket_recurs": [0, 17], "next": 0, "check": [0, 1, 2, 3, 4, 5, 6, 13, 14], "allow": [0, 13], "Then": [0, 7, 8, 13], "cannot": 0, "invalid": [0, 1, 4, 7, 13, 15], "_read_binari": [0, 3, 5, 17], "prepacket": [0, 3, 5], "remain": [0, 4], "part": [0, 6], "It": [0, 7], "how": [0, 14], "long": [0, 4, 7], "from": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15], "mani": [0, 14], "1": [0, 2, 3, 4, 5, 6, 7, 10, 11, 13, 15], "onli": [0, 14], "_read_getcommand": [0, 17], "one": [0, 4, 9, 11, 14], "up": [0, 13], "For": [0, 15], "each": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "can": [0, 4, 5, 8, 13, 14], "over": 0, "found": [0, 2], "continu": [0, 9, 11], "_read_standard": [0, 17], "_read_toetx": [0, 17], "until": [0, 8, 10, 12, 13], "restart": 0, "anywher": 0, "_validatechecksum": [0, 17], "calcul": [0, 5, 7, 9, 11, 12, 13], "match": 0, "__minbinarylength": [0, 17], "15": [0, 4], "repres": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15], "__minstandardlength": [0, 17], "0": [0, 2, 3, 4, 5, 6, 10, 11, 13, 15], "count": [0, 12], "maintain": 0, "__init__": 0, "__del__": 0, "userinput": [1, 17], "sever": [1, 15], "user": [1, 8, 9, 10, 11, 12, 13, 14], "setup": [1, 6, 9, 10, 11, 12, 13, 14, 15], "askforbool": [1, 17], "prompt": [1, 13], "ask": [1, 9, 10, 11, 12, 13, 14], "statement": 1, "request": 1, "boolean": [1, 2, 5, 7], "askforfloat": [1, 17], "askforfloatinlist": [1, 17], "goodinput": 1, "badinputmessag": 1, "error": 1, "print": [1, 13, 14], "choic": [1, 13], "askforfloatinrang": [1, 17], "maximum": 1, "thisi": 1, "unit": 1, "fall": [1, 6], "rang": [1, 7, 15], "descript": [1, 2, 14, 17], "what": [1, 13], "being": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "askforinput": [1, 17], "append": [1, 4, 8, 14], "Will": 1, "colon": 1, "askforint": [1, 17], "askforintinlist": [1, 17], "askforintinrang": [1, 17], "askforstrinlist": [1, 17], "askfortyp": [1, 17], "typecast": 1, "function": [1, 6, 9, 10, 11, 12, 13], "specif": [1, 7], "again": 1, "datatyp": 1, "cast": [1, 15], "ex": 1, "_castint": 1, "_castfloat": 1, "_caststr": 1, "askfortypeinlist": [1, 17], "askfortypeinrang": [1, 17], "numer": 1, "between": [1, 4, 15], "two": [1, 7], "askyn": [1, 17], "question": [1, 13], "y": 1, "n": 1, "ye": 1, "castfloat": [1, 17], "castint": [1, 17], "caststr": [1, 17], "checkfileext": [1, 17], "f": 1, "fisext": 1, "goodext": 1, "txt": [1, 9, 10, 11, 12, 14], "printerr": 1, "file": [1, 9, 10, 11, 12, 13, 14], "ha": [1, 4, 6, 7, 15], "extens": [1, 10, 12, 13, 14], "getfilenam": [1, 17], "filenam": [1, 9, 10, 11, 12, 13, 14], "param": 1, "getfilepath": [1, 17], "path": [1, 13, 14], "text": [1, 9, 10, 11, 12, 14], "befor": [1, 4], "manag": 2, "__command": [2, 17], "entri": [2, 13], "addcommand": [2, 17], "commandnumb": [2, 7], "commandnam": 2, "argumentbyt": 2, "returnbyt": 2, "isbinari": 2, "add": [2, 3, 4, 6], "current": [2, 4, 9, 10, 11, 12, 13, 14, 15], "mark": [2, 7], "successfulli": [2, 13, 14], "ad": 2, "could": 2, "becaus": [2, 12], "alreadi": [2, 9, 10, 11, 12, 14], "argumenthexchar": [2, 17], "hex": [2, 4], "commandnumberfromnam": [2, 17], "doescommandexist": [2, 17], "getbasiccommand": [2, 17], "creat": [2, 7, 9, 10, 11, 12, 14, 15], "6": [2, 4, 14], "7": [2, 4, 6, 12, 15], "9": [2, 5], "10": [2, 3, 9, 15], "11": [2, 15], "12": [2, 5], "getcommand": [2, 17], "content": 2, "iscommandbinari": [2, 17], "__novalu": [2, 17], "removecommand": [2, 17], "remov": [2, 7, 13, 14], "restorebasiccommand": [2, 17], "returnhexchar": [2, 17], "search": [2, 16, 17], "idx": 2, "index": [2, 16], "desir": [2, 7, 14], "u16": [2, 17], "__u16": [2, 17], "u32": [2, 17], "__u32": [2, 17], "u8": [2, 4, 5, 17], "__u8": [2, 17], "__argument": [2, 17], "__binari": [2, 17], "__descript": [2, 17], "__name": [2, 17], "item": [2, 4, 6, 7, 9, 10, 11, 12, 15], "mean": 2, "undefin": 2, "__return": [2, 17], "pod_8206hr": [3, 9, 11, 12, 17], "preampgain": [3, 5, 15, 17], "8206hr": 3, "_preampgain": [3, 5, 17], "100": [3, 4, 9, 15], "preamplifi": [3, 5, 9, 11, 15], "gain": [3, 5, 9, 11, 15], "overwrit": [3, 4, 5, 6, 10, 12], "parent": [3, 4, 5, 6, 10, 12], "ttl": [3, 5, 6, 12, 15], "binary4": 3, "channel": [3, 5, 9, 11, 15], "volt": [3, 5, 14], "ch0": 3, "ch1": 3, "ch2": 3, "separ": [3, 5], "compon": [3, 4, 5], "_binarybytestovoltag": [3, 17], "real": 3, "voltag": [3, 5, 11, 14, 15], "measur": 3, "v": [3, 5, 11, 15], "receiv": [3, 5], "bad": [3, 5], "_translatettlbyte_ascii": [3, 17], "ttlbyte": [3, 5], "One": 3, "_translatettlbyte_binari": [3, 17], "__b4binarylength": [3, 17], "__b4length": [3, 17], "pod_8229": [4, 10, 17], "19200": 4, "8229": [4, 10, 15], "buildsetdayscheduleargu": [4, 17], "dai": [4, 10, 15], "hour": [4, 10, 15], "speed": [4, 15], "week": [4, 10, 15, 17], "code": [4, 7, 11, 13], "front": 4, "hourli": 4, "schedul": [4, 10, 15, 17], "141": 4, "e": 4, "sundai": [4, 10, 15], "mondai": [4, 10, 15], "etc": 4, "increac": 4, "saturdai": [4, 15], "arrai": 4, "24": [4, 10, 15], "motor": [4, 10, 15], "off": [4, 10, 15], "all": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15], "same": 4, "multipl": [4, 7, 9, 11], "should": [4, 15], "_description_": 4, "codedayofweek": [4, 17], "understand": 4, "support": [4, 5, 10, 11, 12], "abbrevi": 4, "codedayschedul": [4, 17], "bitmask": [4, 5, 6], "statu": [4, 5], "u8x24": 4, "msb": [4, 7], "decodedayofweek": [4, 17], "human": 4, "readabl": 4, "decodedayschedul": [4, 17], "142": 4, "bitstr": 4, "per": [4, 8], "everi": [4, 15], "decodelcdschedul": [4, 17], "202": 4, "lcd": 4, "weekdai": [4, 15], "23": [4, 5], "state": [4, 5, 10, 12], "getcurrenttim": [4, 17], "140": 4, "minut": 4, "month": 4, "year": 4, "without": 4, "centuri": 4, "so": 4, "2023": 4, "addit": [4, 6, 14], "special": [4, 6], "uniqu": [4, 6], "_codedecimalashex": [4, 17], "val": [4, 7], "equal": 4, "some": 4, "need": 4, "decim": [4, 13, 14], "do": [4, 13], "exampl": [4, 7], "want": [4, 10, 12, 13, 14], "22": 4, "call": 4, "_decodedecimalashex": [4, 17], "represent": [4, 14], "In": 4, "word": 4, "revers": [4, 15], "_validate_dai": [4, 17], "incorrectli": 4, "its": 4, "repsect": 4, "_validate_hour": [4, 17], "exactli": [4, 15], "_validate_schedul": [4, 17], "size": [4, 7], "incorrect": [4, 7], "_validate_spe": [4, 17], "pod_8401hr": [5, 11, 17], "ssgain": [5, 15, 17], "b": [5, 7, 15], "c": [5, 15], "d": [5, 15], "8401": [5, 11, 15], "hr": [5, 9, 11, 15], "_ssgain": [5, 17], "stage": [5, 11, 15], "four": [5, 15], "pramplifi": 5, "calculatebiasdac_getdacvalu": [5, 17], "vout": 5, "dac": 5, "bia": [5, 11, 15, 17], "048": [5, 15], "complement": [5, 7], "calculatebiasdac_getvout": [5, 17], "decodechannelbitmask": [5, 17], "ground": 5, "configur": [5, 15], "connect": [5, 9, 10, 11, 12, 13, 14, 15], "preamp": [5, 15, 17], "decodessconfigbitmask": [5, 17], "config": [5, 6, 12, 15], "ss": 5, "high": [5, 11, 15], "pass": [5, 6, 11, 15], "configurt": 5, "5hz": 5, "highpass": [5, 11, 15, 17], "dc": [5, 11, 15], "5x": [5, 15], "1x": [5, 15], "decodettlbyt": [5, 17], "dictinoari": 5, "getchannelbitmask": [5, 17], "getchannelmapforpreampdevic": [5, 17], "preampnam": 5, "map": [5, 11], "label": 5, "sensor": [5, 11], "getssconfigbitmask": [5, 17], "els": 5, "getsupportedpreampdevic": [5, 17], "getttlbitmask": [5, 17], "ext0": 5, "ext1": 5, "ttl4": 5, "ttl3": 5, "ttl2": 5, "ttl1": 5, "mask": 5, "ispreampdevicesupport": [5, 17], "__channelmapal": [5, 17], "binary5": 5, "analog": 5, "_voltage_primarychannel": [5, 17], "primari": 5, "_voltage_primarychannels_biosensor": [5, 17], "biosensor": [5, 15], "_voltage_primarychannels_eegemg": [5, 17], "eeg": [5, 15], "emg": [5, 15], "_voltage_secondarychannel": [5, 17], "secondari": 5, "__b5binarylength": [5, 17], "__b5length": [5, 17], "31": 5, "8406": 5, "2bio": 5, "bio1": 5, "bio2": 5, "nc": 5, "bio": 5, "eeg2bio": 5, "eeg1": [5, 15, 17], "se": 5, "eeg2": [5, 15, 17], "se3": 5, "eeg3": [5, 15], "se31m": 5, "se4": 5, "eeg4": 5, "sl": 5, "8407": 5, "pod_8480sc": [6, 12, 17], "8480": [6, 12], "sc": [6, 12], "decodestimulusconfigbit": [6, 17], "individu": 6, "stimulu": [6, 12, 15, 17], "decodesyncconfigbit": [6, 17], "sync": [6, 12, 15], "decodettlconfigbit": [6, 17], "interg": 6, "stimulusconfigbit": [6, 17], "optoelec": 6, "monobiphas": 6, "simul": 6, "incom": 6, "later": 6, "102": 6, "opto": 6, "electr": 6, "monophas": 6, "biphas": 6, "simultan": 6, "seventh": 6, "syncconfigbit": [6, 17], "sync_level": 6, "sync_idl": 6, "signal_trigg": 6, "127": 6, "trigger": 6, "signal": [6, 8, 10, 12], "There": [6, 14, 15], "fit": 6, "ttlconfigbit": [6, 17], "stimtrig": 6, "input_sync": 6, "109": 6, "accept": 6, "rise": 6, "edg": 6, "event": 6, "notif": 6, "normal": 6, "oper": 6, "pin": 6, "pod_packet": [7, 17], "collect": [7, 9, 11], "asciibytestoint_split": [7, 17], "keeptopbit": 7, "cutbottombit": 7, "hold": 7, "posit": [7, 15], "lsb": 7, "result": 7, "asciibytestoint": [7, 17], "msg_b": 7, "sign": 7, "convers": 7, "neg": 7, "fail": [7, 14], "binarybytestoint": [7, 17], "byteord": 7, "big": 7, "order": [7, 15], "endian": 7, "littl": 7, "binarybytestoint_split": [7, 17], "buildpodpacket_standard": [7, 17], "bytesin": 7, "achiev": 7, "sum": 7, "invert": 7, "take": [7, 11], "last": 7, "transmiss": 7, "0x03": 7, "inttoasciibyt": [7, 17], "numchar": 7, "usabl": 7, "uppercas": 7, "lastli": 7, "ensur": 7, "final": 7, "numbyt": [7, 8], "show": 7, "0002": 7, "0x30": 7, "0x32": 7, "payloadtobyt": [7, 17], "argsiz": 7, "wrong": 7, "0x02": 7, "twoscompl": [7, 17], "nbit": 7, "__serialinst": [8, 17], "closeserialport": [8, 17], "close": 8, "getcomportslist": [8, 17], "find": 8, "comput": 8, "them": [8, 14], "access": 8, "getportnam": [8, 17], "isserialclos": [8, 17], "isserialopen": [8, 17], "openserialport": [8, 17], "specifi": 8, "timeout": 8, "readlin": [8, 17], "new": [8, 13, 14], "line": [8, 14], "readuntil": [8, 17], "eol": 8, "setbaudr": [8, 17], "__buildportnam": [8, 17], "setup_interfac": [9, 10, 11, 12, 13, 14, 17], "provid": [9, 10, 11, 12, 14], "8206": [9, 11, 15], "getdevicenam": [9, 10, 11, 12, 14, 17], "stopstream": [9, 10, 11, 12, 14, 17], "stop": [9, 10, 11, 12, 13, 14], "stream": [9, 10, 11, 12, 13, 14, 17], "_choosepreampgain": [9, 17], "_connectpoddevic": [9, 10, 11, 12, 14, 17], "devicenum": [9, 10, 11, 12, 14], "deviceparam": [9, 10, 11, 12, 14], "params_8206hr": [9, 15, 17], "_getpoddeviceparametert": [9, 10, 11, 12, 14, 17], "texttabl": [9, 10, 11, 12, 14], "tabl": [9, 10, 11, 12, 14], "_getparam_onepoddevic": [9, 10, 11, 12, 14, 17], "forbiddennam": [9, 10, 11, 12, 14], "_opensavefile_edf": [9, 10, 11, 12, 14, 17], "fname": [9, 10, 11, 12, 14], "devnum": [9, 10, 11, 12, 14], "edfwrit": [9, 11, 14], "edf": [9, 10, 11, 12, 14], "header": [9, 10, 11, 12, 14], "_opensavefile_txt": [9, 10, 11, 12, 14, 17], "iobas": [9, 10, 11, 12, 14], "column": [9, 10, 11, 12, 14], "date": [9, 10, 11, 12, 14], "top": [9, 10, 11, 12, 14], "_physical_bound_uv": [9, 11, 17], "2046": [9, 11], "max": [9, 11], "min": [9, 11], "physic": [9, 11], "uv": [9, 11, 14], "_streamthread": [9, 10, 11, 12, 14, 17], "thread": [9, 10, 11, 12, 13, 14], "save": [9, 10, 11, 12, 13, 14], "_streamuntilstop": [9, 10, 11, 12, 17], "sampler": [9, 11, 15, 17], "look": [9, 11], "averag": [9, 11], "differ": [9, 11, 13, 15], "across": [9, 11], "seri": [9, 11], "sampl": [9, 11, 15], "hz": [9, 11, 15], "_writedatatofile_edf": [9, 11, 17], "numpi": [9, 11], "ndarrai": [9, 11], "np": [9, 11], "_writedatatofile_txt": [9, 11, 17], "t": [9, 11], "stamp": [9, 11], "_streammod": [10, 12, 17], "getsupportedfileextens": [10, 12, 14, 17], "updat": [10, 12], "params_8229": [10, 15, 17], "_getscheduleforweek": [10, 17], "would": [10, 12], "Not": [10, 12], "filetyp": [10, 12], "log": [10, 12], "reciev": [10, 12], "decid": [10, 12], "firmwar": [11, 13], "OR": [11, 13], "higher": [11, 13], "_codedcmod": [11, 17], "dcmode": [11, 15, 17], "mode": [11, 15, 17], "vbia": [11, 15], "agnd": [11, 15], "_codehighpass": [11, 17], "params_8401hr": [11, 15, 17], "_getpreampdevicenam": [11, 17], "select": [11, 13, 14, 15], "mous": [11, 15], "rat": [11, 15], "chosen": [11, 13], "_niceabcdtabletext": [11, 17], "abcdvalu": 11, "channelmap": 11, "abcdvaluedict": 11, "abcd": 11, "newlin": [11, 14], "_setbia": [11, 17], "channelnam": 11, "048v": 11, "thebia": 11, "_setdcmod": [11, 17], "_setformappedchannel": [11, 17], "func": [11, 13], "exclud": [11, 14], "_sethighpass": [11, 17], "10hz": 11, "frequenc": 11, "_setlowpass": [11, 17], "low": [11, 15], "21": [11, 15], "15000hz": 11, "_setpreampgain": [11, 17], "_setssgain": [11, 17], "_name": 12, "_chooseperiod": [12, 17], "period": 12, "seper": 12, "period_m": 12, "period_u": 12, "third": 12, "millisec": 12, "microsec": 12, "_chooserepeat": [12, 17], "puls": 12, "perform": [12, 13, 14], "repeat": 12, "_choosestimulusconfig": [12, 17], "_choosesyncconfig": [12, 17], "_choosewidth": [12, 17], "width": 12, "width_m": 12, "width_u": 12, "fourth": 12, "fifth": 12, "params_8480sc": [12, 15, 17], "pod_8480": 12, "_ttlsetup": [12, 17], "savefiledict": 13, "podparametersdict": [13, 14], "setup_podparamet": [13, 14, 16, 17], "params_interfac": [13, 14, 15, 17], "_setup_poddevic": [13, 17], "subclass": [13, 14], "_option": [13, 17], "getopt": [13, 17], "getpodparametersinit": [13, 14, 17], "initi": 13, "rtype": [13, 14], "getsavefilenam": [13, 14, 17], "run": [13, 17], "loop": 13, "quit": 13, "setuppodparamet": [13, 14, 17], "setupsavefil": [13, 17], "savefil": 13, "directori": 13, "_askopt": [13, 17], "_asktostopstream": [13, 17], "press": 13, "program": 13, "_askuserfordevic": [13, 17], "thei": [13, 14], "_checkforvalidparam": [13, 17], "correctli": 13, "respect": 13, "empti": [13, 14, 15], "paramat": 13, "_connectnewdevic": [13, 17], "_dooption": [13, 17], "associ": 13, "_editcheckconnect": [13, 17], "displai": [13, 14], "edit": [13, 14], "reconnect": 13, "_editsavefilepath": [13, 17], "_getchosendevicetyp": [13, 17], "_getparam": [13, 17], "whose": [13, 14], "_printinitcod": [13, 17], "setuppoddevic": [13, 14], "_printopt": [13, 17], "_reconnect": [13, 17], "were": 13, "_removedevic": [13, 14, 17], "ro": 13, "delet": [13, 14], "_set_setup_poddevic": [13, 17], "varaibl": 13, "_showcurrentset": [13, 17], "_stream": [13, 17], "execut": 13, "_streamalldevic": [13, 17], "click": 13, "_timefunc": [13, 17], "execult": 13, "round": [13, 14], "place": [13, 14], "interfac": [14, 15], "implement": 14, "py": 14, "design": 14, "children": 14, "_poddevic": [14, 17], "_podparametersdict": [14, 17], "_savefilenam": [14, 17], "ext": 14, "addpoddevic": [14, 17], "aredeviceparamsvalid": [14, 17], "paramdict": 14, "connectallpoddevic": [14, 17], "displaypoddeviceparamet": [14, 17], "where": [14, 15], "printsavefil": [14, 17], "note": 14, "setupfilenam": [14, 17], "known": 14, "test": 14, "validateparam": [14, 17], "everyth": 14, "_buildfilenam": [14, 17], "_chooseport": [14, 17], "forbidden": 14, "_disconnectallpoddevic": [14, 17], "disconnect": 14, "obejct": 14, "_editparam": [14, 17], "re": [14, 15], "_getforbiddennam": [14, 17], "activ": 14, "_getparam_allpoddevic": [14, 17], "_getportslist": [14, 17], "_gettimeheader_fortxt": [14, 17], "_opensavefil": [14, 17], "_printdevicenumb": [14, 17], "num": 14, "titl": 14, "more": 14, "than": 14, "_selectdevicefromdict": [14, 17], "action": 14, "_setnumberofdevic": [14, 17], "_testdeviceconnect": [14, 17], "send": 14, "ping": 14, "_testdeviceconnection_al": [14, 17], "_uv": [14, 17], "microvolt": 14, "preamplifiergain": [15, 17], "lowpass": [15, 17], "checkforvalidparam": 15, "2000": 15, "10x": 15, "100x": 15, "500": 15, "filter": 15, "eeg3_emg": [15, 17], "getinit": [15, 17], "constructor": 15, "_checkparam": [15, 17], "throw": 15, "preamplidi": 15, "lowpasslabel": [15, 17], "describ": 15, "systemid": [15, 17], "motordirect": [15, 17], "motorspe": [15, 17], "randomrevers": [15, 17], "reversebasetim": [15, 17], "reversevartim": [15, 17], "id": 15, "system": 15, "clockwis": 15, "counterclockwis": 15, "percentag": 15, "enabl": 15, "random": 15, "manual": 15, "pc": 15, "control": 15, "intern": 15, "buildemptyschedul": [15, 17], "zero": 15, "sec": 15, "tuesdai": 15, "wednesdai": 15, "thursdai": 15, "fridai": 15, "hoursperdai": [15, 17], "preampdevic": [15, 17], "muxmod": [15, 17], "20000": 15, "mux": 15, "15000": 15, "channellabel": [15, 17], "ledcurr": [15, 17], "ttlpullup": [15, 17], "estimcurr": [15, 17], "syncconfig": [15, 17], "ttlsetup": [15, 17], "1023": 15, "led": 15, "600": 15, "ma": 15, "both": 15, "pullup": 15, "disabl": 15, "non": 15, "estim": 15, "member": 15, "curent": 15, "estimcurrent_ch0": [15, 17], "estimcurrent_ch1": [15, 17], "ledcurrent_ch0": [15, 17], "he": 15, "ledcurrent_ch1": [15, 17], "_fixtypeintupl": [15, 17], "arr": 15, "itemtyp": 15, "retyp": 15, "arguemnt": 15, "api_modul": 16, "basicpodprotocol": [16, 17], "modul": [16, 17], "getuserinput": [16, 17], "podcommand": [16, 17], "poddevice_8206hr": [16, 17], "poddevice_8229": [16, 17], "poddevice_8401hr": [16, 17], "poddevice_8480sc": [16, 17], "podpackethandl": [16, 17], "serialcommun": [16, 17], "setup_8206hr": [16, 17], "setup_8229": [16, 17], "setup_8401hr": [16, 17], "setup_8480sc": [16, 17], "setup_poddevic": [16, 17], "setup_podinterfac": [16, 17], "page": 16}, "objects": {"": [[0, 0, 0, "-", "BasicPodProtocol"], [1, 0, 0, "-", "GetUserInput"], [2, 0, 0, "-", "PodCommands"], [3, 0, 0, "-", "PodDevice_8206HR"], [4, 0, 0, "-", "PodDevice_8229"], [5, 0, 0, "-", "PodDevice_8401HR"], [6, 0, 0, "-", "PodDevice_8480SC"], [7, 0, 0, "-", "PodPacketHandling"], [8, 0, 0, "-", "SerialCommunication"], [9, 0, 0, "-", "Setup_8206HR"], [10, 0, 0, "-", "Setup_8229"], [11, 0, 0, "-", "Setup_8401HR"], [12, 0, 0, "-", "Setup_8480SC"], [13, 0, 0, "-", "Setup_PodDevices"], [14, 0, 0, "-", "Setup_PodInterface"], [15, 0, 0, "-", "Setup_PodParameters"]], "BasicPodProtocol": [[0, 1, 1, "", "POD_Basics"]], "BasicPodProtocol.POD_Basics": [[0, 2, 1, "", "FlushPort"], [0, 2, 1, "", "GetDeviceCommands"], [0, 2, 1, "", "GetNumberOfPODDevices"], [0, 2, 1, "", "GetPODpacket"], [0, 2, 1, "", "GetU"], [0, 2, 1, "", "ReadPODpacket"], [0, 2, 1, "", "SetBaudrateOfDevice"], [0, 2, 1, "", "TranslatePODpacket"], [0, 2, 1, "", "TranslatePODpacket_Binary"], [0, 2, 1, "", "TranslatePODpacket_Standard"], [0, 2, 1, "", "UnpackPODpacket"], [0, 2, 1, "", "UnpackPODpacket_Binary"], [0, 2, 1, "", "UnpackPODpacket_Standard"], [0, 2, 1, "", "WritePacket"], [0, 2, 1, "", "WriteRead"], [0, 2, 1, "", "_ReadPODpacket_Recursive"], [0, 2, 1, "", "_Read_Binary"], [0, 2, 1, "", "_Read_GetCommand"], [0, 2, 1, "", "_Read_Standard"], [0, 2, 1, "", "_Read_ToETX"], [0, 2, 1, "", "_ValidateChecksum"], [0, 3, 1, "", "__MINBINARYLENGTH"], [0, 3, 1, "", "__MINSTANDARDLENGTH"], [0, 3, 1, "", "__numPod"], [0, 3, 1, "", "_commands"], [0, 3, 1, "", "_port"]], "GetUserInput": [[1, 1, 1, "", "UserInput"]], "GetUserInput.UserInput": [[1, 2, 1, "", "AskForBool"], [1, 2, 1, "", "AskForFloat"], [1, 2, 1, "", "AskForFloatInList"], [1, 2, 1, "", "AskForFloatInRange"], [1, 2, 1, "", "AskForInput"], [1, 2, 1, "", "AskForInt"], [1, 2, 1, "", "AskForIntInList"], [1, 2, 1, "", "AskForIntInRange"], [1, 2, 1, "", "AskForStrInList"], [1, 2, 1, "", "AskForType"], [1, 2, 1, "", "AskForTypeInList"], [1, 2, 1, "", "AskForTypeInRange"], [1, 2, 1, "", "AskYN"], [1, 2, 1, "", "CastFloat"], [1, 2, 1, "", "CastInt"], [1, 2, 1, "", "CastStr"], [1, 2, 1, "", "CheckFileExt"], [1, 2, 1, "", "GetFileName"], [1, 2, 1, "", "GetFilePath"]], "PodCommands": [[2, 1, 1, "", "POD_Commands"]], "PodCommands.POD_Commands": [[2, 2, 1, "", "AddCommand"], [2, 2, 1, "", "ArgumentHexChar"], [2, 2, 1, "", "CommandNumberFromName"], [2, 2, 1, "", "Description"], [2, 2, 1, "", "DoesCommandExist"], [2, 2, 1, "", "GetBasicCommands"], [2, 2, 1, "", "GetCommands"], [2, 2, 1, "", "IsCommandBinary"], [2, 2, 1, "", "NoValue"], [2, 2, 1, "", "RemoveCommand"], [2, 2, 1, "", "RestoreBasicCommands"], [2, 2, 1, "", "ReturnHexChar"], [2, 2, 1, "", "Search"], [2, 2, 1, "", "U16"], [2, 2, 1, "", "U32"], [2, 2, 1, "", "U8"], [2, 3, 1, "", "__ARGUMENTS"], [2, 3, 1, "", "__BINARY"], [2, 3, 1, "", "__DESCRIPTION"], [2, 3, 1, "", "__NAME"], [2, 3, 1, "", "__NOVALUE"], [2, 3, 1, "", "__RETURNS"], [2, 3, 1, "", "__U16"], [2, 3, 1, "", "__U32"], [2, 3, 1, "", "__U8"], [2, 3, 1, "", "__commands"]], "PodDevice_8206HR": [[3, 1, 1, "", "POD_8206HR"]], "PodDevice_8206HR.POD_8206HR": [[3, 2, 1, "", "TranslatePODpacket"], [3, 2, 1, "", "TranslatePODpacket_Binary"], [3, 2, 1, "", "UnpackPODpacket_Binary"], [3, 2, 1, "", "_BinaryBytesToVoltage"], [3, 2, 1, "", "_Read_Binary"], [3, 2, 1, "", "_TranslateTTLbyte_ASCII"], [3, 2, 1, "", "_TranslateTTLbyte_Binary"], [3, 3, 1, "", "__B4BINARYLENGTH"], [3, 3, 1, "", "__B4LENGTH"], [3, 3, 1, "", "_preampGain"]], "PodDevice_8229": [[4, 1, 1, "", "POD_8229"]], "PodDevice_8229.POD_8229": [[4, 2, 1, "", "BuildSetDayScheduleArgument"], [4, 2, 1, "", "CodeDayOfWeek"], [4, 2, 1, "", "CodeDaySchedule"], [4, 2, 1, "", "DecodeDayOfWeek"], [4, 2, 1, "", "DecodeDaySchedule"], [4, 2, 1, "", "DecodeLCDSchedule"], [4, 2, 1, "", "GetCurrentTime"], [4, 2, 1, "", "TranslatePODpacket"], [4, 2, 1, "", "WritePacket"], [4, 2, 1, "", "_CodeDecimalAsHex"], [4, 2, 1, "", "_DecodeDecimalAsHex"], [4, 2, 1, "", "_Validate_Day"], [4, 2, 1, "", "_Validate_Hours"], [4, 2, 1, "", "_Validate_Schedule"], [4, 2, 1, "", "_Validate_Speed"]], "PodDevice_8401HR": [[5, 1, 1, "", "POD_8401HR"]], "PodDevice_8401HR.POD_8401HR": [[5, 2, 1, "", "CalculateBiasDAC_GetDACValue"], [5, 2, 1, "", "CalculateBiasDAC_GetVout"], [5, 2, 1, "", "DecodeChannelBitmask"], [5, 2, 1, "", "DecodeSSConfigBitmask"], [5, 2, 1, "", "DecodeTTLByte"], [5, 2, 1, "", "GetChannelBitmask"], [5, 2, 1, "", "GetChannelMapForPreampDevice"], [5, 2, 1, "", "GetSSConfigBitmask"], [5, 2, 1, "", "GetSupportedPreampDevices"], [5, 2, 1, "", "GetTTLbitmask"], [5, 2, 1, "", "IsPreampDeviceSupported"], [5, 2, 1, "", "TranslatePODpacket"], [5, 2, 1, "", "TranslatePODpacket_Binary"], [5, 2, 1, "", "UnpackPODpacket_Binary"], [5, 2, 1, "", "_Read_Binary"], [5, 2, 1, "", "_Voltage_PrimaryChannels"], [5, 2, 1, "", "_Voltage_PrimaryChannels_Biosensor"], [5, 2, 1, "", "_Voltage_PrimaryChannels_EEGEMG"], [5, 2, 1, "", "_Voltage_SecondaryChannels"], [5, 3, 1, "", "__B5BINARYLENGTH"], [5, 3, 1, "", "__B5LENGTH"], [5, 3, 1, "", "__CHANNELMAPALL"], [5, 3, 1, "", "_preampGain"], [5, 3, 1, "", "_ssGain"]], "PodDevice_8480SC": [[6, 1, 1, "", "POD_8480SC"]], "PodDevice_8480SC.POD_8480SC": [[6, 2, 1, "", "DecodeStimulusConfigBits"], [6, 2, 1, "", "DecodeSyncConfigBits"], [6, 2, 1, "", "DecodeTTlConfigBits"], [6, 2, 1, "", "StimulusConfigBits"], [6, 2, 1, "", "SyncConfigBits"], [6, 2, 1, "", "TranslatePODpacket"], [6, 2, 1, "", "TtlConfigBits"]], "PodPacketHandling": [[7, 1, 1, "", "POD_Packets"]], "PodPacketHandling.POD_Packets": [[7, 2, 1, "", "ASCIIbytesToInt_Split"], [7, 2, 1, "", "AsciiBytesToInt"], [7, 2, 1, "", "BinaryBytesToInt"], [7, 2, 1, "", "BinaryBytesToInt_Split"], [7, 2, 1, "", "BuildPODpacket_Standard"], [7, 2, 1, "", "Checksum"], [7, 2, 1, "", "ETX"], [7, 2, 1, "", "IntToAsciiBytes"], [7, 2, 1, "", "PayloadToBytes"], [7, 2, 1, "", "STX"], [7, 2, 1, "", "TwosComplement"]], "SerialCommunication": [[8, 1, 1, "", "COM_io"]], "SerialCommunication.COM_io": [[8, 2, 1, "", "CloseSerialPort"], [8, 2, 1, "", "Flush"], [8, 2, 1, "", "GetCOMportsList"], [8, 2, 1, "", "GetPortName"], [8, 2, 1, "", "IsSerialClosed"], [8, 2, 1, "", "IsSerialOpen"], [8, 2, 1, "", "OpenSerialPort"], [8, 2, 1, "", "Read"], [8, 2, 1, "", "ReadLine"], [8, 2, 1, "", "ReadUntil"], [8, 2, 1, "", "SetBaudrate"], [8, 2, 1, "", "Write"], [8, 2, 1, "", "__BuildPortName"], [8, 3, 1, "", "__serialInst"]], "Setup_8206HR": [[9, 1, 1, "", "Setup_8206HR"]], "Setup_8206HR.Setup_8206HR": [[9, 2, 1, "", "GetDeviceName"], [9, 2, 1, "", "StopStream"], [9, 2, 1, "", "_ChoosePreampGain"], [9, 2, 1, "", "_ConnectPODdevice"], [9, 2, 1, "", "_GetPODdeviceParameterTable"], [9, 2, 1, "", "_GetParam_onePODdevice"], [9, 2, 1, "", "_OpenSaveFile_EDF"], [9, 2, 1, "", "_OpenSaveFile_TXT"], [9, 3, 1, "", "_PHYSICAL_BOUND_uV"], [9, 2, 1, "", "_StreamThreading"], [9, 2, 1, "", "_StreamUntilStop"], [9, 2, 1, "", "_WriteDataToFile_EDF"], [9, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_8229": [[10, 1, 1, "", "Setup_8229"]], "Setup_8229.Setup_8229": [[10, 2, 1, "", "GetDeviceName"], [10, 2, 1, "", "GetSupportedFileExtensions"], [10, 2, 1, "", "StopStream"], [10, 2, 1, "", "_ConnectPODdevice"], [10, 2, 1, "", "_GetPODdeviceParameterTable"], [10, 2, 1, "", "_GetParam_onePODdevice"], [10, 2, 1, "", "_GetScheduleForWeek"], [10, 2, 1, "", "_OpenSaveFile_EDF"], [10, 2, 1, "", "_OpenSaveFile_TXT"], [10, 2, 1, "", "_StreamThreading"], [10, 2, 1, "", "_StreamUntilStop"], [10, 3, 1, "", "_streamMode"]], "Setup_8401HR": [[11, 1, 1, "", "Setup_8401HR"]], "Setup_8401HR.Setup_8401HR": [[11, 2, 1, "", "GetDeviceName"], [11, 2, 1, "", "StopStream"], [11, 2, 1, "", "_CodeDCmode"], [11, 2, 1, "", "_CodeHighpass"], [11, 2, 1, "", "_ConnectPODdevice"], [11, 2, 1, "", "_GetPODdeviceParameterTable"], [11, 2, 1, "", "_GetParam_onePODdevice"], [11, 2, 1, "", "_GetPreampDeviceName"], [11, 2, 1, "", "_NiceABCDtableText"], [11, 2, 1, "", "_OpenSaveFile_EDF"], [11, 2, 1, "", "_OpenSaveFile_TXT"], [11, 3, 1, "", "_PHYSICAL_BOUND_uV"], [11, 2, 1, "", "_SetBias"], [11, 2, 1, "", "_SetDCMode"], [11, 2, 1, "", "_SetForMappedChannels"], [11, 2, 1, "", "_SetHighpass"], [11, 2, 1, "", "_SetLowpass"], [11, 2, 1, "", "_SetPreampGain"], [11, 2, 1, "", "_SetSSGain"], [11, 2, 1, "", "_StreamThreading"], [11, 2, 1, "", "_StreamUntilStop"], [11, 2, 1, "", "_WriteDataToFile_EDF"], [11, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_8480SC": [[12, 1, 1, "", "Setup_8480SC"]], "Setup_8480SC.Setup_8480SC": [[12, 2, 1, "", "GetDeviceName"], [12, 2, 1, "", "GetSupportedFileExtensions"], [12, 2, 1, "", "StopStream"], [12, 2, 1, "", "_ChoosePeriod"], [12, 2, 1, "", "_ChooseRepeat"], [12, 2, 1, "", "_ChooseStimulusConfig"], [12, 2, 1, "", "_ChooseSyncConfig"], [12, 2, 1, "", "_ChooseWidth"], [12, 2, 1, "", "_ConnectPODdevice"], [12, 2, 1, "", "_GetPODdeviceParameterTable"], [12, 2, 1, "", "_GetParam_onePODdevice"], [12, 2, 1, "", "_OpenSaveFile_EDF"], [12, 2, 1, "", "_OpenSaveFile_TXT"], [12, 2, 1, "", "_StreamThreading"], [12, 2, 1, "", "_StreamUntilStop"], [12, 2, 1, "", "_TtlSetup"], [12, 3, 1, "", "_streamMode"]], "Setup_PodDevices": [[13, 1, 1, "", "Setup_PodDevices"]], "Setup_PodDevices.Setup_PodDevices": [[13, 2, 1, "", "GetOptions"], [13, 2, 1, "", "GetPODparametersInit"], [13, 2, 1, "", "GetSaveFileNames"], [13, 2, 1, "", "Run"], [13, 2, 1, "", "SetupPODparameters"], [13, 2, 1, "", "SetupSaveFile"], [13, 2, 1, "", "_AskOption"], [13, 2, 1, "", "_AskToStopStream"], [13, 2, 1, "", "_AskUserForDevices"], [13, 2, 1, "", "_CheckForValidParams"], [13, 2, 1, "", "_ConnectNewDevice"], [13, 2, 1, "", "_DoOption"], [13, 2, 1, "", "_EditCheckConnect"], [13, 2, 1, "", "_EditSaveFilePath"], [13, 2, 1, "", "_GetChosenDeviceType"], [13, 2, 1, "", "_GetParams"], [13, 2, 1, "", "_PrintInitCode"], [13, 2, 1, "", "_PrintOptions"], [13, 2, 1, "", "_Reconnect"], [13, 2, 1, "", "_RemoveDevice"], [13, 2, 1, "", "_Set_Setup_PodDevices"], [13, 3, 1, "", "_Setup_PodDevices"], [13, 2, 1, "", "_ShowCurrentSettings"], [13, 2, 1, "", "_Stream"], [13, 2, 1, "", "_StreamAllDevices"], [13, 2, 1, "", "_TimeFunc"], [13, 3, 1, "", "_options"]], "Setup_PodInterface": [[14, 1, 1, "", "Setup_Interface"]], "Setup_PodInterface.Setup_Interface": [[14, 2, 1, "", "AddPODdevice"], [14, 2, 1, "", "AreDeviceParamsValid"], [14, 2, 1, "", "ConnectAllPODdevices"], [14, 2, 1, "", "DisplayPODdeviceParameters"], [14, 2, 1, "", "GetDeviceName"], [14, 2, 1, "", "GetPODparametersInit"], [14, 2, 1, "", "GetSaveFileName"], [14, 2, 1, "", "GetSupportedFileExtensions"], [14, 2, 1, "", "PrintSaveFile"], [14, 2, 1, "", "SetupFileName"], [14, 2, 1, "", "SetupPODparameters"], [14, 2, 1, "", "StopStream"], [14, 2, 1, "", "Stream"], [14, 2, 1, "", "ValidateParams"], [14, 2, 1, "", "_BuildFileName"], [14, 2, 1, "", "_ChoosePort"], [14, 2, 1, "", "_ConnectPODdevice"], [14, 2, 1, "", "_DisconnectAllPODdevices"], [14, 2, 1, "", "_EditParams"], [14, 2, 1, "", "_GetForbiddenNames"], [14, 2, 1, "", "_GetPODdeviceParameterTable"], [14, 2, 1, "", "_GetParam_allPODdevices"], [14, 2, 1, "", "_GetParam_onePODdevice"], [14, 2, 1, "", "_GetPortsList"], [14, 2, 1, "", "_GetTimeHeader_forTXT"], [14, 2, 1, "", "_OpenSaveFile"], [14, 2, 1, "", "_OpenSaveFile_EDF"], [14, 2, 1, "", "_OpenSaveFile_TXT"], [14, 2, 1, "", "_PrintDeviceNumber"], [14, 2, 1, "", "_RemoveDevice"], [14, 2, 1, "", "_SelectDeviceFromDict"], [14, 2, 1, "", "_SetNumberOfDevices"], [14, 2, 1, "", "_StreamThreading"], [14, 2, 1, "", "_TestDeviceConnection"], [14, 2, 1, "", "_TestDeviceConnection_All"], [14, 3, 1, "", "_podDevices"], [14, 3, 1, "", "_podParametersDict"], [14, 3, 1, "", "_saveFileName"], [14, 2, 1, "", "_uV"]], "Setup_PodParameters": [[15, 1, 1, "", "Params_8206HR"], [15, 1, 1, "", "Params_8229"], [15, 1, 1, "", "Params_8401HR"], [15, 1, 1, "", "Params_8480SC"], [15, 1, 1, "", "Params_Interface"]], "Setup_PodParameters.Params_8206HR": [[15, 2, 1, "", "EEG1"], [15, 2, 1, "", "EEG2"], [15, 2, 1, "", "EEG3_EMG"], [15, 2, 1, "", "GetInit"], [15, 2, 1, "", "_CheckParams"], [15, 3, 1, "", "lowPass"], [15, 3, 1, "", "lowPassLabels"], [15, 3, 1, "", "port"], [15, 3, 1, "", "preamplifierGain"], [15, 3, 1, "", "sampleRate"]], "Setup_PodParameters.Params_8229": [[15, 2, 1, "", "BuildEmptySchedule"], [15, 2, 1, "", "GetInit"], [15, 2, 1, "", "_CheckParams"], [15, 3, 1, "", "hoursPerDay"], [15, 3, 1, "", "mode"], [15, 3, 1, "", "motorDirection"], [15, 3, 1, "", "motorSpeed"], [15, 3, 1, "", "port"], [15, 3, 1, "", "randomReverse"], [15, 3, 1, "", "reverseBaseTime"], [15, 3, 1, "", "reverseVarTime"], [15, 3, 1, "", "schedule"], [15, 3, 1, "", "systemID"], [15, 3, 1, "", "week"]], "Setup_PodParameters.Params_8401HR": [[15, 2, 1, "", "GetInit"], [15, 2, 1, "", "_CheckParams"], [15, 3, 1, "", "bias"], [15, 3, 1, "", "channelLabels"], [15, 3, 1, "", "dcMode"], [15, 3, 1, "", "highPass"], [15, 3, 1, "", "lowPass"], [15, 3, 1, "", "muxMode"], [15, 3, 1, "", "port"], [15, 3, 1, "", "preampDevice"], [15, 3, 1, "", "preampGain"], [15, 3, 1, "", "sampleRate"], [15, 3, 1, "", "ssGain"]], "Setup_PodParameters.Params_8480SC": [[15, 2, 1, "", "GetInit"], [15, 2, 1, "", "_CheckParams"], [15, 3, 1, "", "estimCurrent"], [15, 2, 1, "", "estimCurrent_CH0"], [15, 2, 1, "", "estimCurrent_CH1"], [15, 3, 1, "", "ledCurrent"], [15, 2, 1, "", "ledCurrent_CH0"], [15, 2, 1, "", "ledCurrent_CH1"], [15, 3, 1, "", "port"], [15, 3, 1, "", "preamp"], [15, 3, 1, "", "stimulus"], [15, 3, 1, "", "syncConfig"], [15, 3, 1, "", "ttlPUllups"], [15, 3, 1, "", "ttlSetup"]], "Setup_PodParameters.Params_Interface": [[15, 2, 1, "", "GetInit"], [15, 2, 1, "", "_CheckParams"], [15, 2, 1, "", "_FixTypeInTuple"], [15, 3, 1, "", "port"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"basicpodprotocol": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "getuserinput": 1, "podcommand": 2, "poddevice_8206hr": 3, "poddevice_8229": 4, "poddevice_8401hr": 5, "poddevice_8480sc": 6, "podpackethandl": 7, "serialcommun": 8, "setup_8206hr": 9, "setup_8229": 10, "setup_8401hr": 11, "setup_8480sc": 12, "setup_poddevic": 13, "setup_podinterfac": 14, "setup_podparamet": 15, "welcom": 16, "python": 16, "pod": 16, "api": 16, "": 16, "document": 16, "content": 16, "indic": 16, "tabl": 16, "api_modul": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"BasicPodProtocol module": [[0, "module-BasicPodProtocol"]], "GetUserInput module": [[1, "module-GetUserInput"]], "PodCommands module": [[2, "module-PodCommands"]], "PodDevice_8206HR module": [[3, "module-PodDevice_8206HR"]], "PodDevice_8229 module": [[4, "module-PodDevice_8229"]], "PodDevice_8401HR module": [[5, "module-PodDevice_8401HR"]], "PodDevice_8480SC module": [[6, "module-PodDevice_8480SC"]], "PodPacketHandling module": [[7, "module-PodPacketHandling"]], "SerialCommunication module": [[8, "module-SerialCommunication"]], "Setup_8206HR module": [[9, "module-Setup_8206HR"]], "Setup_8229 module": [[10, "module-Setup_8229"]], "Setup_8401HR module": [[11, "module-Setup_8401HR"]], "Setup_8480SC module": [[12, "module-Setup_8480SC"]], "Setup_PodDevices module": [[13, "module-Setup_PodDevices"]], "Setup_PodInterface module": [[14, "module-Setup_PodInterface"]], "Setup_PodParameters module": [[15, "module-Setup_PodParameters"]], "Welcome to Python POD API\u2019s documentation!": [[16, "welcome-to-python-pod-api-s-documentation"]], "Contents:": [[16, null]], "Indices and tables": [[16, "indices-and-tables"]], "API_Modules": [[17, "api-modules"]]}, "indexentries": {"basicpodprotocol": [[0, "module-BasicPodProtocol"]], "flushport() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.FlushPort"]], "getdevicecommands() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetDeviceCommands"]], "getnumberofpoddevices() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.GetNumberOfPODDevices"]], "getpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetPODpacket"]], "getu() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.GetU"]], "pod_basics (class in basicpodprotocol)": [[0, "BasicPodProtocol.POD_Basics"]], "readpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.ReadPODpacket"]], "setbaudrateofdevice() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.SetBaudrateOfDevice"]], "translatepodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket"]], "translatepodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Binary"]], "translatepodpacket_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Standard"]], "unpackpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket"]], "unpackpodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Binary"]], "unpackpodpacket_standard() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Standard"]], "writepacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WritePacket"]], "writeread() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WriteRead"]], "_readpodpacket_recursive() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._ReadPODpacket_Recursive"]], "_read_binary() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Binary"]], "_read_getcommand() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_GetCommand"]], "_read_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Standard"]], "_read_toetx() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_ToETX"]], "_validatechecksum() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics._ValidateChecksum"]], "__minbinarylength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINBINARYLENGTH"]], "__minstandardlength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINSTANDARDLENGTH"]], "__numpod (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__numPod"]], "_commands (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._commands"]], "_port (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._port"]], "module": [[0, "module-BasicPodProtocol"], [1, "module-GetUserInput"], [2, "module-PodCommands"], [3, "module-PodDevice_8206HR"], [4, "module-PodDevice_8229"], [5, "module-PodDevice_8401HR"], [6, "module-PodDevice_8480SC"], [7, "module-PodPacketHandling"], [8, "module-SerialCommunication"], [9, "module-Setup_8206HR"], [10, "module-Setup_8229"], [11, "module-Setup_8401HR"], [12, "module-Setup_8480SC"], [13, "module-Setup_PodDevices"], [14, "module-Setup_PodInterface"], [15, "module-Setup_PodParameters"]], "askforbool() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForBool"]], "askforfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloat"]], "askforfloatinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInList"]], "askforfloatinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInRange"]], "askforinput() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInput"]], "askforint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInt"]], "askforintinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInList"]], "askforintinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInRange"]], "askforstrinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForStrInList"]], "askfortype() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForType"]], "askfortypeinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInList"]], "askfortypeinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInRange"]], "askyn() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskYN"]], "castfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastFloat"]], "castint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastInt"]], "caststr() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastStr"]], "checkfileext() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CheckFileExt"]], "getfilename() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.GetFileName"]], "getfilepath() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.GetFilePath"]], "getuserinput": [[1, "module-GetUserInput"]], "userinput (class in getuserinput)": [[1, "GetUserInput.UserInput"]], "addcommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.AddCommand"]], "argumenthexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ArgumentHexChar"]], "commandnumberfromname() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.CommandNumberFromName"]], "description() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.Description"]], "doescommandexist() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.DoesCommandExist"]], "getbasiccommands() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.GetBasicCommands"]], "getcommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.GetCommands"]], "iscommandbinary() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.IsCommandBinary"]], "novalue() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.NoValue"]], "pod_commands (class in podcommands)": [[2, "PodCommands.POD_Commands"]], "podcommands": [[2, "module-PodCommands"]], "removecommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RemoveCommand"]], "restorebasiccommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RestoreBasicCommands"]], "returnhexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ReturnHexChar"]], "search() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.Search"]], "u16() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U16"]], "u32() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U32"]], "u8() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U8"]], "__arguments (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__ARGUMENTS"]], "__binary (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__BINARY"]], "__description (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__DESCRIPTION"]], "__name (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NAME"]], "__novalue (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NOVALUE"]], "__returns (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__RETURNS"]], "__u16 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U16"]], "__u32 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U32"]], "__u8 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U8"]], "__commands (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__commands"]], "pod_8206hr (class in poddevice_8206hr)": [[3, "PodDevice_8206HR.POD_8206HR"]], "poddevice_8206hr": [[3, "module-PodDevice_8206HR"]], "translatepodpacket() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR.UnpackPODpacket_Binary"]], "_binarybytestovoltage() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._BinaryBytesToVoltage"]], "_read_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._Read_Binary"]], "_translatettlbyte_ascii() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_ASCII"]], "_translatettlbyte_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_Binary"]], "__b4binarylength (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4BINARYLENGTH"]], "__b4length (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4LENGTH"]], "_preampgain (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR._preampGain"]], "buildsetdayscheduleargument() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.BuildSetDayScheduleArgument"]], "codedayofweek() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.CodeDayOfWeek"]], "codedayschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.CodeDaySchedule"]], "decodedayofweek() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeDayOfWeek"]], "decodedayschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeDaySchedule"]], "decodelcdschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeLCDSchedule"]], "getcurrenttime() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.GetCurrentTime"]], "pod_8229 (class in poddevice_8229)": [[4, "PodDevice_8229.POD_8229"]], "poddevice_8229": [[4, "module-PodDevice_8229"]], "translatepodpacket() (poddevice_8229.pod_8229 method)": [[4, "PodDevice_8229.POD_8229.TranslatePODpacket"]], "writepacket() (poddevice_8229.pod_8229 method)": [[4, "PodDevice_8229.POD_8229.WritePacket"]], "_codedecimalashex() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._CodeDecimalAsHex"]], "_decodedecimalashex() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._DecodeDecimalAsHex"]], "_validate_day() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Day"]], "_validate_hours() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Hours"]], "_validate_schedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Schedule"]], "_validate_speed() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Speed"]], "calculatebiasdac_getdacvalue() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetDACValue"]], "calculatebiasdac_getvout() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetVout"]], "decodechannelbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.DecodeChannelBitmask"]], "decodessconfigbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.DecodeSSConfigBitmask"]], "decodettlbyte() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.DecodeTTLByte"]], "getchannelbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetChannelBitmask"]], "getchannelmapforpreampdevice() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetChannelMapForPreampDevice"]], "getssconfigbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetSSConfigBitmask"]], "getsupportedpreampdevices() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetSupportedPreampDevices"]], "getttlbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetTTLbitmask"]], "ispreampdevicesupported() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.IsPreampDeviceSupported"]], "pod_8401hr (class in poddevice_8401hr)": [[5, "PodDevice_8401HR.POD_8401HR"]], "poddevice_8401hr": [[5, "module-PodDevice_8401HR"]], "translatepodpacket() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.UnpackPODpacket_Binary"]], "_read_binary() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR._Read_Binary"]], "_voltage_primarychannels() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels"]], "_voltage_primarychannels_biosensor() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_Biosensor"]], "_voltage_primarychannels_eegemg() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_EEGEMG"]], "_voltage_secondarychannels() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_SecondaryChannels"]], "__b5binarylength (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__B5BINARYLENGTH"]], "__b5length (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__B5LENGTH"]], "__channelmapall (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__CHANNELMAPALL"]], "_preampgain (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR._preampGain"]], "_ssgain (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR._ssGain"]], "decodestimulusconfigbits() (poddevice_8480sc.pod_8480sc method)": [[6, "PodDevice_8480SC.POD_8480SC.DecodeStimulusConfigBits"]], "decodesyncconfigbits() (poddevice_8480sc.pod_8480sc method)": [[6, "PodDevice_8480SC.POD_8480SC.DecodeSyncConfigBits"]], "decodettlconfigbits() (poddevice_8480sc.pod_8480sc method)": [[6, "PodDevice_8480SC.POD_8480SC.DecodeTTlConfigBits"]], "pod_8480sc (class in poddevice_8480sc)": [[6, "PodDevice_8480SC.POD_8480SC"]], "poddevice_8480sc": [[6, "module-PodDevice_8480SC"]], "stimulusconfigbits() (poddevice_8480sc.pod_8480sc static method)": [[6, "PodDevice_8480SC.POD_8480SC.StimulusConfigBits"]], "syncconfigbits() (poddevice_8480sc.pod_8480sc static method)": [[6, "PodDevice_8480SC.POD_8480SC.SyncConfigBits"]], "translatepodpacket() (poddevice_8480sc.pod_8480sc method)": [[6, "PodDevice_8480SC.POD_8480SC.TranslatePODpacket"]], "ttlconfigbits() (poddevice_8480sc.pod_8480sc static method)": [[6, "PodDevice_8480SC.POD_8480SC.TtlConfigBits"]], "asciibytestoint_split() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.ASCIIbytesToInt_Split"]], "asciibytestoint() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.AsciiBytesToInt"]], "binarybytestoint() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.BinaryBytesToInt"]], "binarybytestoint_split() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.BinaryBytesToInt_Split"]], "buildpodpacket_standard() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.BuildPODpacket_Standard"]], "checksum() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.Checksum"]], "etx() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.ETX"]], "inttoasciibytes() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.IntToAsciiBytes"]], "pod_packets (class in podpackethandling)": [[7, "PodPacketHandling.POD_Packets"]], "payloadtobytes() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.PayloadToBytes"]], "podpackethandling": [[7, "module-PodPacketHandling"]], "stx() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.STX"]], "twoscomplement() (podpackethandling.pod_packets static method)": [[7, "PodPacketHandling.POD_Packets.TwosComplement"]], "com_io (class in serialcommunication)": [[8, "SerialCommunication.COM_io"]], "closeserialport() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.CloseSerialPort"]], "flush() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.Flush"]], "getcomportslist() (serialcommunication.com_io static method)": [[8, "SerialCommunication.COM_io.GetCOMportsList"]], "getportname() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.GetPortName"]], "isserialclosed() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.IsSerialClosed"]], "isserialopen() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.IsSerialOpen"]], "openserialport() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.OpenSerialPort"]], "read() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.Read"]], "readline() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.ReadLine"]], "readuntil() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.ReadUntil"]], "serialcommunication": [[8, "module-SerialCommunication"]], "setbaudrate() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.SetBaudrate"]], "write() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.Write"]], "__buildportname() (serialcommunication.com_io method)": [[8, "SerialCommunication.COM_io.__BuildPortName"]], "__serialinst (serialcommunication.com_io attribute)": [[8, "SerialCommunication.COM_io.__serialInst"]], "getdevicename() (setup_8206hr.setup_8206hr static method)": [[9, "Setup_8206HR.Setup_8206HR.GetDeviceName"]], "setup_8206hr": [[9, "module-Setup_8206HR"]], "setup_8206hr (class in setup_8206hr)": [[9, "Setup_8206HR.Setup_8206HR"]], "stopstream() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR.StopStream"]], "_choosepreampgain() (setup_8206hr.setup_8206hr static method)": [[9, "Setup_8206HR.Setup_8206HR._ChoosePreampGain"]], "_connectpoddevice() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._GetParam_onePODdevice"]], "_opensavefile_edf() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._OpenSaveFile_TXT"]], "_physical_bound_uv (setup_8206hr.setup_8206hr attribute)": [[9, "Setup_8206HR.Setup_8206HR._PHYSICAL_BOUND_uV"]], "_streamthreading() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._StreamThreading"]], "_streamuntilstop() (setup_8206hr.setup_8206hr method)": [[9, "Setup_8206HR.Setup_8206HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8206hr.setup_8206hr static method)": [[9, "Setup_8206HR.Setup_8206HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8206hr.setup_8206hr static method)": [[9, "Setup_8206HR.Setup_8206HR._WriteDataToFile_TXT"]], "getdevicename() (setup_8229.setup_8229 static method)": [[10, "Setup_8229.Setup_8229.GetDeviceName"]], "getsupportedfileextensions() (setup_8229.setup_8229 static method)": [[10, "Setup_8229.Setup_8229.GetSupportedFileExtensions"]], "setup_8229": [[10, "module-Setup_8229"]], "setup_8229 (class in setup_8229)": [[10, "Setup_8229.Setup_8229"]], "stopstream() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229.StopStream"]], "_connectpoddevice() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._GetParam_onePODdevice"]], "_getscheduleforweek() (setup_8229.setup_8229 static method)": [[10, "Setup_8229.Setup_8229._GetScheduleForWeek"]], "_opensavefile_edf() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._OpenSaveFile_TXT"]], "_streamthreading() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._StreamThreading"]], "_streamuntilstop() (setup_8229.setup_8229 method)": [[10, "Setup_8229.Setup_8229._StreamUntilStop"]], "_streammode (setup_8229.setup_8229 attribute)": [[10, "Setup_8229.Setup_8229._streamMode"]], "getdevicename() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR.GetDeviceName"]], "setup_8401hr": [[11, "module-Setup_8401HR"]], "setup_8401hr (class in setup_8401hr)": [[11, "Setup_8401HR.Setup_8401HR"]], "stopstream() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR.StopStream"]], "_codedcmode() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._CodeDCmode"]], "_codehighpass() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._CodeHighpass"]], "_connectpoddevice() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._GetParam_onePODdevice"]], "_getpreampdevicename() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._GetPreampDeviceName"]], "_niceabcdtabletext() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._NiceABCDtableText"]], "_opensavefile_edf() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._OpenSaveFile_TXT"]], "_physical_bound_uv (setup_8401hr.setup_8401hr attribute)": [[11, "Setup_8401HR.Setup_8401HR._PHYSICAL_BOUND_uV"]], "_setbias() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetBias"]], "_setdcmode() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetDCMode"]], "_setformappedchannels() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._SetForMappedChannels"]], "_sethighpass() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetHighpass"]], "_setlowpass() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetLowpass"]], "_setpreampgain() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetPreampGain"]], "_setssgain() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._SetSSGain"]], "_streamthreading() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._StreamThreading"]], "_streamuntilstop() (setup_8401hr.setup_8401hr method)": [[11, "Setup_8401HR.Setup_8401HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8401hr.setup_8401hr static method)": [[11, "Setup_8401HR.Setup_8401HR._WriteDataToFile_TXT"]], "getdevicename() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC.GetDeviceName"]], "getsupportedfileextensions() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC.GetSupportedFileExtensions"]], "setup_8480sc": [[12, "module-Setup_8480SC"]], "setup_8480sc (class in setup_8480sc)": [[12, "Setup_8480SC.Setup_8480SC"]], "stopstream() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC.StopStream"]], "_chooseperiod() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._ChoosePeriod"]], "_chooserepeat() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._ChooseRepeat"]], "_choosestimulusconfig() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._ChooseStimulusConfig"]], "_choosesyncconfig() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._ChooseSyncConfig"]], "_choosewidth() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._ChooseWidth"]], "_connectpoddevice() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._GetParam_onePODdevice"]], "_opensavefile_edf() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._OpenSaveFile_TXT"]], "_streamthreading() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._StreamThreading"]], "_streamuntilstop() (setup_8480sc.setup_8480sc method)": [[12, "Setup_8480SC.Setup_8480SC._StreamUntilStop"]], "_ttlsetup() (setup_8480sc.setup_8480sc static method)": [[12, "Setup_8480SC.Setup_8480SC._TtlSetup"]], "_streammode (setup_8480sc.setup_8480sc attribute)": [[12, "Setup_8480SC.Setup_8480SC._streamMode"]], "getoptions() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.GetOptions"]], "getpodparametersinit() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.GetPODparametersInit"]], "getsavefilenames() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.GetSaveFileNames"]], "run() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.Run"]], "setuppodparameters() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.SetupPODparameters"]], "setupsavefile() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices.SetupSaveFile"]], "setup_poddevices": [[13, "module-Setup_PodDevices"]], "setup_poddevices (class in setup_poddevices)": [[13, "Setup_PodDevices.Setup_PodDevices"]], "_askoption() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._AskOption"]], "_asktostopstream() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._AskToStopStream"]], "_askuserfordevices() (setup_poddevices.setup_poddevices static method)": [[13, "Setup_PodDevices.Setup_PodDevices._AskUserForDevices"]], "_checkforvalidparams() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._CheckForValidParams"]], "_connectnewdevice() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._ConnectNewDevice"]], "_dooption() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._DoOption"]], "_editcheckconnect() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._EditCheckConnect"]], "_editsavefilepath() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._EditSaveFilePath"]], "_getchosendevicetype() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._GetChosenDeviceType"]], "_getparams() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._GetParams"]], "_printinitcode() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._PrintInitCode"]], "_printoptions() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._PrintOptions"]], "_reconnect() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._Reconnect"]], "_removedevice() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._RemoveDevice"]], "_set_setup_poddevices() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._Set_Setup_PodDevices"]], "_setup_poddevices (setup_poddevices.setup_poddevices attribute)": [[13, "Setup_PodDevices.Setup_PodDevices._Setup_PodDevices"]], "_showcurrentsettings() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._ShowCurrentSettings"]], "_stream() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._Stream"]], "_streamalldevices() (setup_poddevices.setup_poddevices method)": [[13, "Setup_PodDevices.Setup_PodDevices._StreamAllDevices"]], "_timefunc() (setup_poddevices.setup_poddevices static method)": [[13, "Setup_PodDevices.Setup_PodDevices._TimeFunc"]], "_options (setup_poddevices.setup_poddevices attribute)": [[13, "Setup_PodDevices.Setup_PodDevices._options"]], "addpoddevice() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.AddPODdevice"]], "aredeviceparamsvalid() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.AreDeviceParamsValid"]], "connectallpoddevices() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.ConnectAllPODdevices"]], "displaypoddeviceparameters() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.DisplayPODdeviceParameters"]], "getdevicename() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface.GetDeviceName"]], "getpodparametersinit() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.GetPODparametersInit"]], "getsavefilename() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.GetSaveFileName"]], "getsupportedfileextensions() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface.GetSupportedFileExtensions"]], "printsavefile() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.PrintSaveFile"]], "setupfilename() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.SetupFileName"]], "setuppodparameters() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.SetupPODparameters"]], "setup_interface (class in setup_podinterface)": [[14, "Setup_PodInterface.Setup_Interface"]], "setup_podinterface": [[14, "module-Setup_PodInterface"]], "stopstream() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.StopStream"]], "stream() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.Stream"]], "validateparams() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface.ValidateParams"]], "_buildfilename() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._BuildFileName"]], "_chooseport() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._ChoosePort"]], "_connectpoddevice() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._ConnectPODdevice"]], "_disconnectallpoddevices() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._DisconnectAllPODdevices"]], "_editparams() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._EditParams"]], "_getforbiddennames() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._GetForbiddenNames"]], "_getpoddeviceparametertable() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._GetPODdeviceParameterTable"]], "_getparam_allpoddevices() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._GetParam_allPODdevices"]], "_getparam_onepoddevice() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._GetParam_onePODdevice"]], "_getportslist() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._GetPortsList"]], "_gettimeheader_fortxt() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._GetTimeHeader_forTXT"]], "_opensavefile() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._OpenSaveFile"]], "_opensavefile_edf() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._OpenSaveFile_TXT"]], "_printdevicenumber() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._PrintDeviceNumber"]], "_removedevice() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._RemoveDevice"]], "_selectdevicefromdict() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._SelectDeviceFromDict"]], "_setnumberofdevices() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._SetNumberOfDevices"]], "_streamthreading() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._StreamThreading"]], "_testdeviceconnection() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._TestDeviceConnection"]], "_testdeviceconnection_all() (setup_podinterface.setup_interface method)": [[14, "Setup_PodInterface.Setup_Interface._TestDeviceConnection_All"]], "_poddevices (setup_podinterface.setup_interface attribute)": [[14, "Setup_PodInterface.Setup_Interface._podDevices"]], "_podparametersdict (setup_podinterface.setup_interface attribute)": [[14, "Setup_PodInterface.Setup_Interface._podParametersDict"]], "_savefilename (setup_podinterface.setup_interface attribute)": [[14, "Setup_PodInterface.Setup_Interface._saveFileName"]], "_uv() (setup_podinterface.setup_interface static method)": [[14, "Setup_PodInterface.Setup_Interface._uV"]], "buildemptyschedule() (setup_podparameters.params_8229 static method)": [[15, "Setup_PodParameters.Params_8229.BuildEmptySchedule"]], "eeg1() (setup_podparameters.params_8206hr method)": [[15, "Setup_PodParameters.Params_8206HR.EEG1"]], "eeg2() (setup_podparameters.params_8206hr method)": [[15, "Setup_PodParameters.Params_8206HR.EEG2"]], "eeg3_emg() (setup_podparameters.params_8206hr method)": [[15, "Setup_PodParameters.Params_8206HR.EEG3_EMG"]], "getinit() (setup_podparameters.params_8206hr method)": [[15, "Setup_PodParameters.Params_8206HR.GetInit"]], "getinit() (setup_podparameters.params_8229 method)": [[15, "Setup_PodParameters.Params_8229.GetInit"]], "getinit() (setup_podparameters.params_8401hr method)": [[15, "Setup_PodParameters.Params_8401HR.GetInit"]], "getinit() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC.GetInit"]], "getinit() (setup_podparameters.params_interface method)": [[15, "Setup_PodParameters.Params_Interface.GetInit"]], "params_8206hr (class in setup_podparameters)": [[15, "Setup_PodParameters.Params_8206HR"]], "params_8229 (class in setup_podparameters)": [[15, "Setup_PodParameters.Params_8229"]], "params_8401hr (class in setup_podparameters)": [[15, "Setup_PodParameters.Params_8401HR"]], "params_8480sc (class in setup_podparameters)": [[15, "Setup_PodParameters.Params_8480SC"]], "params_interface (class in setup_podparameters)": [[15, "Setup_PodParameters.Params_Interface"]], "setup_podparameters": [[15, "module-Setup_PodParameters"]], "_checkparams() (setup_podparameters.params_8206hr method)": [[15, "Setup_PodParameters.Params_8206HR._CheckParams"]], "_checkparams() (setup_podparameters.params_8229 method)": [[15, "Setup_PodParameters.Params_8229._CheckParams"]], "_checkparams() (setup_podparameters.params_8401hr method)": [[15, "Setup_PodParameters.Params_8401HR._CheckParams"]], "_checkparams() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC._CheckParams"]], "_checkparams() (setup_podparameters.params_interface method)": [[15, "Setup_PodParameters.Params_Interface._CheckParams"]], "_fixtypeintuple() (setup_podparameters.params_interface static method)": [[15, "Setup_PodParameters.Params_Interface._FixTypeInTuple"]], "bias (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.bias"]], "channellabels (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.channelLabels"]], "dcmode (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.dcMode"]], "estimcurrent (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.estimCurrent"]], "estimcurrent_ch0() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC.estimCurrent_CH0"]], "estimcurrent_ch1() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC.estimCurrent_CH1"]], "highpass (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.highPass"]], "hoursperday (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.hoursPerDay"]], "ledcurrent (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.ledCurrent"]], "ledcurrent_ch0() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC.ledCurrent_CH0"]], "ledcurrent_ch1() (setup_podparameters.params_8480sc method)": [[15, "Setup_PodParameters.Params_8480SC.ledCurrent_CH1"]], "lowpass (setup_podparameters.params_8206hr attribute)": [[15, "Setup_PodParameters.Params_8206HR.lowPass"]], "lowpass (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.lowPass"]], "lowpasslabels (setup_podparameters.params_8206hr attribute)": [[15, "Setup_PodParameters.Params_8206HR.lowPassLabels"]], "mode (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.mode"]], "motordirection (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.motorDirection"]], "motorspeed (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.motorSpeed"]], "muxmode (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.muxMode"]], "port (setup_podparameters.params_8206hr attribute)": [[15, "Setup_PodParameters.Params_8206HR.port"]], "port (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.port"]], "port (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.port"]], "port (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.port"]], "port (setup_podparameters.params_interface attribute)": [[15, "Setup_PodParameters.Params_Interface.port"]], "preamp (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.preamp"]], "preampdevice (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.preampDevice"]], "preampgain (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.preampGain"]], "preamplifiergain (setup_podparameters.params_8206hr attribute)": [[15, "Setup_PodParameters.Params_8206HR.preamplifierGain"]], "randomreverse (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.randomReverse"]], "reversebasetime (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.reverseBaseTime"]], "reversevartime (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.reverseVarTime"]], "samplerate (setup_podparameters.params_8206hr attribute)": [[15, "Setup_PodParameters.Params_8206HR.sampleRate"]], "samplerate (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.sampleRate"]], "schedule (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.schedule"]], "ssgain (setup_podparameters.params_8401hr attribute)": [[15, "Setup_PodParameters.Params_8401HR.ssGain"]], "stimulus (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.stimulus"]], "syncconfig (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.syncConfig"]], "systemid (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.systemID"]], "ttlpullups (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.ttlPUllups"]], "ttlsetup (setup_podparameters.params_8480sc attribute)": [[15, "Setup_PodParameters.Params_8480SC.ttlSetup"]], "week (setup_podparameters.params_8229 attribute)": [[15, "Setup_PodParameters.Params_8229.week"]]}})