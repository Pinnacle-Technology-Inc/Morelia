Search.setIndex({"docnames": ["BasicPodProtocol", "GetUserInput", "PodCommands", "PodDevice_8206HR", "PodDevice_8229", "PodDevice_8401HR", "PodPacketHandling", "SerialCommunication", "Setup_8206HR", "Setup_8229", "Setup_8401HR", "Setup_PodDevices", "Setup_PodInterface", "Setup_PodParameters", "index", "modules"], "filenames": ["BasicPodProtocol.rst", "GetUserInput.rst", "PodCommands.rst", "PodDevice_8206HR.rst", "PodDevice_8229.rst", "PodDevice_8401HR.rst", "PodPacketHandling.rst", "SerialCommunication.rst", "Setup_8206HR.rst", "Setup_8229.rst", "Setup_8401HR.rst", "Setup_PodDevices.rst", "Setup_PodInterface.rst", "Setup_PodParameters.rst", "index.rst", "modules.rst"], "titles": ["BasicPodProtocol module", "GetUserInput module", "PodCommands module", "PodDevice_8206HR module", "PodDevice_8229 module", "PodDevice_8401HR module", "PodPacketHandling module", "SerialCommunication module", "Setup_8206HR module", "Setup_8229 module", "Setup_8401HR module", "Setup_PodDevices module", "Setup_PodInterface module", "Setup_PodParameters module", "Welcome to Python POD API\u2019s documentation!", "API_Modules"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "pod_bas": [0, 3, 4, 5, 12, 15], "port": [0, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "baudrat": [0, 3, 4, 5, 7], "9600": [0, 3, 5, 7], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "object": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13], "handl": [0, 3, 4, 5, 7, 12], "basic": [0, 2, 12], "commun": [0, 3, 4, 5, 7], "gener": [0, 12], "pod": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "devic": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "includ": [0, 11], "read": [0, 3, 5, 7, 8, 9, 10, 12, 15], "write": [0, 4, 7, 8, 9, 10, 12, 15], "packet": [0, 3, 4, 5, 6, 8, 9, 10], "interpret": [0, 4, 6], "_port": [0, 15], "instanc": [0, 3, 5, 7, 12, 13], "level": [0, 2, 3, 5, 7, 8, 10, 12], "com_io": [0, 7, 15], "which": [0, 4, 5, 6, 9, 11, 12], "com": [0, 7, 12, 13], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "_command": [0, 15], "pod_command": [0, 2, 15], "store": [0, 5, 11, 13], "inform": [0, 2, 6, 12], "about": 0, "command": [0, 2, 3, 4, 5, 6, 8, 10, 12], "avail": [0, 2, 7, 11, 12], "thi": [0, 2, 4, 6, 11, 12, 13], "flushport": [0, 15], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "reset": [0, 7], "input": [0, 1, 3, 5, 7, 8, 9, 10, 11, 12, 13], "output": [0, 3, 5, 7], "serial": [0, 7], "buffer": [0, 7], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "ar": [0, 3, 4, 5, 6, 7, 9, 11, 12, 13], "flush": [0, 7, 15], "fals": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "otherwis": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13], "getdevicecommand": [0, 15], "dict": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "list": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13], "tupl": [0, 2, 4, 5, 6, 9, 10, 13], "get": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13], "dictionari": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "format": [0, 2, 4, 7, 10, 11], "kei": [0, 2, 4, 5, 8, 9, 10, 11, 12, 13], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "valu": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "name": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13], "argument": [0, 1, 2, 4, 5, 6, 13], "ascii": [0, 2, 3, 4, 5, 6], "byte": [0, 2, 3, 4, 5, 6, 7], "binari": [0, 2, 3, 5, 6], "flag": [0, 1, 2, 4, 6, 9], "static": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "getnumberofpoddevic": [0, 15], "counter": 0, "__numpod": [0, 15], "getpodpacket": [0, 15], "cmd": [0, 2, 4], "payload": [0, 4, 6, 10], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "build": [0, 4, 5, 6, 8, 9, 10, 12, 13], "via": 0, "If": [0, 1, 2, 4, 6, 7, 11, 13], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "give": [0, 4, 11], "method": [0, 1, 3, 4, 5, 6, 9, 11, 12], "convert": [0, 3, 4, 5, 6, 7, 12], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "length": [0, 6], "expect": 0, "given": [0, 1, 2, 3, 4, 5, 6, 10, 12], "must": [0, 4, 6, 11, 12, 13], "correct": [0, 12], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "option": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12], "when": [0, 1, 2, 3, 4, 8, 9, 10, 12, 13], "set": [0, 2, 3, 4, 5, 7, 10, 11, 12, 13], "default": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12], "rais": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "except": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "doe": [0, 2, 3, 5, 6, 7, 13], "exist": [0, 1, 2, 5, 7, 12, 13], "requir": [0, 6, 10, 11, 12], "readpodpacket": [0, 15], "validatechecksum": [0, 3, 5], "timeout_sec": [0, 7], "float": [0, 1, 3, 5, 7, 10, 11, 12, 13], "5": [0, 2, 5, 7, 10, 13], "complet": [0, 3, 5, 6, 7, 11], "either": [0, 3, 4, 13], "standard": [0, 2, 3, 5, 6], "begin": [0, 3, 5, 12, 13], "stx": [0, 3, 5, 6, 15], "end": [0, 1, 3, 5, 6, 7, 11, 12], "etx": [0, 3, 5, 6, 15], "first": [0, 4, 6, 7, 12], "start": [0, 6, 8, 9, 10, 12], "recurs": 0, "valid": [0, 1, 3, 5, 9, 11, 12], "checksum": [0, 3, 5, 6, 15], "skip": [0, 3, 5], "time": [0, 4, 7, 8, 9, 10, 11, 12, 13], "second": [0, 4, 5, 7, 8, 10, 11, 13], "wait": [0, 7], "data": [0, 1, 5, 6, 7, 8, 9, 10, 11, 12], "mai": [0, 4, 11], "unformat": 0, "someth": 0, "setbaudrateofdevic": [0, 15], "open": [0, 7, 8, 9, 10, 12], "chang": 0, "baud": [0, 7], "rate": [0, 7, 8, 10, 13], "success": [0, 8, 9, 10, 12], "translatepodpacket": [0, 3, 4, 5, 15], "msg": [0, 3, 4, 5, 6], "determin": [0, 3, 4], "translat": [0, 3, 4], "accordingli": [0, 3], "A": [0, 3, 4, 5, 10, 12, 13], "unpack": [0, 3, 5], "messag": [0, 1, 3, 5, 6, 7, 10], "translatepodpacket_binari": [0, 3, 5, 15], "variabl": [0, 13], "encod": [0, 3, 4, 5, 6], "leav": 0, "translatepodpacket_standard": [0, 15], "applic": 0, "unpackpodpacket": [0, 15], "unpackpodpacket_binari": [0, 3, 5, 15], "The": [0, 4, 5, 6, 9, 11, 12, 13], "have": [0, 3, 4, 5, 11, 12, 13], "minimum": [0, 1, 3, 5], "2": [0, 2, 3, 4, 5, 6, 10, 11, 13], "3": [0, 2, 3, 4, 5, 8, 11], "4": [0, 2, 3, 4, 5, 6], "after": [0, 3, 5], "unpackpodpacket_standard": [0, 15], "writepacket": [0, 4, 15], "wa": [0, 2, 4, 7, 8, 9, 10, 12], "written": [0, 4, 12], "writeread": [0, 15], "onc": 0, "respons": 0, "_readpodpacket_recurs": [0, 15], "next": 0, "check": [0, 1, 2, 3, 4, 5, 11, 12], "allow": [0, 11], "Then": [0, 6, 7, 11], "cannot": 0, "invalid": [0, 1, 4, 6, 11, 13], "_read_binari": [0, 3, 5, 15], "prepacket": [0, 3, 5], "remain": [0, 4], "part": 0, "It": [0, 6], "how": [0, 12], "long": [0, 4, 6], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "mani": [0, 12], "1": [0, 2, 3, 4, 5, 6, 9, 10, 11, 13], "onli": [0, 12], "_read_getcommand": [0, 15], "one": [0, 4, 8, 10, 12], "up": [0, 11], "For": [0, 13], "each": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13], "can": [0, 4, 5, 7, 11, 12], "over": 0, "found": [0, 2], "continu": [0, 8, 10], "_read_standard": [0, 15], "_read_toetx": [0, 15], "until": [0, 7, 9, 11], "restart": 0, "anywher": 0, "_validatechecksum": [0, 15], "calcul": [0, 5, 6, 8, 10, 11], "match": 0, "__minbinarylength": [0, 15], "15": [0, 4], "repres": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13], "__minstandardlength": [0, 15], "8": [0, 2, 3, 4], "0": [0, 2, 3, 4, 5, 9, 10, 11, 13], "count": 0, "maintain": 0, "__init__": 0, "__del__": 0, "userinput": [1, 15], "sever": [1, 13], "user": [1, 7, 8, 9, 10, 11, 12], "setup": [1, 8, 9, 10, 11, 12], "askforfloat": [1, 15], "prompt": [1, 11], "ask": [1, 8, 9, 10, 11, 12], "statement": 1, "request": 1, "askforfloatinlist": [1, 15], "goodinput": 1, "badinputmessag": 1, "error": 1, "print": [1, 11, 12], "choic": [1, 11], "askforfloatinrang": [1, 15], "maximum": 1, "thisi": 1, "unit": 1, "fall": 1, "rang": [1, 6, 13], "descript": [1, 2, 12, 15], "what": [1, 11], "being": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "askforinput": [1, 15], "append": [1, 4, 7, 12], "Will": 1, "colon": 1, "askforint": [1, 15], "askforintinlist": [1, 15], "askforintinrang": [1, 15], "askforstrinlist": [1, 15], "askfortyp": [1, 15], "typecast": 1, "function": [1, 8, 9, 10, 11], "specif": [1, 6], "again": 1, "datatyp": 1, "cast": [1, 13], "ex": 1, "_castint": 1, "_castfloat": 1, "_caststr": 1, "askfortypeinlist": [1, 15], "askfortypeinrang": [1, 15], "numer": 1, "between": [1, 4, 13], "two": [1, 6], "askyn": [1, 15], "question": [1, 11], "y": 1, "n": 1, "ye": 1, "castfloat": [1, 15], "castint": [1, 15], "caststr": [1, 15], "checkfileext": [1, 15], "f": 1, "fisext": 1, "goodext": 1, "txt": [1, 8, 9, 10, 12], "printerr": 1, "file": [1, 8, 9, 10, 11, 12], "ha": [1, 4, 6, 13], "extens": [1, 9, 11, 12], "boolean": [1, 2, 5, 6], "getfilenam": [1, 15], "filenam": [1, 8, 9, 10, 11, 12], "getfilepath": [1, 15], "path": [1, 11, 12], "text": [1, 8, 9, 10, 12], "befor": [1, 4], "csv": 1, "edf": [1, 8, 9, 10, 12], "manag": 2, "__command": [2, 15], "entri": [2, 11], "addcommand": [2, 15], "commandnumb": [2, 6], "commandnam": 2, "argumentbyt": 2, "returnbyt": 2, "isbinari": 2, "add": [2, 3, 4], "current": [2, 4, 8, 9, 10, 11, 12], "mark": [2, 6], "successfulli": [2, 11, 12], "ad": 2, "could": 2, "becaus": 2, "alreadi": [2, 8, 9, 10, 12], "argumenthexchar": [2, 15], "hex": [2, 4], "charact": [2, 4, 6, 7, 13], "commandnumberfromnam": [2, 15], "doescommandexist": [2, 15], "getbasiccommand": [2, 15], "creat": [2, 6, 8, 9, 10, 12, 13], "6": [2, 4, 12], "7": [2, 4, 13], "9": [2, 5], "10": [2, 3, 8, 13], "11": [2, 13], "12": [2, 5], "getcommand": [2, 15], "content": 2, "iscommandbinari": [2, 15], "novalu": [2, 15], "__novalu": [2, 15], "removecommand": [2, 15], "remov": [2, 6, 11, 12], "restorebasiccommand": [2, 15], "returnhexchar": [2, 15], "search": [2, 14, 15], "idx": 2, "index": [2, 14], "desir": [2, 6, 12], "u16": [2, 15], "__u16": [2, 15], "u8": [2, 4, 5, 15], "__u8": [2, 15], "__argument": [2, 15], "__binari": [2, 15], "__descript": [2, 15], "__name": [2, 15], "item": [2, 4, 6, 8, 9, 10, 13], "mean": 2, "undefin": 2, "__return": [2, 15], "hexadecim": [2, 4, 6], "unsign": [2, 4, 5, 6], "16": [2, 3, 4, 5, 6], "bit": [2, 3, 4, 5, 6], "pod_8206hr": [3, 8, 10, 15], "preampgain": [3, 5, 13, 15], "8206hr": 3, "_preampgain": [3, 5, 15], "100": [3, 4, 8, 13], "preamplifi": [3, 5, 8, 10, 13], "gain": [3, 5, 8, 10, 13], "overwrit": [3, 4, 5, 9], "parent": [3, 4, 5, 9], "ttl": [3, 5], "binary4": 3, "channel": [3, 5, 8, 10, 13], "volt": [3, 5, 12], "ch0": 3, "ch1": 3, "ch2": 3, "separ": [3, 5], "compon": [3, 4, 5], "_binarybytestovoltag": [3, 15], "real": 3, "voltag": [3, 5, 10, 12, 13], "measur": 3, "v": [3, 5, 10, 13], "receiv": [3, 5], "bad": [3, 5], "_translatettlbyte_ascii": [3, 15], "ttlbyte": [3, 5], "One": 3, "_translatettlbyte_binari": [3, 15], "__b4binarylength": [3, 15], "__b4length": [3, 15], "pod_8229": [4, 9, 15], "19200": 4, "8229": [4, 9, 13], "buildsetdayscheduleargu": [4, 15], "dai": [4, 9, 13], "hour": [4, 9, 13], "speed": [4, 13], "week": [4, 9, 13, 15], "code": [4, 6, 10, 11], "front": 4, "hourli": 4, "schedul": [4, 9, 13, 15], "141": 4, "e": 4, "sundai": [4, 9, 13], "mondai": [4, 9, 13], "etc": 4, "increac": 4, "saturdai": [4, 13], "arrai": 4, "24": [4, 9, 13], "motor": [4, 9, 13], "off": [4, 9, 13], "all": [4, 5, 7, 8, 9, 10, 11, 12, 13], "same": 4, "multipl": [4, 6, 8, 10], "should": [4, 13], "_description_": 4, "codedayofweek": [4, 15], "understand": 4, "support": [4, 5, 9, 10], "abbrevi": 4, "codedayschedul": [4, 15], "bitmask": [4, 5], "statu": [4, 5], "u8x24": 4, "msb": [4, 6], "decodedayofweek": [4, 15], "human": 4, "readabl": 4, "decodedayschedul": [4, 15], "142": 4, "bitstr": 4, "per": [4, 7], "everi": [4, 13], "decodelcdschedul": [4, 15], "202": 4, "lcd": 4, "weekdai": [4, 13], "23": [4, 5], "state": [4, 9], "getcurrenttim": [4, 15], "140": 4, "minut": 4, "month": 4, "year": 4, "without": 4, "centuri": 4, "so": 4, "2023": 4, "additt": 4, "special": 4, "uniqu": 4, "_codedecimalashex": [4, 15], "val": [4, 6], "equal": 4, "some": 4, "need": 4, "decim": [4, 11, 12], "do": [4, 11], "exampl": [4, 6], "want": [4, 9, 11, 12], "22": 4, "call": 4, "_decodedecimalashex": [4, 15], "represent": [4, 12], "In": 4, "other": [4, 8, 9, 10, 12], "word": 4, "revers": [4, 13], "_validate_dai": [4, 15], "incorrectli": 4, "its": 4, "repsect": 4, "_validate_hour": [4, 15], "exactli": [4, 13], "_validate_schedul": [4, 15], "size": [4, 6], "incorrect": [4, 6], "_validate_spe": [4, 15], "pod_8401hr": [5, 10, 15], "ssgain": [5, 13, 15], "b": [5, 6, 13], "c": [5, 13], "d": [5, 13], "8401": [5, 10, 13], "hr": [5, 8, 10, 13], "_ssgain": [5, 15], "stage": [5, 10, 13], "four": [5, 13], "pramplifi": 5, "calculatebiasdac_getdacvalu": [5, 15], "vout": 5, "dac": 5, "bia": [5, 10, 13, 15], "048": [5, 13], "complement": [5, 6], "calculatebiasdac_getvout": [5, 15], "decodessconfigbitmask": [5, 15], "config": 5, "ss": 5, "configur": 5, "high": [5, 10, 13], "pass": [5, 10, 13], "configurt": 5, "5hz": 5, "highpass": [5, 10, 13, 15], "dc": [5, 10, 13], "5x": [5, 13], "1x": [5, 13], "decodettlbyt": [5, 15], "dictinoari": 5, "getchannelmapforpreampdevic": [5, 15], "preampnam": 5, "map": [5, 10], "label": 5, "sensor": [5, 10], "getssconfigbitmask": [5, 15], "els": 5, "getsupportedpreampdevic": [5, 15], "getttlbitmask": [5, 15], "ext0": 5, "ext1": 5, "ttl4": 5, "ttl3": 5, "ttl2": 5, "ttl1": 5, "mask": 5, "ispreampdevicesupport": [5, 15], "preamp": 5, "__channelmapal": [5, 15], "binary5": 5, "analog": 5, "_voltage_primarychannel": [5, 15], "primari": 5, "connect": [5, 8, 9, 10, 11, 12, 13], "_voltage_primarychannels_biosensor": [5, 15], "biosensor": [5, 13], "_voltage_primarychannels_eegemg": [5, 15], "eeg": [5, 13], "emg": [5, 13], "_voltage_secondarychannel": [5, 15], "secondari": 5, "__b5binarylength": [5, 15], "__b5length": [5, 15], "31": 5, "8406": 5, "2bio": 5, "bio1": 5, "bio2": 5, "nc": 5, "bio": 5, "eeg2bio": 5, "eeg1": [5, 13, 15], "se": 5, "eeg2": [5, 13, 15], "se3": 5, "eeg3": [5, 13], "se31m": 5, "se4": 5, "eeg4": 5, "sl": 5, "8407": 5, "pod_packet": [6, 15], "collect": [6, 8, 10], "asciibytestoint_split": [6, 15], "keeptopbit": 6, "cutbottombit": 6, "hold": 6, "posit": [6, 13], "lsb": 6, "result": 6, "asciibytestoint": [6, 15], "msg_b": 6, "sign": 6, "convers": 6, "neg": 6, "fail": [6, 12], "binarybytestoint": [6, 15], "byteord": 6, "big": 6, "order": [6, 13], "endian": 6, "littl": 6, "binarybytestoint_split": [6, 15], "buildpodpacket_standard": [6, 15], "bytesin": 6, "achiev": 6, "sum": 6, "invert": 6, "take": [6, 10], "last": 6, "transmiss": 6, "0x03": 6, "inttoasciibyt": [6, 15], "numchar": 6, "usabl": 6, "uppercas": 6, "lastli": 6, "ensur": 6, "final": 6, "numbyt": [6, 7], "show": 6, "0002": 6, "0x30": 6, "0x32": 6, "payloadtobyt": [6, 15], "argsiz": 6, "wrong": 6, "0x02": 6, "twoscompl": [6, 15], "nbit": 6, "__serialinst": [7, 15], "closeserialport": [7, 15], "close": 7, "getcomportslist": [7, 15], "find": 7, "comput": 7, "them": [7, 12], "access": 7, "getportnam": [7, 15], "isserialclos": [7, 15], "isserialopen": [7, 15], "openserialport": [7, 15], "specifi": 7, "timeout": 7, "readlin": [7, 15], "new": [7, 11, 12], "line": [7, 12], "readuntil": [7, 15], "eol": 7, "setbaudr": [7, 15], "signal": [7, 9], "__buildportnam": [7, 15], "setup_interfac": [8, 9, 10, 11, 12, 15], "provid": [8, 9, 10, 12], "8206": [8, 10, 13], "getdevicenam": [8, 9, 10, 12, 15], "stopstream": [8, 9, 10, 12, 15], "stop": [8, 9, 10, 11, 12], "stream": [8, 9, 10, 11, 12, 15], "_choosepreampgain": [8, 15], "_connectpoddevic": [8, 9, 10, 12, 15], "devicenum": [8, 9, 10, 12], "deviceparam": [8, 9, 10, 12], "params_8206hr": [8, 13, 15], "_getpoddeviceparametert": [8, 9, 10, 12, 15], "texttabl": [8, 9, 10, 12], "tabl": [8, 9, 10, 12], "_getparam_onepoddevic": [8, 9, 10, 12, 15], "forbiddennam": [8, 9, 10, 12], "_opensavefile_edf": [8, 9, 10, 12, 15], "fname": [8, 9, 10, 12], "devnum": [8, 9, 10, 12], "edfwrit": [8, 10, 12], "header": [8, 9, 10, 12], "_opensavefile_txt": [8, 9, 10, 12, 15], "iobas": [8, 9, 10, 12], "column": [8, 9, 10, 12], "date": [8, 9, 10, 12], "top": [8, 9, 10, 12], "_physical_bound_uv": [8, 10, 15], "2046": [8, 10], "max": [8, 10], "min": [8, 10], "physic": [8, 10], "uv": [8, 10, 12], "_streamthread": [8, 9, 10, 12, 15], "thread": [8, 9, 10, 11, 12], "save": [8, 9, 10, 11, 12], "_streamuntilstop": [8, 9, 10, 15], "sampler": [8, 10, 13, 15], "look": [8, 10], "averag": [8, 10], "differ": [8, 10, 11, 13], "across": [8, 10], "seri": [8, 10], "sampl": [8, 10, 13], "hz": [8, 10, 13], "_writedatatofile_edf": [8, 10, 15], "numpi": [8, 10], "ndarrai": [8, 10], "np": [8, 10], "_writedatatofile_txt": [8, 10, 15], "t": [8, 10], "stamp": [8, 10], "_streammod": [9, 15], "getsupportedfileextens": [9, 12, 15], "updat": 9, "params_8229": [9, 13, 15], "_getscheduleforweek": [9, 15], "would": 9, "Not": 9, "filetyp": 9, "log": 9, "reciev": 9, "decid": 9, "firmwar": [10, 11], "OR": [10, 11], "higher": [10, 11], "_codedcmod": [10, 15], "dcmode": [10, 13, 15], "mode": [10, 13, 15], "vbia": [10, 13], "agnd": [10, 13], "_codehighpass": [10, 15], "params_8401hr": [10, 13, 15], "_getpreampdevicenam": [10, 15], "select": [10, 11, 12], "mous": [10, 13], "rat": [10, 13], "chosen": [10, 11], "_niceabcdtabletext": [10, 15], "abcdvalu": 10, "channelmap": 10, "abcdvaluedict": 10, "abcd": 10, "newlin": [10, 12], "_setbia": [10, 15], "channelnam": 10, "048v": 10, "thebia": 10, "_setdcmod": [10, 15], "_setformappedchannel": [10, 15], "func": [10, 11], "exclud": [10, 12], "_sethighpass": [10, 15], "10hz": 10, "frequenc": 10, "_setlowpass": [10, 15], "low": [10, 13], "21": [10, 13], "15000hz": 10, "_setpreampgain": [10, 15], "_setssgain": [10, 15], "savefiledict": 11, "podparametersdict": [11, 12], "setup_podparamet": [11, 12, 14, 15], "params_interfac": [11, 12, 13, 15], "ani": [11, 12], "_setup_poddevic": [11, 15], "subclass": [11, 12], "_option": [11, 15], "getopt": [11, 15], "getpodparametersinit": [11, 12, 15], "initi": 11, "rtype": [11, 12], "getsavefilenam": [11, 12, 15], "run": [11, 15], "loop": 11, "quit": 11, "setuppodparamet": [11, 12, 15], "setupsavefil": [11, 15], "savefil": 11, "directori": 11, "_askopt": [11, 15], "_asktostopstream": [11, 15], "press": 11, "enter": 11, "program": 11, "_askuserfordevic": [11, 15], "thei": [11, 12], "_checkforvalidparam": [11, 15], "correctli": 11, "respect": 11, "empti": [11, 12, 13], "paramat": 11, "_connectnewdevic": [11, 15], "_dooption": [11, 15], "perform": [11, 12], "associ": 11, "_editcheckconnect": [11, 15], "displai": [11, 12], "edit": [11, 12], "reconnect": 11, "_editsavefilepath": [11, 15], "_getchosendevicetyp": [11, 15], "_getparam": [11, 15], "whose": [11, 12], "_printinitcod": [11, 15], "setuppoddevic": [11, 12], "_printopt": [11, 15], "_reconnect": [11, 15], "were": 11, "_removedevic": [11, 12, 15], "ro": 11, "delet": [11, 12], "_set_setup_poddevic": [11, 15], "varaibl": 11, "_showcurrentset": [11, 15], "_stream": [11, 15], "execut": 11, "_streamalldevic": [11, 15], "click": 11, "_timefunc": [11, 15], "execult": 11, "round": [11, 12], "place": [11, 12], "interfac": [12, 13], "implement": 12, "py": 12, "design": 12, "children": 12, "_poddevic": [12, 15], "_podparametersdict": [12, 15], "_savefilenam": [12, 15], "ext": 12, "addpoddevic": [12, 15], "aredeviceparamsvalid": [12, 15], "paramdict": 12, "connectallpoddevic": [12, 15], "displaypoddeviceparamet": [12, 15], "where": [12, 13], "printsavefil": [12, 15], "note": 12, "setupfilenam": [12, 15], "known": 12, "test": 12, "validateparam": [12, 15], "everyth": 12, "_buildfilenam": [12, 15], "_chooseport": [12, 15], "forbidden": 12, "_disconnectallpoddevic": [12, 15], "disconnect": 12, "obejct": 12, "_editparam": [12, 15], "re": [12, 13], "_getforbiddennam": [12, 15], "activ": 12, "There": [12, 13], "addit": 12, "_getparam_allpoddevic": [12, 15], "_getportslist": [12, 15], "_gettimeheader_fortxt": [12, 15], "_opensavefil": [12, 15], "_printdevicenumb": [12, 15], "num": 12, "titl": 12, "more": 12, "than": 12, "_selectdevicefromdict": [12, 15], "action": 12, "_setnumberofdevic": [12, 15], "_testdeviceconnect": [12, 15], "send": 12, "ping": 12, "_testdeviceconnection_al": [12, 15], "_uv": [12, 15], "microvolt": 12, "preamplifiergain": [13, 15], "lowpass": [13, 15], "checkforvalidparam": 13, "2000": 13, "10x": 13, "100x": 13, "500": 13, "filter": 13, "eeg3_emg": [13, 15], "getinit": [13, 15], "constructor": 13, "_checkparam": [13, 15], "throw": 13, "preamplidi": 13, "lowpasslabel": [13, 15], "describ": 13, "systemid": [13, 15], "motordirect": [13, 15], "motorspe": [13, 15], "randomrevers": [13, 15], "reversebasetim": [13, 15], "reversevartim": [13, 15], "id": 13, "system": 13, "clockwis": 13, "counterclockwis": 13, "percentag": 13, "enabl": 13, "random": 13, "manual": 13, "pc": 13, "control": 13, "intern": 13, "buildemptyschedul": [13, 15], "zero": 13, "sec": 13, "tuesdai": 13, "wednesdai": 13, "thursdai": 13, "fridai": 13, "hoursperdai": [13, 15], "preampdevic": [13, 15], "muxmod": [13, 15], "20000": 13, "mux": 13, "15000": 13, "channellabel": [13, 15], "_fixtypeintupl": [13, 15], "arr": 13, "itemtyp": 13, "retyp": 13, "arguemnt": 13, "api_modul": 14, "basicpodprotocol": [14, 15], "modul": [14, 15], "getuserinput": [14, 15], "podcommand": [14, 15], "poddevice_8206hr": [14, 15], "poddevice_8229": [14, 15], "poddevice_8401hr": [14, 15], "podpackethandl": [14, 15], "serialcommun": [14, 15], "setup_8206hr": [14, 15], "setup_8229": [14, 15], "setup_8401hr": [14, 15], "setup_poddevic": [14, 15], "setup_podinterfac": [14, 15], "page": 14}, "objects": {"": [[0, 0, 0, "-", "BasicPodProtocol"], [1, 0, 0, "-", "GetUserInput"], [2, 0, 0, "-", "PodCommands"], [3, 0, 0, "-", "PodDevice_8206HR"], [4, 0, 0, "-", "PodDevice_8229"], [5, 0, 0, "-", "PodDevice_8401HR"], [6, 0, 0, "-", "PodPacketHandling"], [7, 0, 0, "-", "SerialCommunication"], [8, 0, 0, "-", "Setup_8206HR"], [9, 0, 0, "-", "Setup_8229"], [10, 0, 0, "-", "Setup_8401HR"], [11, 0, 0, "-", "Setup_PodDevices"], [12, 0, 0, "-", "Setup_PodInterface"], [13, 0, 0, "-", "Setup_PodParameters"]], "BasicPodProtocol": [[0, 1, 1, "", "POD_Basics"]], "BasicPodProtocol.POD_Basics": [[0, 2, 1, "", "FlushPort"], [0, 2, 1, "", "GetDeviceCommands"], [0, 2, 1, "", "GetNumberOfPODDevices"], [0, 2, 1, "", "GetPODpacket"], [0, 2, 1, "", "ReadPODpacket"], [0, 2, 1, "", "SetBaudrateOfDevice"], [0, 2, 1, "", "TranslatePODpacket"], [0, 2, 1, "", "TranslatePODpacket_Binary"], [0, 2, 1, "", "TranslatePODpacket_Standard"], [0, 2, 1, "", "UnpackPODpacket"], [0, 2, 1, "", "UnpackPODpacket_Binary"], [0, 2, 1, "", "UnpackPODpacket_Standard"], [0, 2, 1, "", "WritePacket"], [0, 2, 1, "", "WriteRead"], [0, 2, 1, "", "_ReadPODpacket_Recursive"], [0, 2, 1, "", "_Read_Binary"], [0, 2, 1, "", "_Read_GetCommand"], [0, 2, 1, "", "_Read_Standard"], [0, 2, 1, "", "_Read_ToETX"], [0, 2, 1, "", "_ValidateChecksum"], [0, 3, 1, "", "__MINBINARYLENGTH"], [0, 3, 1, "", "__MINSTANDARDLENGTH"], [0, 3, 1, "", "__numPod"], [0, 3, 1, "", "_commands"], [0, 3, 1, "", "_port"]], "GetUserInput": [[1, 1, 1, "", "UserInput"]], "GetUserInput.UserInput": [[1, 2, 1, "", "AskForFloat"], [1, 2, 1, "", "AskForFloatInList"], [1, 2, 1, "", "AskForFloatInRange"], [1, 2, 1, "", "AskForInput"], [1, 2, 1, "", "AskForInt"], [1, 2, 1, "", "AskForIntInList"], [1, 2, 1, "", "AskForIntInRange"], [1, 2, 1, "", "AskForStrInList"], [1, 2, 1, "", "AskForType"], [1, 2, 1, "", "AskForTypeInList"], [1, 2, 1, "", "AskForTypeInRange"], [1, 2, 1, "", "AskYN"], [1, 2, 1, "", "CastFloat"], [1, 2, 1, "", "CastInt"], [1, 2, 1, "", "CastStr"], [1, 2, 1, "", "CheckFileExt"], [1, 2, 1, "", "GetFileName"], [1, 2, 1, "", "GetFilePath"]], "PodCommands": [[2, 1, 1, "", "POD_Commands"]], "PodCommands.POD_Commands": [[2, 2, 1, "", "AddCommand"], [2, 2, 1, "", "ArgumentHexChar"], [2, 2, 1, "", "CommandNumberFromName"], [2, 2, 1, "", "Description"], [2, 2, 1, "", "DoesCommandExist"], [2, 2, 1, "", "GetBasicCommands"], [2, 2, 1, "", "GetCommands"], [2, 2, 1, "", "IsCommandBinary"], [2, 2, 1, "", "NoValue"], [2, 2, 1, "", "RemoveCommand"], [2, 2, 1, "", "RestoreBasicCommands"], [2, 2, 1, "", "ReturnHexChar"], [2, 2, 1, "", "Search"], [2, 2, 1, "", "U16"], [2, 2, 1, "", "U8"], [2, 3, 1, "", "__ARGUMENTS"], [2, 3, 1, "", "__BINARY"], [2, 3, 1, "", "__DESCRIPTION"], [2, 3, 1, "", "__NAME"], [2, 3, 1, "", "__NOVALUE"], [2, 3, 1, "", "__RETURNS"], [2, 3, 1, "", "__U16"], [2, 3, 1, "", "__U8"], [2, 3, 1, "", "__commands"]], "PodDevice_8206HR": [[3, 1, 1, "", "POD_8206HR"]], "PodDevice_8206HR.POD_8206HR": [[3, 2, 1, "", "TranslatePODpacket"], [3, 2, 1, "", "TranslatePODpacket_Binary"], [3, 2, 1, "", "UnpackPODpacket_Binary"], [3, 2, 1, "", "_BinaryBytesToVoltage"], [3, 2, 1, "", "_Read_Binary"], [3, 2, 1, "", "_TranslateTTLbyte_ASCII"], [3, 2, 1, "", "_TranslateTTLbyte_Binary"], [3, 3, 1, "", "__B4BINARYLENGTH"], [3, 3, 1, "", "__B4LENGTH"], [3, 3, 1, "", "_preampGain"]], "PodDevice_8229": [[4, 1, 1, "", "POD_8229"]], "PodDevice_8229.POD_8229": [[4, 2, 1, "", "BuildSetDayScheduleArgument"], [4, 2, 1, "", "CodeDayOfWeek"], [4, 2, 1, "", "CodeDaySchedule"], [4, 2, 1, "", "DecodeDayOfWeek"], [4, 2, 1, "", "DecodeDaySchedule"], [4, 2, 1, "", "DecodeLCDSchedule"], [4, 2, 1, "", "GetCurrentTime"], [4, 2, 1, "", "TranslatePODpacket"], [4, 2, 1, "", "WritePacket"], [4, 2, 1, "", "_CodeDecimalAsHex"], [4, 2, 1, "", "_DecodeDecimalAsHex"], [4, 2, 1, "", "_Validate_Day"], [4, 2, 1, "", "_Validate_Hours"], [4, 2, 1, "", "_Validate_Schedule"], [4, 2, 1, "", "_Validate_Speed"]], "PodDevice_8401HR": [[5, 1, 1, "", "POD_8401HR"]], "PodDevice_8401HR.POD_8401HR": [[5, 2, 1, "", "CalculateBiasDAC_GetDACValue"], [5, 2, 1, "", "CalculateBiasDAC_GetVout"], [5, 2, 1, "", "DecodeSSConfigBitmask"], [5, 2, 1, "", "DecodeTTLByte"], [5, 2, 1, "", "GetChannelMapForPreampDevice"], [5, 2, 1, "", "GetSSConfigBitmask"], [5, 2, 1, "", "GetSupportedPreampDevices"], [5, 2, 1, "", "GetTTLbitmask"], [5, 2, 1, "", "IsPreampDeviceSupported"], [5, 2, 1, "", "TranslatePODpacket"], [5, 2, 1, "", "TranslatePODpacket_Binary"], [5, 2, 1, "", "UnpackPODpacket_Binary"], [5, 2, 1, "", "_Read_Binary"], [5, 2, 1, "", "_Voltage_PrimaryChannels"], [5, 2, 1, "", "_Voltage_PrimaryChannels_Biosensor"], [5, 2, 1, "", "_Voltage_PrimaryChannels_EEGEMG"], [5, 2, 1, "", "_Voltage_SecondaryChannels"], [5, 3, 1, "", "__B5BINARYLENGTH"], [5, 3, 1, "", "__B5LENGTH"], [5, 3, 1, "", "__CHANNELMAPALL"], [5, 3, 1, "", "_preampGain"], [5, 3, 1, "", "_ssGain"]], "PodPacketHandling": [[6, 1, 1, "", "POD_Packets"]], "PodPacketHandling.POD_Packets": [[6, 2, 1, "", "ASCIIbytesToInt_Split"], [6, 2, 1, "", "AsciiBytesToInt"], [6, 2, 1, "", "BinaryBytesToInt"], [6, 2, 1, "", "BinaryBytesToInt_Split"], [6, 2, 1, "", "BuildPODpacket_Standard"], [6, 2, 1, "", "Checksum"], [6, 2, 1, "", "ETX"], [6, 2, 1, "", "IntToAsciiBytes"], [6, 2, 1, "", "PayloadToBytes"], [6, 2, 1, "", "STX"], [6, 2, 1, "", "TwosComplement"]], "SerialCommunication": [[7, 1, 1, "", "COM_io"]], "SerialCommunication.COM_io": [[7, 2, 1, "", "CloseSerialPort"], [7, 2, 1, "", "Flush"], [7, 2, 1, "", "GetCOMportsList"], [7, 2, 1, "", "GetPortName"], [7, 2, 1, "", "IsSerialClosed"], [7, 2, 1, "", "IsSerialOpen"], [7, 2, 1, "", "OpenSerialPort"], [7, 2, 1, "", "Read"], [7, 2, 1, "", "ReadLine"], [7, 2, 1, "", "ReadUntil"], [7, 2, 1, "", "SetBaudrate"], [7, 2, 1, "", "Write"], [7, 2, 1, "", "__BuildPortName"], [7, 3, 1, "", "__serialInst"]], "Setup_8206HR": [[8, 1, 1, "", "Setup_8206HR"]], "Setup_8206HR.Setup_8206HR": [[8, 2, 1, "", "GetDeviceName"], [8, 2, 1, "", "StopStream"], [8, 2, 1, "", "_ChoosePreampGain"], [8, 2, 1, "", "_ConnectPODdevice"], [8, 2, 1, "", "_GetPODdeviceParameterTable"], [8, 2, 1, "", "_GetParam_onePODdevice"], [8, 2, 1, "", "_OpenSaveFile_EDF"], [8, 2, 1, "", "_OpenSaveFile_TXT"], [8, 3, 1, "", "_PHYSICAL_BOUND_uV"], [8, 2, 1, "", "_StreamThreading"], [8, 2, 1, "", "_StreamUntilStop"], [8, 2, 1, "", "_WriteDataToFile_EDF"], [8, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_8229": [[9, 1, 1, "", "Setup_8229"]], "Setup_8229.Setup_8229": [[9, 2, 1, "", "GetDeviceName"], [9, 2, 1, "", "GetSupportedFileExtensions"], [9, 2, 1, "", "StopStream"], [9, 2, 1, "", "_ConnectPODdevice"], [9, 2, 1, "", "_GetPODdeviceParameterTable"], [9, 2, 1, "", "_GetParam_onePODdevice"], [9, 2, 1, "", "_GetScheduleForWeek"], [9, 2, 1, "", "_OpenSaveFile_EDF"], [9, 2, 1, "", "_OpenSaveFile_TXT"], [9, 2, 1, "", "_StreamThreading"], [9, 2, 1, "", "_StreamUntilStop"], [9, 3, 1, "", "_streamMode"]], "Setup_8401HR": [[10, 1, 1, "", "Setup_8401HR"]], "Setup_8401HR.Setup_8401HR": [[10, 2, 1, "", "GetDeviceName"], [10, 2, 1, "", "StopStream"], [10, 2, 1, "", "_CodeDCmode"], [10, 2, 1, "", "_CodeHighpass"], [10, 2, 1, "", "_ConnectPODdevice"], [10, 2, 1, "", "_GetPODdeviceParameterTable"], [10, 2, 1, "", "_GetParam_onePODdevice"], [10, 2, 1, "", "_GetPreampDeviceName"], [10, 2, 1, "", "_NiceABCDtableText"], [10, 2, 1, "", "_OpenSaveFile_EDF"], [10, 2, 1, "", "_OpenSaveFile_TXT"], [10, 3, 1, "", "_PHYSICAL_BOUND_uV"], [10, 2, 1, "", "_SetBias"], [10, 2, 1, "", "_SetDCMode"], [10, 2, 1, "", "_SetForMappedChannels"], [10, 2, 1, "", "_SetHighpass"], [10, 2, 1, "", "_SetLowpass"], [10, 2, 1, "", "_SetPreampGain"], [10, 2, 1, "", "_SetSSGain"], [10, 2, 1, "", "_StreamThreading"], [10, 2, 1, "", "_StreamUntilStop"], [10, 2, 1, "", "_WriteDataToFile_EDF"], [10, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_PodDevices": [[11, 1, 1, "", "Setup_PodDevices"]], "Setup_PodDevices.Setup_PodDevices": [[11, 2, 1, "", "GetOptions"], [11, 2, 1, "", "GetPODparametersInit"], [11, 2, 1, "", "GetSaveFileNames"], [11, 2, 1, "", "Run"], [11, 2, 1, "", "SetupPODparameters"], [11, 2, 1, "", "SetupSaveFile"], [11, 2, 1, "", "_AskOption"], [11, 2, 1, "", "_AskToStopStream"], [11, 2, 1, "", "_AskUserForDevices"], [11, 2, 1, "", "_CheckForValidParams"], [11, 2, 1, "", "_ConnectNewDevice"], [11, 2, 1, "", "_DoOption"], [11, 2, 1, "", "_EditCheckConnect"], [11, 2, 1, "", "_EditSaveFilePath"], [11, 2, 1, "", "_GetChosenDeviceType"], [11, 2, 1, "", "_GetParams"], [11, 2, 1, "", "_PrintInitCode"], [11, 2, 1, "", "_PrintOptions"], [11, 2, 1, "", "_Reconnect"], [11, 2, 1, "", "_RemoveDevice"], [11, 2, 1, "", "_Set_Setup_PodDevices"], [11, 3, 1, "", "_Setup_PodDevices"], [11, 2, 1, "", "_ShowCurrentSettings"], [11, 2, 1, "", "_Stream"], [11, 2, 1, "", "_StreamAllDevices"], [11, 2, 1, "", "_TimeFunc"], [11, 3, 1, "", "_options"]], "Setup_PodInterface": [[12, 1, 1, "", "Setup_Interface"]], "Setup_PodInterface.Setup_Interface": [[12, 2, 1, "", "AddPODdevice"], [12, 2, 1, "", "AreDeviceParamsValid"], [12, 2, 1, "", "ConnectAllPODdevices"], [12, 2, 1, "", "DisplayPODdeviceParameters"], [12, 2, 1, "", "GetDeviceName"], [12, 2, 1, "", "GetPODparametersInit"], [12, 2, 1, "", "GetSaveFileName"], [12, 2, 1, "", "GetSupportedFileExtensions"], [12, 2, 1, "", "PrintSaveFile"], [12, 2, 1, "", "SetupFileName"], [12, 2, 1, "", "SetupPODparameters"], [12, 2, 1, "", "StopStream"], [12, 2, 1, "", "Stream"], [12, 2, 1, "", "ValidateParams"], [12, 2, 1, "", "_BuildFileName"], [12, 2, 1, "", "_ChoosePort"], [12, 2, 1, "", "_ConnectPODdevice"], [12, 2, 1, "", "_DisconnectAllPODdevices"], [12, 2, 1, "", "_EditParams"], [12, 2, 1, "", "_GetForbiddenNames"], [12, 2, 1, "", "_GetPODdeviceParameterTable"], [12, 2, 1, "", "_GetParam_allPODdevices"], [12, 2, 1, "", "_GetParam_onePODdevice"], [12, 2, 1, "", "_GetPortsList"], [12, 2, 1, "", "_GetTimeHeader_forTXT"], [12, 2, 1, "", "_OpenSaveFile"], [12, 2, 1, "", "_OpenSaveFile_EDF"], [12, 2, 1, "", "_OpenSaveFile_TXT"], [12, 2, 1, "", "_PrintDeviceNumber"], [12, 2, 1, "", "_RemoveDevice"], [12, 2, 1, "", "_SelectDeviceFromDict"], [12, 2, 1, "", "_SetNumberOfDevices"], [12, 2, 1, "", "_StreamThreading"], [12, 2, 1, "", "_TestDeviceConnection"], [12, 2, 1, "", "_TestDeviceConnection_All"], [12, 3, 1, "", "_podDevices"], [12, 3, 1, "", "_podParametersDict"], [12, 3, 1, "", "_saveFileName"], [12, 2, 1, "", "_uV"]], "Setup_PodParameters": [[13, 1, 1, "", "Params_8206HR"], [13, 1, 1, "", "Params_8229"], [13, 1, 1, "", "Params_8401HR"], [13, 1, 1, "", "Params_Interface"]], "Setup_PodParameters.Params_8206HR": [[13, 2, 1, "", "EEG1"], [13, 2, 1, "", "EEG2"], [13, 2, 1, "", "EEG3_EMG"], [13, 2, 1, "", "GetInit"], [13, 2, 1, "", "_CheckParams"], [13, 3, 1, "", "lowPass"], [13, 3, 1, "", "lowPassLabels"], [13, 3, 1, "", "port"], [13, 3, 1, "", "preamplifierGain"], [13, 3, 1, "", "sampleRate"]], "Setup_PodParameters.Params_8229": [[13, 2, 1, "", "BuildEmptySchedule"], [13, 2, 1, "", "GetInit"], [13, 2, 1, "", "_CheckParams"], [13, 3, 1, "", "hoursPerDay"], [13, 3, 1, "", "mode"], [13, 3, 1, "", "motorDirection"], [13, 3, 1, "", "motorSpeed"], [13, 3, 1, "", "port"], [13, 3, 1, "", "randomReverse"], [13, 3, 1, "", "reverseBaseTime"], [13, 3, 1, "", "reverseVarTime"], [13, 3, 1, "", "schedule"], [13, 3, 1, "", "systemID"], [13, 3, 1, "", "week"]], "Setup_PodParameters.Params_8401HR": [[13, 2, 1, "", "GetInit"], [13, 2, 1, "", "_CheckParams"], [13, 3, 1, "", "bias"], [13, 3, 1, "", "channelLabels"], [13, 3, 1, "", "dcMode"], [13, 3, 1, "", "highPass"], [13, 3, 1, "", "lowPass"], [13, 3, 1, "", "muxMode"], [13, 3, 1, "", "port"], [13, 3, 1, "", "preampDevice"], [13, 3, 1, "", "preampGain"], [13, 3, 1, "", "sampleRate"], [13, 3, 1, "", "ssGain"]], "Setup_PodParameters.Params_Interface": [[13, 2, 1, "", "GetInit"], [13, 2, 1, "", "_CheckParams"], [13, 2, 1, "", "_FixTypeInTuple"], [13, 3, 1, "", "port"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"basicpodprotocol": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "getuserinput": 1, "podcommand": 2, "poddevice_8206hr": 3, "poddevice_8229": 4, "poddevice_8401hr": 5, "podpackethandl": 6, "serialcommun": 7, "setup_8206hr": 8, "setup_8229": 9, "setup_8401hr": 10, "setup_poddevic": 11, "setup_podinterfac": 12, "setup_podparamet": 13, "welcom": 14, "python": 14, "pod": 14, "api": 14, "": 14, "document": 14, "content": 14, "indic": 14, "tabl": 14, "api_modul": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"BasicPodProtocol module": [[0, "module-BasicPodProtocol"]], "GetUserInput module": [[1, "module-GetUserInput"]], "PodCommands module": [[2, "module-PodCommands"]], "PodDevice_8206HR module": [[3, "module-PodDevice_8206HR"]], "PodDevice_8229 module": [[4, "module-PodDevice_8229"]], "PodDevice_8401HR module": [[5, "module-PodDevice_8401HR"]], "PodPacketHandling module": [[6, "module-PodPacketHandling"]], "SerialCommunication module": [[7, "module-SerialCommunication"]], "Setup_8206HR module": [[8, "module-Setup_8206HR"]], "Setup_8229 module": [[9, "module-Setup_8229"]], "Setup_8401HR module": [[10, "module-Setup_8401HR"]], "Setup_PodDevices module": [[11, "module-Setup_PodDevices"]], "Setup_PodInterface module": [[12, "module-Setup_PodInterface"]], "Setup_PodParameters module": [[13, "module-Setup_PodParameters"]], "Welcome to Python POD API\u2019s documentation!": [[14, "welcome-to-python-pod-api-s-documentation"]], "Contents:": [[14, null]], "Indices and tables": [[14, "indices-and-tables"]], "API_Modules": [[15, "api-modules"]]}, "indexentries": {"basicpodprotocol": [[0, "module-BasicPodProtocol"]], "flushport() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.FlushPort"]], "getdevicecommands() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetDeviceCommands"]], "getnumberofpoddevices() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.GetNumberOfPODDevices"]], "getpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetPODpacket"]], "pod_basics (class in basicpodprotocol)": [[0, "BasicPodProtocol.POD_Basics"]], "readpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.ReadPODpacket"]], "setbaudrateofdevice() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.SetBaudrateOfDevice"]], "translatepodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket"]], "translatepodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Binary"]], "translatepodpacket_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Standard"]], "unpackpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket"]], "unpackpodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Binary"]], "unpackpodpacket_standard() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Standard"]], "writepacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WritePacket"]], "writeread() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WriteRead"]], "_readpodpacket_recursive() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._ReadPODpacket_Recursive"]], "_read_binary() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Binary"]], "_read_getcommand() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_GetCommand"]], "_read_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Standard"]], "_read_toetx() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_ToETX"]], "_validatechecksum() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics._ValidateChecksum"]], "__minbinarylength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINBINARYLENGTH"]], "__minstandardlength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINSTANDARDLENGTH"]], "__numpod (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__numPod"]], "_commands (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._commands"]], "_port (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._port"]], "module": [[0, "module-BasicPodProtocol"], [1, "module-GetUserInput"], [2, "module-PodCommands"], [3, "module-PodDevice_8206HR"], [4, "module-PodDevice_8229"], [5, "module-PodDevice_8401HR"], [6, "module-PodPacketHandling"], [7, "module-SerialCommunication"], [8, "module-Setup_8206HR"], [9, "module-Setup_8229"], [10, "module-Setup_8401HR"], [11, "module-Setup_PodDevices"], [12, "module-Setup_PodInterface"], [13, "module-Setup_PodParameters"]], "askforfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloat"]], "askforfloatinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInList"]], "askforfloatinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInRange"]], "askforinput() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInput"]], "askforint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInt"]], "askforintinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInList"]], "askforintinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInRange"]], "askforstrinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForStrInList"]], "askfortype() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForType"]], "askfortypeinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInList"]], "askfortypeinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInRange"]], "askyn() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskYN"]], "castfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastFloat"]], "castint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastInt"]], "caststr() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastStr"]], "checkfileext() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CheckFileExt"]], "getfilename() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.GetFileName"]], "getfilepath() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.GetFilePath"]], "getuserinput": [[1, "module-GetUserInput"]], "userinput (class in getuserinput)": [[1, "GetUserInput.UserInput"]], "addcommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.AddCommand"]], "argumenthexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ArgumentHexChar"]], "commandnumberfromname() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.CommandNumberFromName"]], "description() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.Description"]], "doescommandexist() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.DoesCommandExist"]], "getbasiccommands() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.GetBasicCommands"]], "getcommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.GetCommands"]], "iscommandbinary() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.IsCommandBinary"]], "novalue() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.NoValue"]], "pod_commands (class in podcommands)": [[2, "PodCommands.POD_Commands"]], "podcommands": [[2, "module-PodCommands"]], "removecommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RemoveCommand"]], "restorebasiccommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RestoreBasicCommands"]], "returnhexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ReturnHexChar"]], "search() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.Search"]], "u16() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U16"]], "u8() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U8"]], "__arguments (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__ARGUMENTS"]], "__binary (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__BINARY"]], "__description (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__DESCRIPTION"]], "__name (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NAME"]], "__novalue (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NOVALUE"]], "__returns (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__RETURNS"]], "__u16 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U16"]], "__u8 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U8"]], "__commands (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__commands"]], "pod_8206hr (class in poddevice_8206hr)": [[3, "PodDevice_8206HR.POD_8206HR"]], "poddevice_8206hr": [[3, "module-PodDevice_8206HR"]], "translatepodpacket() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR.UnpackPODpacket_Binary"]], "_binarybytestovoltage() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._BinaryBytesToVoltage"]], "_read_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._Read_Binary"]], "_translatettlbyte_ascii() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_ASCII"]], "_translatettlbyte_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_Binary"]], "__b4binarylength (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4BINARYLENGTH"]], "__b4length (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4LENGTH"]], "_preampgain (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR._preampGain"]], "buildsetdayscheduleargument() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.BuildSetDayScheduleArgument"]], "codedayofweek() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.CodeDayOfWeek"]], "codedayschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.CodeDaySchedule"]], "decodedayofweek() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeDayOfWeek"]], "decodedayschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeDaySchedule"]], "decodelcdschedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.DecodeLCDSchedule"]], "getcurrenttime() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229.GetCurrentTime"]], "pod_8229 (class in poddevice_8229)": [[4, "PodDevice_8229.POD_8229"]], "poddevice_8229": [[4, "module-PodDevice_8229"]], "translatepodpacket() (poddevice_8229.pod_8229 method)": [[4, "PodDevice_8229.POD_8229.TranslatePODpacket"]], "writepacket() (poddevice_8229.pod_8229 method)": [[4, "PodDevice_8229.POD_8229.WritePacket"]], "_codedecimalashex() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._CodeDecimalAsHex"]], "_decodedecimalashex() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._DecodeDecimalAsHex"]], "_validate_day() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Day"]], "_validate_hours() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Hours"]], "_validate_schedule() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Schedule"]], "_validate_speed() (poddevice_8229.pod_8229 static method)": [[4, "PodDevice_8229.POD_8229._Validate_Speed"]], "calculatebiasdac_getdacvalue() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetDACValue"]], "calculatebiasdac_getvout() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetVout"]], "decodessconfigbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.DecodeSSConfigBitmask"]], "decodettlbyte() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.DecodeTTLByte"]], "getchannelmapforpreampdevice() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetChannelMapForPreampDevice"]], "getssconfigbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetSSConfigBitmask"]], "getsupportedpreampdevices() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetSupportedPreampDevices"]], "getttlbitmask() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.GetTTLbitmask"]], "ispreampdevicesupported() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.IsPreampDeviceSupported"]], "pod_8401hr (class in poddevice_8401hr)": [[5, "PodDevice_8401HR.POD_8401HR"]], "poddevice_8401hr": [[5, "module-PodDevice_8401HR"]], "translatepodpacket() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR.UnpackPODpacket_Binary"]], "_read_binary() (poddevice_8401hr.pod_8401hr method)": [[5, "PodDevice_8401HR.POD_8401HR._Read_Binary"]], "_voltage_primarychannels() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels"]], "_voltage_primarychannels_biosensor() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_Biosensor"]], "_voltage_primarychannels_eegemg() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_EEGEMG"]], "_voltage_secondarychannels() (poddevice_8401hr.pod_8401hr static method)": [[5, "PodDevice_8401HR.POD_8401HR._Voltage_SecondaryChannels"]], "__b5binarylength (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__B5BINARYLENGTH"]], "__b5length (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__B5LENGTH"]], "__channelmapall (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR.__CHANNELMAPALL"]], "_preampgain (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR._preampGain"]], "_ssgain (poddevice_8401hr.pod_8401hr attribute)": [[5, "PodDevice_8401HR.POD_8401HR._ssGain"]], "asciibytestoint_split() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.ASCIIbytesToInt_Split"]], "asciibytestoint() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.AsciiBytesToInt"]], "binarybytestoint() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.BinaryBytesToInt"]], "binarybytestoint_split() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.BinaryBytesToInt_Split"]], "buildpodpacket_standard() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.BuildPODpacket_Standard"]], "checksum() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.Checksum"]], "etx() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.ETX"]], "inttoasciibytes() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.IntToAsciiBytes"]], "pod_packets (class in podpackethandling)": [[6, "PodPacketHandling.POD_Packets"]], "payloadtobytes() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.PayloadToBytes"]], "podpackethandling": [[6, "module-PodPacketHandling"]], "stx() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.STX"]], "twoscomplement() (podpackethandling.pod_packets static method)": [[6, "PodPacketHandling.POD_Packets.TwosComplement"]], "com_io (class in serialcommunication)": [[7, "SerialCommunication.COM_io"]], "closeserialport() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.CloseSerialPort"]], "flush() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.Flush"]], "getcomportslist() (serialcommunication.com_io static method)": [[7, "SerialCommunication.COM_io.GetCOMportsList"]], "getportname() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.GetPortName"]], "isserialclosed() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.IsSerialClosed"]], "isserialopen() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.IsSerialOpen"]], "openserialport() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.OpenSerialPort"]], "read() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.Read"]], "readline() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.ReadLine"]], "readuntil() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.ReadUntil"]], "serialcommunication": [[7, "module-SerialCommunication"]], "setbaudrate() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.SetBaudrate"]], "write() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.Write"]], "__buildportname() (serialcommunication.com_io method)": [[7, "SerialCommunication.COM_io.__BuildPortName"]], "__serialinst (serialcommunication.com_io attribute)": [[7, "SerialCommunication.COM_io.__serialInst"]], "getdevicename() (setup_8206hr.setup_8206hr static method)": [[8, "Setup_8206HR.Setup_8206HR.GetDeviceName"]], "setup_8206hr": [[8, "module-Setup_8206HR"]], "setup_8206hr (class in setup_8206hr)": [[8, "Setup_8206HR.Setup_8206HR"]], "stopstream() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR.StopStream"]], "_choosepreampgain() (setup_8206hr.setup_8206hr static method)": [[8, "Setup_8206HR.Setup_8206HR._ChoosePreampGain"]], "_connectpoddevice() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._GetParam_onePODdevice"]], "_opensavefile_edf() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._OpenSaveFile_TXT"]], "_physical_bound_uv (setup_8206hr.setup_8206hr attribute)": [[8, "Setup_8206HR.Setup_8206HR._PHYSICAL_BOUND_uV"]], "_streamthreading() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._StreamThreading"]], "_streamuntilstop() (setup_8206hr.setup_8206hr method)": [[8, "Setup_8206HR.Setup_8206HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8206hr.setup_8206hr static method)": [[8, "Setup_8206HR.Setup_8206HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8206hr.setup_8206hr static method)": [[8, "Setup_8206HR.Setup_8206HR._WriteDataToFile_TXT"]], "getdevicename() (setup_8229.setup_8229 static method)": [[9, "Setup_8229.Setup_8229.GetDeviceName"]], "getsupportedfileextensions() (setup_8229.setup_8229 static method)": [[9, "Setup_8229.Setup_8229.GetSupportedFileExtensions"]], "setup_8229": [[9, "module-Setup_8229"]], "setup_8229 (class in setup_8229)": [[9, "Setup_8229.Setup_8229"]], "stopstream() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229.StopStream"]], "_connectpoddevice() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._GetParam_onePODdevice"]], "_getscheduleforweek() (setup_8229.setup_8229 static method)": [[9, "Setup_8229.Setup_8229._GetScheduleForWeek"]], "_opensavefile_edf() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._OpenSaveFile_TXT"]], "_streamthreading() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._StreamThreading"]], "_streamuntilstop() (setup_8229.setup_8229 method)": [[9, "Setup_8229.Setup_8229._StreamUntilStop"]], "_streammode (setup_8229.setup_8229 attribute)": [[9, "Setup_8229.Setup_8229._streamMode"]], "getdevicename() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR.GetDeviceName"]], "setup_8401hr": [[10, "module-Setup_8401HR"]], "setup_8401hr (class in setup_8401hr)": [[10, "Setup_8401HR.Setup_8401HR"]], "stopstream() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR.StopStream"]], "_codedcmode() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._CodeDCmode"]], "_codehighpass() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._CodeHighpass"]], "_connectpoddevice() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._GetParam_onePODdevice"]], "_getpreampdevicename() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._GetPreampDeviceName"]], "_niceabcdtabletext() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._NiceABCDtableText"]], "_opensavefile_edf() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._OpenSaveFile_TXT"]], "_physical_bound_uv (setup_8401hr.setup_8401hr attribute)": [[10, "Setup_8401HR.Setup_8401HR._PHYSICAL_BOUND_uV"]], "_setbias() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetBias"]], "_setdcmode() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetDCMode"]], "_setformappedchannels() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._SetForMappedChannels"]], "_sethighpass() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetHighpass"]], "_setlowpass() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetLowpass"]], "_setpreampgain() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetPreampGain"]], "_setssgain() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._SetSSGain"]], "_streamthreading() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._StreamThreading"]], "_streamuntilstop() (setup_8401hr.setup_8401hr method)": [[10, "Setup_8401HR.Setup_8401HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8401hr.setup_8401hr static method)": [[10, "Setup_8401HR.Setup_8401HR._WriteDataToFile_TXT"]], "getoptions() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.GetOptions"]], "getpodparametersinit() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.GetPODparametersInit"]], "getsavefilenames() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.GetSaveFileNames"]], "run() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.Run"]], "setuppodparameters() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.SetupPODparameters"]], "setupsavefile() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices.SetupSaveFile"]], "setup_poddevices": [[11, "module-Setup_PodDevices"]], "setup_poddevices (class in setup_poddevices)": [[11, "Setup_PodDevices.Setup_PodDevices"]], "_askoption() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._AskOption"]], "_asktostopstream() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._AskToStopStream"]], "_askuserfordevices() (setup_poddevices.setup_poddevices static method)": [[11, "Setup_PodDevices.Setup_PodDevices._AskUserForDevices"]], "_checkforvalidparams() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._CheckForValidParams"]], "_connectnewdevice() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._ConnectNewDevice"]], "_dooption() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._DoOption"]], "_editcheckconnect() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._EditCheckConnect"]], "_editsavefilepath() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._EditSaveFilePath"]], "_getchosendevicetype() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._GetChosenDeviceType"]], "_getparams() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._GetParams"]], "_printinitcode() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._PrintInitCode"]], "_printoptions() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._PrintOptions"]], "_reconnect() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._Reconnect"]], "_removedevice() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._RemoveDevice"]], "_set_setup_poddevices() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._Set_Setup_PodDevices"]], "_setup_poddevices (setup_poddevices.setup_poddevices attribute)": [[11, "Setup_PodDevices.Setup_PodDevices._Setup_PodDevices"]], "_showcurrentsettings() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._ShowCurrentSettings"]], "_stream() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._Stream"]], "_streamalldevices() (setup_poddevices.setup_poddevices method)": [[11, "Setup_PodDevices.Setup_PodDevices._StreamAllDevices"]], "_timefunc() (setup_poddevices.setup_poddevices static method)": [[11, "Setup_PodDevices.Setup_PodDevices._TimeFunc"]], "_options (setup_poddevices.setup_poddevices attribute)": [[11, "Setup_PodDevices.Setup_PodDevices._options"]], "addpoddevice() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.AddPODdevice"]], "aredeviceparamsvalid() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.AreDeviceParamsValid"]], "connectallpoddevices() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.ConnectAllPODdevices"]], "displaypoddeviceparameters() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.DisplayPODdeviceParameters"]], "getdevicename() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface.GetDeviceName"]], "getpodparametersinit() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.GetPODparametersInit"]], "getsavefilename() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.GetSaveFileName"]], "getsupportedfileextensions() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface.GetSupportedFileExtensions"]], "printsavefile() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.PrintSaveFile"]], "setupfilename() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.SetupFileName"]], "setuppodparameters() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.SetupPODparameters"]], "setup_interface (class in setup_podinterface)": [[12, "Setup_PodInterface.Setup_Interface"]], "setup_podinterface": [[12, "module-Setup_PodInterface"]], "stopstream() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.StopStream"]], "stream() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.Stream"]], "validateparams() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface.ValidateParams"]], "_buildfilename() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._BuildFileName"]], "_chooseport() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._ChoosePort"]], "_connectpoddevice() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._ConnectPODdevice"]], "_disconnectallpoddevices() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._DisconnectAllPODdevices"]], "_editparams() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._EditParams"]], "_getforbiddennames() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._GetForbiddenNames"]], "_getpoddeviceparametertable() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._GetPODdeviceParameterTable"]], "_getparam_allpoddevices() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._GetParam_allPODdevices"]], "_getparam_onepoddevice() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._GetParam_onePODdevice"]], "_getportslist() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._GetPortsList"]], "_gettimeheader_fortxt() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._GetTimeHeader_forTXT"]], "_opensavefile() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._OpenSaveFile"]], "_opensavefile_edf() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._OpenSaveFile_TXT"]], "_printdevicenumber() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._PrintDeviceNumber"]], "_removedevice() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._RemoveDevice"]], "_selectdevicefromdict() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._SelectDeviceFromDict"]], "_setnumberofdevices() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._SetNumberOfDevices"]], "_streamthreading() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._StreamThreading"]], "_testdeviceconnection() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._TestDeviceConnection"]], "_testdeviceconnection_all() (setup_podinterface.setup_interface method)": [[12, "Setup_PodInterface.Setup_Interface._TestDeviceConnection_All"]], "_poddevices (setup_podinterface.setup_interface attribute)": [[12, "Setup_PodInterface.Setup_Interface._podDevices"]], "_podparametersdict (setup_podinterface.setup_interface attribute)": [[12, "Setup_PodInterface.Setup_Interface._podParametersDict"]], "_savefilename (setup_podinterface.setup_interface attribute)": [[12, "Setup_PodInterface.Setup_Interface._saveFileName"]], "_uv() (setup_podinterface.setup_interface static method)": [[12, "Setup_PodInterface.Setup_Interface._uV"]], "buildemptyschedule() (setup_podparameters.params_8229 static method)": [[13, "Setup_PodParameters.Params_8229.BuildEmptySchedule"]], "eeg1() (setup_podparameters.params_8206hr method)": [[13, "Setup_PodParameters.Params_8206HR.EEG1"]], "eeg2() (setup_podparameters.params_8206hr method)": [[13, "Setup_PodParameters.Params_8206HR.EEG2"]], "eeg3_emg() (setup_podparameters.params_8206hr method)": [[13, "Setup_PodParameters.Params_8206HR.EEG3_EMG"]], "getinit() (setup_podparameters.params_8206hr method)": [[13, "Setup_PodParameters.Params_8206HR.GetInit"]], "getinit() (setup_podparameters.params_8229 method)": [[13, "Setup_PodParameters.Params_8229.GetInit"]], "getinit() (setup_podparameters.params_8401hr method)": [[13, "Setup_PodParameters.Params_8401HR.GetInit"]], "getinit() (setup_podparameters.params_interface method)": [[13, "Setup_PodParameters.Params_Interface.GetInit"]], "params_8206hr (class in setup_podparameters)": [[13, "Setup_PodParameters.Params_8206HR"]], "params_8229 (class in setup_podparameters)": [[13, "Setup_PodParameters.Params_8229"]], "params_8401hr (class in setup_podparameters)": [[13, "Setup_PodParameters.Params_8401HR"]], "params_interface (class in setup_podparameters)": [[13, "Setup_PodParameters.Params_Interface"]], "setup_podparameters": [[13, "module-Setup_PodParameters"]], "_checkparams() (setup_podparameters.params_8206hr method)": [[13, "Setup_PodParameters.Params_8206HR._CheckParams"]], "_checkparams() (setup_podparameters.params_8229 method)": [[13, "Setup_PodParameters.Params_8229._CheckParams"]], "_checkparams() (setup_podparameters.params_8401hr method)": [[13, "Setup_PodParameters.Params_8401HR._CheckParams"]], "_checkparams() (setup_podparameters.params_interface method)": [[13, "Setup_PodParameters.Params_Interface._CheckParams"]], "_fixtypeintuple() (setup_podparameters.params_interface static method)": [[13, "Setup_PodParameters.Params_Interface._FixTypeInTuple"]], "bias (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.bias"]], "channellabels (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.channelLabels"]], "dcmode (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.dcMode"]], "highpass (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.highPass"]], "hoursperday (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.hoursPerDay"]], "lowpass (setup_podparameters.params_8206hr attribute)": [[13, "Setup_PodParameters.Params_8206HR.lowPass"]], "lowpass (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.lowPass"]], "lowpasslabels (setup_podparameters.params_8206hr attribute)": [[13, "Setup_PodParameters.Params_8206HR.lowPassLabels"]], "mode (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.mode"]], "motordirection (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.motorDirection"]], "motorspeed (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.motorSpeed"]], "muxmode (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.muxMode"]], "port (setup_podparameters.params_8206hr attribute)": [[13, "Setup_PodParameters.Params_8206HR.port"]], "port (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.port"]], "port (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.port"]], "port (setup_podparameters.params_interface attribute)": [[13, "Setup_PodParameters.Params_Interface.port"]], "preampdevice (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.preampDevice"]], "preampgain (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.preampGain"]], "preamplifiergain (setup_podparameters.params_8206hr attribute)": [[13, "Setup_PodParameters.Params_8206HR.preamplifierGain"]], "randomreverse (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.randomReverse"]], "reversebasetime (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.reverseBaseTime"]], "reversevartime (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.reverseVarTime"]], "samplerate (setup_podparameters.params_8206hr attribute)": [[13, "Setup_PodParameters.Params_8206HR.sampleRate"]], "samplerate (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.sampleRate"]], "schedule (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.schedule"]], "ssgain (setup_podparameters.params_8401hr attribute)": [[13, "Setup_PodParameters.Params_8401HR.ssGain"]], "systemid (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.systemID"]], "week (setup_podparameters.params_8229 attribute)": [[13, "Setup_PodParameters.Params_8229.week"]]}})