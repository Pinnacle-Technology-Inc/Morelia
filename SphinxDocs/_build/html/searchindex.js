Search.setIndex({"docnames": ["BasicPodProtocol", "GetUserInput", "PodCommands", "PodDevice_8206HR", "PodDevice_8401HR", "PodPacketHandling", "SerialCommunication", "Setup_8206HR", "Setup_8401HR", "Setup_PodDevices", "Setup_PodInterface", "index", "modules"], "filenames": ["BasicPodProtocol.rst", "GetUserInput.rst", "PodCommands.rst", "PodDevice_8206HR.rst", "PodDevice_8401HR.rst", "PodPacketHandling.rst", "SerialCommunication.rst", "Setup_8206HR.rst", "Setup_8401HR.rst", "Setup_PodDevices.rst", "Setup_PodInterface.rst", "index.rst", "modules.rst"], "titles": ["BasicPodProtocol module", "GetUserInput module", "PodCommands module", "PodDevice_8206HR module", "PodDevice_8401HR module", "PodPacketHandling module", "SerialCommunication module", "Setup_8206HR module", "Setup_8401HR module", "Setup_PodDevices module", "Setup_PodInterface module", "Welcome to Python POD API\u2019s documentation!", "API_Modules"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "pod_bas": [0, 3, 4, 10, 12], "port": [0, 3, 4, 6, 7, 8, 10], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "baudrat": [0, 3, 4, 6], "9600": [0, 3, 4, 6], "base": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "object": [0, 1, 2, 5, 6, 7, 8, 9, 10], "handl": [0, 3, 4, 6, 10], "basic": [0, 2, 10], "commun": [0, 3, 4, 6], "gener": [0, 10], "pod": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "devic": [0, 1, 2, 3, 4, 7, 8, 9, 10], "includ": [0, 9], "read": [0, 3, 4, 6, 7, 8, 10, 12], "write": [0, 6, 7, 8, 10, 12], "packet": [0, 3, 4, 5, 7, 8], "interpret": [0, 5], "_port": [0, 12], "instanc": [0, 3, 4, 6, 10], "level": [0, 2, 3, 4, 6, 7, 8, 10], "com_io": [0, 6, 12], "which": [0, 4, 5, 9, 10], "com": [0, 6, 10], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "_command": [0, 12], "pod_command": [0, 2, 12], "store": [0, 4, 9], "inform": [0, 5, 10], "about": 0, "command": [0, 2, 3, 4, 5, 7, 8, 10], "avail": [0, 2, 6, 9, 10], "thi": [0, 2, 5, 9, 10], "getdevicecommand": [0, 12], "dict": [0, 2, 3, 4, 7, 8, 9, 10], "list": [0, 1, 2, 4, 6, 7, 8, 9, 10], "tupl": [0, 2, 5], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "get": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10], "dictionari": [0, 2, 3, 4, 7, 8, 9, 10], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "format": [0, 2, 6, 7, 8, 9], "kei": [0, 2, 4, 7, 8, 9, 10], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10], "name": [0, 2, 4, 6, 7, 8, 9, 10], "argument": [0, 1, 2, 4, 5], "ascii": [0, 2, 3, 4, 5], "byte": [0, 2, 3, 4, 5, 6], "binari": [0, 2, 3, 4, 5], "flag": [0, 2, 5, 9], "static": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "getnumberofpoddevic": [0, 12], "counter": 0, "__numpod": [0, 12], "getpodpacket": [0, 12], "cmd": [0, 2], "payload": [0, 5, 8], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10], "build": [0, 4, 5, 7, 8, 10], "via": 0, "If": [0, 1, 2, 5, 6, 9], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "give": [0, 9], "method": [0, 1, 3, 4, 5, 9, 10], "convert": [0, 3, 4, 5, 6, 10], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "length": [0, 4, 5], "expect": 0, "given": [0, 1, 2, 3, 4, 5, 8, 10], "must": [0, 5, 9, 10], "correct": [0, 10], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "option": [0, 1, 3, 4, 5, 6, 9, 10], "when": [0, 1, 2, 3, 7, 8, 9, 10], "set": [0, 2, 3, 4, 6, 8, 9, 10], "default": [0, 1, 3, 4, 5, 6, 9, 10], "rais": [0, 3, 4, 5, 6, 7, 8, 9, 10], "except": [0, 3, 4, 5, 6, 7, 8, 9, 10], "doe": [0, 2, 3, 4, 5, 6], "exist": [0, 1, 2, 4, 6, 10], "requir": [0, 5, 8, 9, 10], "readpodpacket": [0, 12], "validatechecksum": [0, 3, 4], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "complet": [0, 3, 4, 5, 6, 9], "either": [0, 3], "standard": [0, 2, 3, 5], "begin": [0, 3, 4, 10], "stx": [0, 3, 4, 5, 12], "end": [0, 1, 3, 4, 5, 6, 9, 10], "etx": [0, 3, 4, 5, 12], "first": [0, 5, 6, 10], "start": [0, 5, 7, 8, 10], "recurs": 0, "valid": [0, 1, 3, 4, 8, 9, 10], "checksum": [0, 3, 4, 5, 12], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "skip": [0, 3, 4], "mai": [0, 9], "unformat": 0, "someth": 0, "setbaudrateofdevic": [0, 12], "open": [0, 6, 7, 8, 10], "chang": 0, "baud": [0, 6], "rate": [0, 6, 7, 8], "serial": [0, 6], "success": [0, 7, 8, 10], "otherwis": [0, 2, 4, 6, 7, 8, 9, 10], "translatepodpacket": [0, 3, 4, 12], "msg": [0, 3, 4, 5], "determin": [0, 3], "translat": [0, 3], "accordingli": [0, 3], "A": [0, 3, 4, 8, 10], "unpack": [0, 3, 4], "messag": [0, 1, 3, 4, 5, 6, 8], "translatepodpacket_binari": [0, 3, 4, 12], "variabl": [0, 4], "encod": [0, 3, 4, 5], "leav": [0, 4], "data": [0, 1, 4, 5, 7, 8, 9, 10], "translatepodpacket_standard": [0, 12], "applic": 0, "unpackpodpacket": [0, 12], "unpackpodpacket_binari": [0, 3, 4, 12], "The": [0, 4, 5, 9, 10], "have": [0, 3, 4, 9, 10], "minimum": [0, 1, 3, 4], "2": [0, 2, 3, 4, 5, 8, 9], "3": [0, 2, 3, 4, 7, 9], "4": [0, 2, 3, 4, 5], "after": [0, 3, 4], "unpackpodpacket_standard": [0, 12], "writepacket": [0, 12], "wa": [0, 2, 7, 8, 10], "written": [0, 10], "writeread": [0, 12], "onc": 0, "respons": 0, "_readpodpacket_recurs": [0, 12], "next": 0, "check": [0, 2, 3, 4, 8, 9, 10], "allow": [0, 9], "Then": [0, 5, 6, 9], "cannot": 0, "invalid": [0, 1, 5, 7, 8, 9, 10], "_read_binari": [0, 3, 4, 12], "prepacket": [0, 3, 4], "remain": 0, "part": 0, "It": [0, 5], "how": [0, 10], "long": [0, 5], "from": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10], "mani": [0, 10], "1": [0, 2, 3, 4, 5, 8, 9], "onli": [0, 10], "_read_getcommand": [0, 12], "one": [0, 7, 8, 10], "time": [0, 7, 8, 9, 10], "up": [0, 9], "For": 0, "each": [0, 2, 3, 5, 7, 8, 9, 10], "can": [0, 4, 6, 9, 10], "over": 0, "found": [0, 2], "continu": [0, 7, 8], "_read_standard": [0, 12], "_read_toetx": [0, 12], "until": [0, 6, 9], "restart": 0, "anywher": 0, "_validatechecksum": [0, 12], "calcul": [0, 4, 5, 7, 8, 9], "match": 0, "__minbinarylength": [0, 12], "15": 0, "repres": [0, 2, 3, 4, 5, 7, 8, 9], "__minstandardlength": [0, 12], "8": [0, 2, 3], "0": [0, 2, 3, 4, 8, 9], "count": 0, "maintain": 0, "__init__": 0, "__del__": 0, "userinput": [1, 12], "sever": 1, "user": [1, 6, 7, 8, 9, 10], "input": [1, 3, 4, 7, 8, 9, 10], "setup": [1, 7, 8, 9, 10], "askforfloat": [1, 12], "prompt": [1, 9], "float": [1, 3, 4, 8, 9, 10], "ask": [1, 7, 8, 9, 10], "statement": [1, 9], "request": 1, "askforfloatinlist": [1, 12], "goodinput": 1, "badinputmessag": 1, "error": [1, 9], "print": [1, 9, 10], "choic": [1, 9], "askforfloatinrang": [1, 12], "maximum": 1, "thisi": 1, "unit": 1, "fall": 1, "rang": [1, 5], "descript": [1, 10], "what": [1, 9], "being": 1, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "askforinput": [1, 12], "append": [1, 6, 9, 10], "Will": 1, "colon": 1, "askforint": [1, 12], "askforintinlist": [1, 12], "askforintinrang": [1, 12], "askforstrinlist": [1, 12], "askfortyp": [1, 12], "typecast": 1, "function": [1, 7, 8, 9], "specif": [1, 5], "again": 1, "datatyp": 1, "cast": 1, "ex": 1, "_castint": 1, "_castfloat": 1, "_caststr": 1, "askfortypeinlist": [1, 12], "askfortypeinrang": [1, 12], "numer": 1, "between": 1, "two": [1, 5], "askyn": [1, 12], "question": [1, 9], "y": 1, "n": 1, "ye": 1, "castfloat": [1, 12], "castint": [1, 12], "caststr": [1, 12], "manag": 2, "__command": [2, 12], "entri": [2, 9], "addcommand": [2, 12], "commandnumb": [2, 5], "commandnam": 2, "argumentbyt": 2, "returnbyt": 2, "isbinari": 2, "add": [2, 3], "current": [2, 7, 8, 9, 10], "boolean": [2, 4, 5, 9], "mark": [2, 5], "successfulli": [2, 9, 10], "ad": 2, "could": 2, "becaus": 2, "alreadi": [2, 7, 8, 10], "argumenthexchar": [2, 12], "hex": 2, "charact": [2, 5, 6], "commandnumberfromnam": [2, 12], "doescommandexist": [2, 12], "getbasiccommand": [2, 12], "creat": [2, 5, 7, 8, 10], "5": [2, 4, 8], "6": [2, 10], "7": 2, "9": [2, 4], "10": [2, 3, 7], "11": 2, "12": [2, 4], "getcommand": [2, 12], "content": 2, "iscommandbinari": [2, 12], "novalu": [2, 12], "__novalu": [2, 12], "removecommand": [2, 12], "remov": [2, 5, 9, 10], "restorebasiccommand": [2, 12], "returnhexchar": [2, 12], "u16": [2, 12], "__u16": [2, 12], "u8": [2, 12], "__u8": [2, 12], "__argument": [2, 12], "index": [2, 11], "__binari": [2, 12], "__name": [2, 12], "item": [2, 5, 7, 8], "mean": 2, "undefin": 2, "__return": [2, 12], "hexadecim": [2, 5], "unsign": [2, 4, 5], "16": [2, 3, 4, 5], "bit": [2, 3, 4, 5], "pod_8206hr": [3, 7, 8, 12], "preampgain": [3, 4], "8206hr": 3, "_preampgain": [3, 4, 12], "100": [3, 7], "preamplifi": [3, 4, 7, 8, 10], "gain": [3, 4, 7, 8], "overwrit": [3, 4], "parent": [3, 4], "ttl": [3, 4], "binary4": 3, "channel": [3, 4, 7, 8], "ar": [3, 4, 5, 7, 8, 9, 10], "volt": [3, 4, 10], "ch0": 3, "ch1": 3, "ch2": 3, "separ": [3, 4], "compon": [3, 4], "_binarybytestovoltag": [3, 12], "real": 3, "voltag": [3, 4, 8, 10], "measur": 3, "v": [3, 4, 8], "receiv": [3, 4], "bad": [3, 4], "_translatettlbyte_ascii": [3, 12], "ttlbyte": [3, 4], "One": [3, 4], "output": [3, 4], "_translatettlbyte_binari": [3, 12], "__b4binarylength": [3, 12], "__b4length": [3, 12], "pod_8401hr": [4, 8, 12], "ssgain": 4, "b": [4, 5, 8], "c": [4, 8], "d": [4, 8], "8401": [4, 8], "hr": [4, 7, 8], "_ssgain": [4, 12], "second": [4, 7, 8, 9], "stage": [4, 8], "all": [4, 6, 7, 8, 9, 10], "four": 4, "pramplifi": 4, "calculatebiasdac_getdacvalu": [4, 12], "vout": 4, "dac": 4, "bia": [4, 8], "048": 4, "complement": [4, 5], "calculatebiasdac_getvout": [4, 12], "getchannelmapforpreampdevic": [4, 12], "preampnam": 4, "map": [4, 8], "label": 4, "sensor": [4, 8], "getssconfigbitmask_int": [4, 12], "highpass": [4, 8], "bitmask": 4, "ss": 4, "config": 4, "1x": 4, "els": 4, "5x": 4, "dc": [4, 8], "5hz": 4, "getsupportedpreampdevic": [4, 12], "support": [4, 8, 10], "getttlbitmask_int": [4, 12], "ext0": 4, "ext1": 4, "ttl4": 4, "ttl3": 4, "ttl2": 4, "ttl1": 4, "mask": 4, "ispreampdevicesupport": [4, 12], "preamp": 4, "__channelmapal": [4, 12], "binary5": 4, "analog": 4, "statu": 4, "23": 4, "_translatettlbyt": [4, 12], "dictinoari": 4, "_voltage_primarychannel": [4, 12], "primari": 4, "connect": [4, 7, 8, 9, 10], "_voltage_primarychannels_biosensor": [4, 12], "biosensor": 4, "_voltage_primarychannels_eegemg": [4, 12], "eeg": 4, "emg": [4, 7], "_voltage_secondarychannel": [4, 12], "secondari": 4, "__b5binarylength": [4, 12], "__b5length": [4, 12], "31": 4, "8406": 4, "2bio": 4, "bio1": 4, "bio2": 4, "nc": 4, "bio": 4, "eeg2bio": 4, "eeg1": [4, 7], "se": 4, "eeg2": [4, 7], "se3": 4, "eeg3": [4, 7], "se31m": 4, "se4": 4, "eeg4": 4, "sl": 4, "8407": 4, "pod_packet": [5, 12], "collect": [5, 7, 8], "asciibytestoint_split": [5, 12], "keeptopbit": 5, "cutbottombit": 5, "hold": 5, "posit": 5, "msb": 5, "desir": [5, 10], "lsb": 5, "result": 5, "asciibytestoint": [5, 12], "msg_b": 5, "sign": 5, "convers": 5, "neg": 5, "fail": [5, 10], "binarybytestoint": [5, 12], "byteord": 5, "big": 5, "order": 5, "endian": 5, "littl": 5, "binarybytestoint_split": [5, 12], "buildpodpacket_standard": [5, 12], "bytesin": 5, "achiev": 5, "sum": 5, "invert": 5, "take": [5, 8], "last": 5, "transmiss": 5, "0x03": 5, "inttoasciibyt": [5, 12], "numchar": 5, "usabl": 5, "uppercas": 5, "code": [5, 8, 9], "lastli": 5, "ensur": 5, "final": 5, "exampl": 5, "numbyt": [5, 6], "show": 5, "0002": 5, "0x30": 5, "0x32": 5, "val": 5, "payloadtobyt": [5, 12], "argsiz": 5, "size": 5, "multipl": [5, 7, 8], "wrong": 5, "ha": 5, "incorrect": 5, "0x02": 5, "twoscompl": [5, 12], "nbit": 5, "__serialinst": [6, 12], "closeserialport": [6, 12], "close": 6, "getcomportslist": [6, 12], "find": 6, "comput": 6, "them": [6, 10], "access": [6, 10], "getportnam": [6, 12], "isserialclos": [6, 12], "isserialopen": [6, 12], "openserialport": [6, 12], "specifi": 6, "readlin": [6, 12], "new": [6, 9, 10], "line": [6, 10], "readuntil": [6, 12], "eol": 6, "setbaudr": [6, 12], "__buildportnam": [6, 12], "setup_interfac": [7, 8, 9, 10, 12], "provid": [7, 8, 10], "8206": [7, 8], "getdevicenam": [7, 8, 10, 12], "_name": [7, 8, 10, 12], "stopstream": [7, 8, 10, 12], "stop": [7, 8, 9, 10], "stream": [7, 8, 9, 10, 12], "_choosepreampgain": [7, 12], "_connectpoddevic": [7, 8, 10, 12], "devicenum": [7, 8, 10], "deviceparam": [7, 8, 10], "_getpoddeviceparametert": [7, 8, 10, 12], "texttabl": [7, 8, 10], "tabl": [7, 8, 10], "_getparam_onepoddevic": [7, 8, 10, 12], "forbiddennam": [7, 8, 10], "other": [7, 8, 10], "_isonedevicevalid": [7, 8, 10, 12], "paramdict": [7, 8, 10], "incorrectli": 7, "low": [7, 8], "pass": [7, 8], "_lowpasskei": [7, 12], "_opensavefile_edf": [7, 8, 10, 12], "fname": [7, 8, 10], "devnum": [7, 8, 10], "edfwrit": [7, 8, 10], "edf": [7, 8, 9, 10], "file": [7, 8, 9, 10], "header": [7, 8, 10], "filenam": [7, 8, 9, 10], "_opensavefile_txt": [7, 8, 10, 12], "iobas": [7, 8, 10], "text": [7, 8, 10], "column": [7, 8, 10], "date": [7, 8, 10], "top": [7, 8, 10], "txt": [7, 8, 9, 10], "_paramkei": [7, 8, 12], "sampl": [7, 8], "_physical_bound_uv": [7, 8, 12], "2046": [7, 8], "max": [7, 8], "min": [7, 8], "physic": [7, 8], "uv": [7, 8, 10], "_streamthread": [7, 8, 10, 12], "thread": [7, 8, 9, 10], "save": [7, 8, 9, 10], "_streamuntilstop": [7, 8, 12], "sampler": [7, 8], "look": [7, 8], "averag": [7, 8], "differ": [7, 8, 9], "across": [7, 8], "seri": [7, 8], "hz": [7, 8], "_writedatatofile_edf": [7, 8, 12], "numpi": [7, 8], "ndarrai": [7, 8], "np": [7, 8], "_writedatatofile_txt": [7, 8, 12], "t": [7, 8], "stamp": [7, 8], "firmwar": [8, 9], "OR": [8, 9], "higher": [8, 9], "_channelkei": [8, 12], "high": 8, "mode": 8, "_codedcmod": [8, 12], "dcmode": 8, "vbia": 8, "agnd": 8, "_codehighpass": [8, 12], "_getpreampdevicenam": [8, 12], "select": [8, 9, 10], "mous": 8, "rat": 8, "chosen": [8, 9], "_ischanneltypevalid": [8, 12], "chdict": 8, "istyp": 8, "abcd": 8, "empti": [8, 9, 10], "_niceabcdtabletext": [8, 12], "abcdvaluedict": 8, "channelmap": 8, "newlin": [8, 10], "mux": 8, "_setbia": [8, 12], "channelnam": 8, "048v": 8, "thebia": 8, "_setdcmod": [8, 12], "_setformappedchannel": [8, 12], "func": [8, 9], "exclud": [8, 10], "_sethighpass": [8, 12], "10hz": 8, "frequenc": 8, "_setlowpass": [8, 12], "21": 8, "15000hz": 8, "_setpreampgain": [8, 12], "_setssgain": [8, 12], "savefil": 9, "podparametersdict": [9, 10], "ani": [9, 10], "_setup_poddevic": [9, 12], "subclass": [9, 10], "_savefilenam": [9, 10, 12], "path": [9, 10], "extens": 9, "extend": 9, "_": 9, "_option": [9, 12], "getopt": [9, 12], "getpodparametersdict": [9, 10, 12], "initi": 9, "getsavefilenam": [9, 12], "run": [9, 12], "do": 9, "loop": 9, "quit": 9, "setuppodparamet": [9, 10, 12], "setupsavefil": [9, 12], "directori": 9, "_askopt": [9, 12], "_asktostopstream": [9, 12], "press": 9, "enter": 9, "program": 9, "_askuserfordevic": [9, 12], "thei": [9, 10], "want": [9, 10], "_checkfileext": [9, 12], "f": 9, "fisext": 9, "goodext": 9, "csv": 9, "printerr": 9, "_summary_": 9, "_checkforvalidparam": [9, 12], "correctli": 9, "respect": 9, "paramat": 9, "_connectnewdevic": [9, 12], "_dooption": [9, 12], "perform": [9, 10], "associ": 9, "_editcheckconnect": [9, 12], "displai": [9, 10], "edit": [9, 10], "reconnect": 9, "_editsavefilepath": [9, 12], "_getchosendevicetyp": [9, 12], "_getfilenam": [9, 12], "_getfilepath": [9, 12], "_getparam": [9, 12], "whose": [9, 10], "_printinitcod": [9, 12], "setuppoddevic": [9, 10], "_printopt": [9, 12], "_printsavefil": [9, 12], "note": [9, 10], "_reconnect": [9, 12], "were": 9, "_removedevic": [9, 10, 12], "ro": 9, "delet": [9, 10], "_setfilenametodevic": [9, 12], "_set_setup_poddevic": [9, 12], "varaibl": 9, "_showcurrentset": [9, 12], "_stream": [9, 12], "execut": 9, "_streamalldevic": [9, 12], "click": 9, "_timefunc": [9, 12], "execult": 9, "round": [9, 10], "decim": [9, 10], "place": [9, 10], "interfac": 10, "implement": 10, "py": 10, "design": 10, "children": 10, "_poddevic": [10, 12], "_podparametersdict": [10, 12], "_portkei": [10, 12], "ext": 10, "aredeviceparamsvalid": [10, 12], "connectallpoddevic": [10, 12], "displaypoddeviceparamet": [10, 12], "setfilenam": [10, 12], "test": 10, "_addpoddevic": [10, 12], "_buildfilenam": [10, 12], "_chooseport": [10, 12], "forbidden": 10, "_disconnectallpoddevic": [10, 12], "disconnect": 10, "obejct": 10, "_editparam": [10, 12], "re": 10, "_getforbiddennam": [10, 12], "activ": 10, "There": 10, "addit": 10, "_getportslist": [10, 12], "_gettimeheader_fortxt": [10, 12], "should": 10, "overwritten": 10, "child": 10, "_opensavefil": [10, 12], "_printdevicenumb": [10, 12], "num": 10, "titl": 10, "more": 10, "than": 10, "_selectdevicefromdict": [10, 12], "action": 10, "_setnumberofdevic": [10, 12], "_setparam_allpoddevic": [10, 12], "_testdeviceconnect": [10, 12], "send": 10, "ping": 10, "_testdeviceconnection_al": [10, 12], "_validateparam": [10, 12], "everyth": 10, "_uv": [10, 12], "microvolt": 10, "api_modul": 11, "basicpodprotocol": [11, 12], "modul": [11, 12], "getuserinput": [11, 12], "podcommand": [11, 12], "poddevice_8206hr": [11, 12], "poddevice_8401hr": [11, 12], "podpackethandl": [11, 12], "serialcommun": [11, 12], "setup_8206hr": [11, 12], "setup_8401hr": [11, 12], "setup_poddevic": [11, 12], "setup_podinterfac": [11, 12], "search": 11, "page": 11}, "objects": {"": [[0, 0, 0, "-", "BasicPodProtocol"], [1, 0, 0, "-", "GetUserInput"], [2, 0, 0, "-", "PodCommands"], [3, 0, 0, "-", "PodDevice_8206HR"], [4, 0, 0, "-", "PodDevice_8401HR"], [5, 0, 0, "-", "PodPacketHandling"], [6, 0, 0, "-", "SerialCommunication"], [7, 0, 0, "-", "Setup_8206HR"], [8, 0, 0, "-", "Setup_8401HR"], [9, 0, 0, "-", "Setup_PodDevices"], [10, 0, 0, "-", "Setup_PodInterface"]], "BasicPodProtocol": [[0, 1, 1, "", "POD_Basics"]], "BasicPodProtocol.POD_Basics": [[0, 2, 1, "", "GetDeviceCommands"], [0, 2, 1, "", "GetNumberOfPODDevices"], [0, 2, 1, "", "GetPODpacket"], [0, 2, 1, "", "ReadPODpacket"], [0, 2, 1, "", "SetBaudrateOfDevice"], [0, 2, 1, "", "TranslatePODpacket"], [0, 2, 1, "", "TranslatePODpacket_Binary"], [0, 2, 1, "", "TranslatePODpacket_Standard"], [0, 2, 1, "", "UnpackPODpacket"], [0, 2, 1, "", "UnpackPODpacket_Binary"], [0, 2, 1, "", "UnpackPODpacket_Standard"], [0, 2, 1, "", "WritePacket"], [0, 2, 1, "", "WriteRead"], [0, 2, 1, "", "_ReadPODpacket_Recursive"], [0, 2, 1, "", "_Read_Binary"], [0, 2, 1, "", "_Read_GetCommand"], [0, 2, 1, "", "_Read_Standard"], [0, 2, 1, "", "_Read_ToETX"], [0, 2, 1, "", "_ValidateChecksum"], [0, 3, 1, "", "__MINBINARYLENGTH"], [0, 3, 1, "", "__MINSTANDARDLENGTH"], [0, 3, 1, "", "__numPod"], [0, 3, 1, "", "_commands"], [0, 3, 1, "", "_port"]], "GetUserInput": [[1, 1, 1, "", "UserInput"]], "GetUserInput.UserInput": [[1, 2, 1, "", "AskForFloat"], [1, 2, 1, "", "AskForFloatInList"], [1, 2, 1, "", "AskForFloatInRange"], [1, 2, 1, "", "AskForInput"], [1, 2, 1, "", "AskForInt"], [1, 2, 1, "", "AskForIntInList"], [1, 2, 1, "", "AskForIntInRange"], [1, 2, 1, "", "AskForStrInList"], [1, 2, 1, "", "AskForType"], [1, 2, 1, "", "AskForTypeInList"], [1, 2, 1, "", "AskForTypeInRange"], [1, 2, 1, "", "AskYN"], [1, 2, 1, "", "CastFloat"], [1, 2, 1, "", "CastInt"], [1, 2, 1, "", "CastStr"]], "PodCommands": [[2, 1, 1, "", "POD_Commands"]], "PodCommands.POD_Commands": [[2, 2, 1, "", "AddCommand"], [2, 2, 1, "", "ArgumentHexChar"], [2, 2, 1, "", "CommandNumberFromName"], [2, 2, 1, "", "DoesCommandExist"], [2, 2, 1, "", "GetBasicCommands"], [2, 2, 1, "", "GetCommands"], [2, 2, 1, "", "IsCommandBinary"], [2, 2, 1, "", "NoValue"], [2, 2, 1, "", "RemoveCommand"], [2, 2, 1, "", "RestoreBasicCommands"], [2, 2, 1, "", "ReturnHexChar"], [2, 2, 1, "", "U16"], [2, 2, 1, "", "U8"], [2, 3, 1, "", "__ARGUMENTS"], [2, 3, 1, "", "__BINARY"], [2, 3, 1, "", "__NAME"], [2, 3, 1, "", "__NOVALUE"], [2, 3, 1, "", "__RETURNS"], [2, 3, 1, "", "__U16"], [2, 3, 1, "", "__U8"], [2, 3, 1, "", "__commands"]], "PodDevice_8206HR": [[3, 1, 1, "", "POD_8206HR"]], "PodDevice_8206HR.POD_8206HR": [[3, 2, 1, "", "TranslatePODpacket"], [3, 2, 1, "", "TranslatePODpacket_Binary"], [3, 2, 1, "", "UnpackPODpacket_Binary"], [3, 2, 1, "", "_BinaryBytesToVoltage"], [3, 2, 1, "", "_Read_Binary"], [3, 2, 1, "", "_TranslateTTLbyte_ASCII"], [3, 2, 1, "", "_TranslateTTLbyte_Binary"], [3, 3, 1, "", "__B4BINARYLENGTH"], [3, 3, 1, "", "__B4LENGTH"], [3, 3, 1, "", "_preampGain"]], "PodDevice_8401HR": [[4, 1, 1, "", "POD_8401HR"]], "PodDevice_8401HR.POD_8401HR": [[4, 2, 1, "", "CalculateBiasDAC_GetDACValue"], [4, 2, 1, "", "CalculateBiasDAC_GetVout"], [4, 2, 1, "", "GetChannelMapForPreampDevice"], [4, 2, 1, "", "GetSSConfigBitmask_int"], [4, 2, 1, "", "GetSupportedPreampDevices"], [4, 2, 1, "", "GetTTLbitmask_Int"], [4, 2, 1, "", "IsPreampDeviceSupported"], [4, 2, 1, "", "TranslatePODpacket"], [4, 2, 1, "", "TranslatePODpacket_Binary"], [4, 2, 1, "", "UnpackPODpacket_Binary"], [4, 2, 1, "", "_Read_Binary"], [4, 2, 1, "", "_TranslateTTLByte"], [4, 2, 1, "", "_Voltage_PrimaryChannels"], [4, 2, 1, "", "_Voltage_PrimaryChannels_Biosensor"], [4, 2, 1, "", "_Voltage_PrimaryChannels_EEGEMG"], [4, 2, 1, "", "_Voltage_SecondaryChannels"], [4, 3, 1, "", "__B5BINARYLENGTH"], [4, 3, 1, "", "__B5LENGTH"], [4, 3, 1, "", "__CHANNELMAPALL"], [4, 3, 1, "", "_preampGain"], [4, 3, 1, "", "_ssGain"]], "PodPacketHandling": [[5, 1, 1, "", "POD_Packets"]], "PodPacketHandling.POD_Packets": [[5, 2, 1, "", "ASCIIbytesToInt_Split"], [5, 2, 1, "", "AsciiBytesToInt"], [5, 2, 1, "", "BinaryBytesToInt"], [5, 2, 1, "", "BinaryBytesToInt_Split"], [5, 2, 1, "", "BuildPODpacket_Standard"], [5, 2, 1, "", "Checksum"], [5, 2, 1, "", "ETX"], [5, 2, 1, "", "IntToAsciiBytes"], [5, 2, 1, "", "PayloadToBytes"], [5, 2, 1, "", "STX"], [5, 2, 1, "", "TwosComplement"]], "SerialCommunication": [[6, 1, 1, "", "COM_io"]], "SerialCommunication.COM_io": [[6, 2, 1, "", "CloseSerialPort"], [6, 2, 1, "", "GetCOMportsList"], [6, 2, 1, "", "GetPortName"], [6, 2, 1, "", "IsSerialClosed"], [6, 2, 1, "", "IsSerialOpen"], [6, 2, 1, "", "OpenSerialPort"], [6, 2, 1, "", "Read"], [6, 2, 1, "", "ReadLine"], [6, 2, 1, "", "ReadUntil"], [6, 2, 1, "", "SetBaudrate"], [6, 2, 1, "", "Write"], [6, 2, 1, "", "__BuildPortName"], [6, 3, 1, "", "__serialInst"]], "Setup_8206HR": [[7, 1, 1, "", "Setup_8206HR"]], "Setup_8206HR.Setup_8206HR": [[7, 2, 1, "", "GetDeviceName"], [7, 2, 1, "", "StopStream"], [7, 2, 1, "", "_ChoosePreampGain"], [7, 2, 1, "", "_ConnectPODdevice"], [7, 2, 1, "", "_GetPODdeviceParameterTable"], [7, 2, 1, "", "_GetParam_onePODdevice"], [7, 2, 1, "", "_IsOneDeviceValid"], [7, 3, 1, "", "_LOWPASSKEYS"], [7, 3, 1, "", "_NAME"], [7, 2, 1, "", "_OpenSaveFile_EDF"], [7, 2, 1, "", "_OpenSaveFile_TXT"], [7, 3, 1, "", "_PARAMKEYS"], [7, 3, 1, "", "_PHYSICAL_BOUND_uV"], [7, 2, 1, "", "_StreamThreading"], [7, 2, 1, "", "_StreamUntilStop"], [7, 2, 1, "", "_WriteDataToFile_EDF"], [7, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_8401HR": [[8, 1, 1, "", "Setup_8401HR"]], "Setup_8401HR.Setup_8401HR": [[8, 2, 1, "", "GetDeviceName"], [8, 2, 1, "", "StopStream"], [8, 3, 1, "", "_CHANNELKEYS"], [8, 2, 1, "", "_CodeDCmode"], [8, 2, 1, "", "_CodeHighpass"], [8, 2, 1, "", "_ConnectPODdevice"], [8, 2, 1, "", "_GetPODdeviceParameterTable"], [8, 2, 1, "", "_GetParam_onePODdevice"], [8, 2, 1, "", "_GetPreampDeviceName"], [8, 2, 1, "", "_IsChannelTypeValid"], [8, 2, 1, "", "_IsOneDeviceValid"], [8, 3, 1, "", "_NAME"], [8, 2, 1, "", "_NiceABCDtableText"], [8, 2, 1, "", "_OpenSaveFile_EDF"], [8, 2, 1, "", "_OpenSaveFile_TXT"], [8, 3, 1, "", "_PARAMKEYS"], [8, 3, 1, "", "_PHYSICAL_BOUND_uV"], [8, 2, 1, "", "_SetBias"], [8, 2, 1, "", "_SetDCMode"], [8, 2, 1, "", "_SetForMappedChannels"], [8, 2, 1, "", "_SetHighpass"], [8, 2, 1, "", "_SetLowpass"], [8, 2, 1, "", "_SetPreampGain"], [8, 2, 1, "", "_SetSSGain"], [8, 2, 1, "", "_StreamThreading"], [8, 2, 1, "", "_StreamUntilStop"], [8, 2, 1, "", "_WriteDataToFile_EDF"], [8, 2, 1, "", "_WriteDataToFile_TXT"]], "Setup_PodDevices": [[9, 1, 1, "", "Setup_PodDevices"]], "Setup_PodDevices.Setup_PodDevices": [[9, 2, 1, "", "GetOptions"], [9, 2, 1, "", "GetPODparametersDict"], [9, 2, 1, "", "GetSaveFileName"], [9, 2, 1, "", "Run"], [9, 2, 1, "", "SetupPODparameters"], [9, 2, 1, "", "SetupSaveFile"], [9, 2, 1, "", "_AskOption"], [9, 2, 1, "", "_AskToStopStream"], [9, 2, 1, "", "_AskUserForDevices"], [9, 2, 1, "", "_CheckFileExt"], [9, 2, 1, "", "_CheckForValidParams"], [9, 2, 1, "", "_ConnectNewDevice"], [9, 2, 1, "", "_DoOption"], [9, 2, 1, "", "_EditCheckConnect"], [9, 2, 1, "", "_EditSaveFilePath"], [9, 2, 1, "", "_GetChosenDeviceType"], [9, 2, 1, "", "_GetFileName"], [9, 2, 1, "", "_GetFilePath"], [9, 2, 1, "", "_GetParams"], [9, 2, 1, "", "_PrintInitCode"], [9, 2, 1, "", "_PrintOptions"], [9, 2, 1, "", "_PrintSaveFile"], [9, 2, 1, "", "_Reconnect"], [9, 2, 1, "", "_RemoveDevice"], [9, 2, 1, "", "_SetFilenameToDevices"], [9, 2, 1, "", "_Set_Setup_PodDevices"], [9, 3, 1, "", "_Setup_PodDevices"], [9, 2, 1, "", "_ShowCurrentSettings"], [9, 2, 1, "", "_Stream"], [9, 2, 1, "", "_StreamAllDevices"], [9, 2, 1, "", "_TimeFunc"], [9, 3, 1, "", "_options"], [9, 3, 1, "", "_saveFileName"]], "Setup_PodInterface": [[10, 1, 1, "", "Setup_Interface"]], "Setup_PodInterface.Setup_Interface": [[10, 2, 1, "", "AreDeviceParamsValid"], [10, 2, 1, "", "ConnectAllPODdevices"], [10, 2, 1, "", "DisplayPODdeviceParameters"], [10, 2, 1, "", "GetDeviceName"], [10, 2, 1, "", "GetPODparametersDict"], [10, 2, 1, "", "SetFileName"], [10, 2, 1, "", "SetupPODparameters"], [10, 2, 1, "", "StopStream"], [10, 2, 1, "", "Stream"], [10, 2, 1, "", "_AddPODdevice"], [10, 2, 1, "", "_BuildFileName"], [10, 2, 1, "", "_ChoosePort"], [10, 2, 1, "", "_ConnectPODdevice"], [10, 2, 1, "", "_DisconnectAllPODdevices"], [10, 2, 1, "", "_EditParams"], [10, 2, 1, "", "_GetForbiddenNames"], [10, 2, 1, "", "_GetPODdeviceParameterTable"], [10, 2, 1, "", "_GetParam_onePODdevice"], [10, 2, 1, "", "_GetPortsList"], [10, 2, 1, "", "_GetTimeHeader_forTXT"], [10, 2, 1, "", "_IsOneDeviceValid"], [10, 3, 1, "", "_NAME"], [10, 2, 1, "", "_OpenSaveFile"], [10, 2, 1, "", "_OpenSaveFile_EDF"], [10, 2, 1, "", "_OpenSaveFile_TXT"], [10, 3, 1, "", "_PORTKEY"], [10, 2, 1, "", "_PrintDeviceNumber"], [10, 2, 1, "", "_RemoveDevice"], [10, 2, 1, "", "_SelectDeviceFromDict"], [10, 2, 1, "", "_SetNumberOfDevices"], [10, 2, 1, "", "_SetParam_allPODdevices"], [10, 2, 1, "", "_StreamThreading"], [10, 2, 1, "", "_TestDeviceConnection"], [10, 2, 1, "", "_TestDeviceConnection_All"], [10, 2, 1, "", "_ValidateParams"], [10, 3, 1, "", "_podDevices"], [10, 3, 1, "", "_podParametersDict"], [10, 3, 1, "", "_saveFileName"], [10, 2, 1, "", "_uV"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"basicpodprotocol": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "getuserinput": 1, "podcommand": 2, "poddevice_8206hr": 3, "poddevice_8401hr": 4, "podpackethandl": 5, "serialcommun": 6, "setup_8206hr": 7, "setup_8401hr": 8, "setup_poddevic": 9, "setup_podinterfac": 10, "welcom": 11, "python": 11, "pod": 11, "api": 11, "": 11, "document": 11, "content": 11, "indic": 11, "tabl": 11, "api_modul": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"BasicPodProtocol module": [[0, "module-BasicPodProtocol"]], "GetUserInput module": [[1, "module-GetUserInput"]], "PodCommands module": [[2, "module-PodCommands"]], "PodDevice_8206HR module": [[3, "module-PodDevice_8206HR"]], "PodDevice_8401HR module": [[4, "module-PodDevice_8401HR"]], "PodPacketHandling module": [[5, "module-PodPacketHandling"]], "SerialCommunication module": [[6, "module-SerialCommunication"]], "Setup_8206HR module": [[7, "module-Setup_8206HR"]], "Setup_8401HR module": [[8, "module-Setup_8401HR"]], "Setup_PodDevices module": [[9, "module-Setup_PodDevices"]], "Setup_PodInterface module": [[10, "module-Setup_PodInterface"]], "Welcome to Python POD API\u2019s documentation!": [[11, "welcome-to-python-pod-api-s-documentation"]], "Contents:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]], "API_Modules": [[12, "api-modules"]]}, "indexentries": {"basicpodprotocol": [[0, "module-BasicPodProtocol"]], "getdevicecommands() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetDeviceCommands"]], "getnumberofpoddevices() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.GetNumberOfPODDevices"]], "getpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.GetPODpacket"]], "pod_basics (class in basicpodprotocol)": [[0, "BasicPodProtocol.POD_Basics"]], "readpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.ReadPODpacket"]], "setbaudrateofdevice() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.SetBaudrateOfDevice"]], "translatepodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket"]], "translatepodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Binary"]], "translatepodpacket_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.TranslatePODpacket_Standard"]], "unpackpodpacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket"]], "unpackpodpacket_binary() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Binary"]], "unpackpodpacket_standard() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics.UnpackPODpacket_Standard"]], "writepacket() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WritePacket"]], "writeread() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics.WriteRead"]], "_readpodpacket_recursive() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._ReadPODpacket_Recursive"]], "_read_binary() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Binary"]], "_read_getcommand() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_GetCommand"]], "_read_standard() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_Standard"]], "_read_toetx() (basicpodprotocol.pod_basics method)": [[0, "BasicPodProtocol.POD_Basics._Read_ToETX"]], "_validatechecksum() (basicpodprotocol.pod_basics static method)": [[0, "BasicPodProtocol.POD_Basics._ValidateChecksum"]], "__minbinarylength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINBINARYLENGTH"]], "__minstandardlength (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__MINSTANDARDLENGTH"]], "__numpod (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics.__numPod"]], "_commands (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._commands"]], "_port (basicpodprotocol.pod_basics attribute)": [[0, "BasicPodProtocol.POD_Basics._port"]], "module": [[0, "module-BasicPodProtocol"], [1, "module-GetUserInput"], [2, "module-PodCommands"], [3, "module-PodDevice_8206HR"], [4, "module-PodDevice_8401HR"], [5, "module-PodPacketHandling"], [6, "module-SerialCommunication"], [7, "module-Setup_8206HR"], [8, "module-Setup_8401HR"], [9, "module-Setup_PodDevices"], [10, "module-Setup_PodInterface"]], "askforfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloat"]], "askforfloatinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInList"]], "askforfloatinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForFloatInRange"]], "askforinput() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInput"]], "askforint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForInt"]], "askforintinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInList"]], "askforintinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForIntInRange"]], "askforstrinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForStrInList"]], "askfortype() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForType"]], "askfortypeinlist() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInList"]], "askfortypeinrange() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskForTypeInRange"]], "askyn() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.AskYN"]], "castfloat() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastFloat"]], "castint() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastInt"]], "caststr() (getuserinput.userinput static method)": [[1, "GetUserInput.UserInput.CastStr"]], "getuserinput": [[1, "module-GetUserInput"]], "userinput (class in getuserinput)": [[1, "GetUserInput.UserInput"]], "addcommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.AddCommand"]], "argumenthexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ArgumentHexChar"]], "commandnumberfromname() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.CommandNumberFromName"]], "doescommandexist() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.DoesCommandExist"]], "getbasiccommands() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.GetBasicCommands"]], "getcommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.GetCommands"]], "iscommandbinary() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.IsCommandBinary"]], "novalue() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.NoValue"]], "pod_commands (class in podcommands)": [[2, "PodCommands.POD_Commands"]], "podcommands": [[2, "module-PodCommands"]], "removecommand() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RemoveCommand"]], "restorebasiccommands() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.RestoreBasicCommands"]], "returnhexchar() (podcommands.pod_commands method)": [[2, "PodCommands.POD_Commands.ReturnHexChar"]], "u16() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U16"]], "u8() (podcommands.pod_commands static method)": [[2, "PodCommands.POD_Commands.U8"]], "__arguments (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__ARGUMENTS"]], "__binary (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__BINARY"]], "__name (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NAME"]], "__novalue (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__NOVALUE"]], "__returns (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__RETURNS"]], "__u16 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U16"]], "__u8 (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__U8"]], "__commands (podcommands.pod_commands attribute)": [[2, "PodCommands.POD_Commands.__commands"]], "pod_8206hr (class in poddevice_8206hr)": [[3, "PodDevice_8206HR.POD_8206HR"]], "poddevice_8206hr": [[3, "module-PodDevice_8206HR"]], "translatepodpacket() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR.UnpackPODpacket_Binary"]], "_binarybytestovoltage() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._BinaryBytesToVoltage"]], "_read_binary() (poddevice_8206hr.pod_8206hr method)": [[3, "PodDevice_8206HR.POD_8206HR._Read_Binary"]], "_translatettlbyte_ascii() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_ASCII"]], "_translatettlbyte_binary() (poddevice_8206hr.pod_8206hr static method)": [[3, "PodDevice_8206HR.POD_8206HR._TranslateTTLbyte_Binary"]], "__b4binarylength (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4BINARYLENGTH"]], "__b4length (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR.__B4LENGTH"]], "_preampgain (poddevice_8206hr.pod_8206hr attribute)": [[3, "PodDevice_8206HR.POD_8206HR._preampGain"]], "calculatebiasdac_getdacvalue() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetDACValue"]], "calculatebiasdac_getvout() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.CalculateBiasDAC_GetVout"]], "getchannelmapforpreampdevice() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.GetChannelMapForPreampDevice"]], "getssconfigbitmask_int() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.GetSSConfigBitmask_int"]], "getsupportedpreampdevices() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.GetSupportedPreampDevices"]], "getttlbitmask_int() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.GetTTLbitmask_Int"]], "ispreampdevicesupported() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.IsPreampDeviceSupported"]], "pod_8401hr (class in poddevice_8401hr)": [[4, "PodDevice_8401HR.POD_8401HR"]], "poddevice_8401hr": [[4, "module-PodDevice_8401HR"]], "translatepodpacket() (poddevice_8401hr.pod_8401hr method)": [[4, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket"]], "translatepodpacket_binary() (poddevice_8401hr.pod_8401hr method)": [[4, "PodDevice_8401HR.POD_8401HR.TranslatePODpacket_Binary"]], "unpackpodpacket_binary() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR.UnpackPODpacket_Binary"]], "_read_binary() (poddevice_8401hr.pod_8401hr method)": [[4, "PodDevice_8401HR.POD_8401HR._Read_Binary"]], "_translatettlbyte() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR._TranslateTTLByte"]], "_voltage_primarychannels() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels"]], "_voltage_primarychannels_biosensor() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_Biosensor"]], "_voltage_primarychannels_eegemg() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR._Voltage_PrimaryChannels_EEGEMG"]], "_voltage_secondarychannels() (poddevice_8401hr.pod_8401hr static method)": [[4, "PodDevice_8401HR.POD_8401HR._Voltage_SecondaryChannels"]], "__b5binarylength (poddevice_8401hr.pod_8401hr attribute)": [[4, "PodDevice_8401HR.POD_8401HR.__B5BINARYLENGTH"]], "__b5length (poddevice_8401hr.pod_8401hr attribute)": [[4, "PodDevice_8401HR.POD_8401HR.__B5LENGTH"]], "__channelmapall (poddevice_8401hr.pod_8401hr attribute)": [[4, "PodDevice_8401HR.POD_8401HR.__CHANNELMAPALL"]], "_preampgain (poddevice_8401hr.pod_8401hr attribute)": [[4, "PodDevice_8401HR.POD_8401HR._preampGain"]], "_ssgain (poddevice_8401hr.pod_8401hr attribute)": [[4, "PodDevice_8401HR.POD_8401HR._ssGain"]], "asciibytestoint_split() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.ASCIIbytesToInt_Split"]], "asciibytestoint() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.AsciiBytesToInt"]], "binarybytestoint() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.BinaryBytesToInt"]], "binarybytestoint_split() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.BinaryBytesToInt_Split"]], "buildpodpacket_standard() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.BuildPODpacket_Standard"]], "checksum() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.Checksum"]], "etx() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.ETX"]], "inttoasciibytes() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.IntToAsciiBytes"]], "pod_packets (class in podpackethandling)": [[5, "PodPacketHandling.POD_Packets"]], "payloadtobytes() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.PayloadToBytes"]], "podpackethandling": [[5, "module-PodPacketHandling"]], "stx() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.STX"]], "twoscomplement() (podpackethandling.pod_packets static method)": [[5, "PodPacketHandling.POD_Packets.TwosComplement"]], "com_io (class in serialcommunication)": [[6, "SerialCommunication.COM_io"]], "closeserialport() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.CloseSerialPort"]], "getcomportslist() (serialcommunication.com_io static method)": [[6, "SerialCommunication.COM_io.GetCOMportsList"]], "getportname() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.GetPortName"]], "isserialclosed() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.IsSerialClosed"]], "isserialopen() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.IsSerialOpen"]], "openserialport() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.OpenSerialPort"]], "read() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.Read"]], "readline() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.ReadLine"]], "readuntil() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.ReadUntil"]], "serialcommunication": [[6, "module-SerialCommunication"]], "setbaudrate() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.SetBaudrate"]], "write() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.Write"]], "__buildportname() (serialcommunication.com_io method)": [[6, "SerialCommunication.COM_io.__BuildPortName"]], "__serialinst (serialcommunication.com_io attribute)": [[6, "SerialCommunication.COM_io.__serialInst"]], "getdevicename() (setup_8206hr.setup_8206hr static method)": [[7, "Setup_8206HR.Setup_8206HR.GetDeviceName"]], "setup_8206hr": [[7, "module-Setup_8206HR"]], "setup_8206hr (class in setup_8206hr)": [[7, "Setup_8206HR.Setup_8206HR"]], "stopstream() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR.StopStream"]], "_choosepreampgain() (setup_8206hr.setup_8206hr static method)": [[7, "Setup_8206HR.Setup_8206HR._ChoosePreampGain"]], "_connectpoddevice() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._GetParam_onePODdevice"]], "_isonedevicevalid() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._IsOneDeviceValid"]], "_lowpasskeys (setup_8206hr.setup_8206hr attribute)": [[7, "Setup_8206HR.Setup_8206HR._LOWPASSKEYS"]], "_name (setup_8206hr.setup_8206hr attribute)": [[7, "Setup_8206HR.Setup_8206HR._NAME"]], "_opensavefile_edf() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._OpenSaveFile_TXT"]], "_paramkeys (setup_8206hr.setup_8206hr attribute)": [[7, "Setup_8206HR.Setup_8206HR._PARAMKEYS"]], "_physical_bound_uv (setup_8206hr.setup_8206hr attribute)": [[7, "Setup_8206HR.Setup_8206HR._PHYSICAL_BOUND_uV"]], "_streamthreading() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._StreamThreading"]], "_streamuntilstop() (setup_8206hr.setup_8206hr method)": [[7, "Setup_8206HR.Setup_8206HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8206hr.setup_8206hr static method)": [[7, "Setup_8206HR.Setup_8206HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8206hr.setup_8206hr static method)": [[7, "Setup_8206HR.Setup_8206HR._WriteDataToFile_TXT"]], "getdevicename() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR.GetDeviceName"]], "setup_8401hr": [[8, "module-Setup_8401HR"]], "setup_8401hr (class in setup_8401hr)": [[8, "Setup_8401HR.Setup_8401HR"]], "stopstream() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR.StopStream"]], "_channelkeys (setup_8401hr.setup_8401hr attribute)": [[8, "Setup_8401HR.Setup_8401HR._CHANNELKEYS"]], "_codedcmode() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._CodeDCmode"]], "_codehighpass() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._CodeHighpass"]], "_connectpoddevice() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._ConnectPODdevice"]], "_getpoddeviceparametertable() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._GetParam_onePODdevice"]], "_getpreampdevicename() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._GetPreampDeviceName"]], "_ischanneltypevalid() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._IsChannelTypeValid"]], "_isonedevicevalid() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._IsOneDeviceValid"]], "_name (setup_8401hr.setup_8401hr attribute)": [[8, "Setup_8401HR.Setup_8401HR._NAME"]], "_niceabcdtabletext() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._NiceABCDtableText"]], "_opensavefile_edf() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._OpenSaveFile_TXT"]], "_paramkeys (setup_8401hr.setup_8401hr attribute)": [[8, "Setup_8401HR.Setup_8401HR._PARAMKEYS"]], "_physical_bound_uv (setup_8401hr.setup_8401hr attribute)": [[8, "Setup_8401HR.Setup_8401HR._PHYSICAL_BOUND_uV"]], "_setbias() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetBias"]], "_setdcmode() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetDCMode"]], "_setformappedchannels() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._SetForMappedChannels"]], "_sethighpass() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetHighpass"]], "_setlowpass() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetLowpass"]], "_setpreampgain() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetPreampGain"]], "_setssgain() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._SetSSGain"]], "_streamthreading() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._StreamThreading"]], "_streamuntilstop() (setup_8401hr.setup_8401hr method)": [[8, "Setup_8401HR.Setup_8401HR._StreamUntilStop"]], "_writedatatofile_edf() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._WriteDataToFile_EDF"]], "_writedatatofile_txt() (setup_8401hr.setup_8401hr static method)": [[8, "Setup_8401HR.Setup_8401HR._WriteDataToFile_TXT"]], "getoptions() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.GetOptions"]], "getpodparametersdict() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.GetPODparametersDict"]], "getsavefilename() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.GetSaveFileName"]], "run() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.Run"]], "setuppodparameters() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.SetupPODparameters"]], "setupsavefile() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices.SetupSaveFile"]], "setup_poddevices": [[9, "module-Setup_PodDevices"]], "setup_poddevices (class in setup_poddevices)": [[9, "Setup_PodDevices.Setup_PodDevices"]], "_askoption() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._AskOption"]], "_asktostopstream() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._AskToStopStream"]], "_askuserfordevices() (setup_poddevices.setup_poddevices static method)": [[9, "Setup_PodDevices.Setup_PodDevices._AskUserForDevices"]], "_checkfileext() (setup_poddevices.setup_poddevices static method)": [[9, "Setup_PodDevices.Setup_PodDevices._CheckFileExt"]], "_checkforvalidparams() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._CheckForValidParams"]], "_connectnewdevice() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._ConnectNewDevice"]], "_dooption() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._DoOption"]], "_editcheckconnect() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._EditCheckConnect"]], "_editsavefilepath() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._EditSaveFilePath"]], "_getchosendevicetype() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._GetChosenDeviceType"]], "_getfilename() (setup_poddevices.setup_poddevices static method)": [[9, "Setup_PodDevices.Setup_PodDevices._GetFileName"]], "_getfilepath() (setup_poddevices.setup_poddevices static method)": [[9, "Setup_PodDevices.Setup_PodDevices._GetFilePath"]], "_getparams() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._GetParams"]], "_printinitcode() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._PrintInitCode"]], "_printoptions() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._PrintOptions"]], "_printsavefile() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._PrintSaveFile"]], "_reconnect() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._Reconnect"]], "_removedevice() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._RemoveDevice"]], "_setfilenametodevices() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._SetFilenameToDevices"]], "_set_setup_poddevices() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._Set_Setup_PodDevices"]], "_setup_poddevices (setup_poddevices.setup_poddevices attribute)": [[9, "Setup_PodDevices.Setup_PodDevices._Setup_PodDevices"]], "_showcurrentsettings() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._ShowCurrentSettings"]], "_stream() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._Stream"]], "_streamalldevices() (setup_poddevices.setup_poddevices method)": [[9, "Setup_PodDevices.Setup_PodDevices._StreamAllDevices"]], "_timefunc() (setup_poddevices.setup_poddevices static method)": [[9, "Setup_PodDevices.Setup_PodDevices._TimeFunc"]], "_options (setup_poddevices.setup_poddevices attribute)": [[9, "Setup_PodDevices.Setup_PodDevices._options"]], "_savefilename (setup_poddevices.setup_poddevices attribute)": [[9, "Setup_PodDevices.Setup_PodDevices._saveFileName"]], "aredeviceparamsvalid() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.AreDeviceParamsValid"]], "connectallpoddevices() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.ConnectAllPODdevices"]], "displaypoddeviceparameters() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.DisplayPODdeviceParameters"]], "getdevicename() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface.GetDeviceName"]], "getpodparametersdict() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.GetPODparametersDict"]], "setfilename() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.SetFileName"]], "setuppodparameters() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.SetupPODparameters"]], "setup_interface (class in setup_podinterface)": [[10, "Setup_PodInterface.Setup_Interface"]], "setup_podinterface": [[10, "module-Setup_PodInterface"]], "stopstream() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.StopStream"]], "stream() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface.Stream"]], "_addpoddevice() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._AddPODdevice"]], "_buildfilename() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._BuildFileName"]], "_chooseport() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._ChoosePort"]], "_connectpoddevice() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._ConnectPODdevice"]], "_disconnectallpoddevices() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._DisconnectAllPODdevices"]], "_editparams() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._EditParams"]], "_getforbiddennames() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._GetForbiddenNames"]], "_getpoddeviceparametertable() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._GetPODdeviceParameterTable"]], "_getparam_onepoddevice() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._GetParam_onePODdevice"]], "_getportslist() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._GetPortsList"]], "_gettimeheader_fortxt() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._GetTimeHeader_forTXT"]], "_isonedevicevalid() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._IsOneDeviceValid"]], "_name (setup_podinterface.setup_interface attribute)": [[10, "Setup_PodInterface.Setup_Interface._NAME"]], "_opensavefile() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._OpenSaveFile"]], "_opensavefile_edf() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._OpenSaveFile_EDF"]], "_opensavefile_txt() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._OpenSaveFile_TXT"]], "_portkey (setup_podinterface.setup_interface attribute)": [[10, "Setup_PodInterface.Setup_Interface._PORTKEY"]], "_printdevicenumber() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._PrintDeviceNumber"]], "_removedevice() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._RemoveDevice"]], "_selectdevicefromdict() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._SelectDeviceFromDict"]], "_setnumberofdevices() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._SetNumberOfDevices"]], "_setparam_allpoddevices() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._SetParam_allPODdevices"]], "_streamthreading() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._StreamThreading"]], "_testdeviceconnection() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._TestDeviceConnection"]], "_testdeviceconnection_all() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._TestDeviceConnection_All"]], "_validateparams() (setup_podinterface.setup_interface method)": [[10, "Setup_PodInterface.Setup_Interface._ValidateParams"]], "_poddevices (setup_podinterface.setup_interface attribute)": [[10, "Setup_PodInterface.Setup_Interface._podDevices"]], "_podparametersdict (setup_podinterface.setup_interface attribute)": [[10, "Setup_PodInterface.Setup_Interface._podParametersDict"]], "_savefilename (setup_podinterface.setup_interface attribute)": [[10, "Setup_PodInterface.Setup_Interface._saveFileName"]], "_uv() (setup_podinterface.setup_interface static method)": [[10, "Setup_PodInterface.Setup_Interface._uV"]]}})